import {
  Animation,
  Fade,
  Reveal,
  useAnimation
} from "./chunk-2SAW7IS7.js";
import {
  Button
} from "./chunk-FUIIQ4Y4.js";
import {
  caretAltDownIcon,
  caretAltLeftIcon,
  caretAltRightIcon,
  caretAltUpIcon,
  checkOutlineIcon,
  chevronDownIcon,
  chevronRightIcon,
  chevronUpIcon,
  exclamationCircleIcon
} from "./chunk-RFS2H3W2.js";
import {
  provideLocalizationService,
  useLocalization
} from "./chunk-NQBGXZOD.js";
import {
  Popup
} from "./chunk-XVBPUVJV.js";
import {
  Draggable,
  FOCUSABLE_ELEMENTS,
  IconWrap,
  Keys,
  Navigation,
  classNames,
  dispatchEvent,
  focusFirstFocusableChild,
  getTabIndex,
  getter,
  guid,
  kendoThemeMaps,
  svgIconPropType,
  toIconName,
  useAsyncFocusBlur,
  useDir,
  useRtl,
  validatePackage,
  validatePackage2
} from "./chunk-KTMNFILY.js";
import {
  require_prop_types
} from "./chunk-O6GWARG4.js";
import {
  require_react
} from "./chunk-ABDRZE5M.js";
import {
  __toESM
} from "./chunk-LFBQMW2U.js";

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStrip.js
var React4 = __toESM(require_react());
var PropTypes4 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStripNavigation.js
var React2 = __toESM(require_react());
var PropTypes2 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStripNavigationItem.js
var React = __toESM(require_react());
var PropTypes = __toESM(require_prop_types());
var __extends = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var TabStripNavigationItem = (
  /** @class */
  function(_super) {
    __extends(TabStripNavigationItem2, _super);
    function TabStripNavigationItem2() {
      var _this2 = _super !== null && _super.apply(this, arguments) || this;
      _this2.onClick = function() {
        if (_this2.props.onSelect) {
          _this2.props.onSelect(_this2.props.index);
        }
      };
      return _this2;
    }
    TabStripNavigationItem2.prototype.render = function() {
      var _a3;
      var _b = this.props, id = _b.id, active = _b.active, disabled = _b.disabled, _c = _b.title, title = _c === void 0 ? "Untitled" : _c, first = _b.first, last = _b.last;
      var props = {
        "id": id,
        "aria-selected": active,
        "aria-controls": id,
        "aria-disabled": disabled,
        "aria-hidden": disabled,
        "role": "tab",
        onClick: !disabled ? this.onClick : void 0
      };
      var itemClasses = classNames("k-item", (_a3 = {}, _a3["k-first"] = first, _a3["k-last"] = last, _a3["k-disabled"] = disabled, _a3["k-active"] = active, _a3));
      return React.createElement(
        "li",
        __assign({}, props, { className: itemClasses }),
        React.createElement("span", { className: "k-link" }, title)
      );
    };
    TabStripNavigationItem2.propTypes = {
      active: PropTypes.bool,
      disabled: PropTypes.bool,
      index: PropTypes.number,
      onSelect: PropTypes.func,
      title: PropTypes.oneOfType([
        PropTypes.string,
        PropTypes.element
      ]),
      first: PropTypes.bool,
      last: PropTypes.bool
    };
    return TabStripNavigationItem2;
  }(React.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStripNavigation.js
var __extends2 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var times = function(count) {
  return Array.apply(null, Array(count));
};
var preventDefault = function(e) {
  return e.preventDefault();
};
var DEFAULT_SCROLL_BEHAVIOR = "smooth";
var PREV = "prev";
var NEXT = "next";
var TabStripNavigation = (
  /** @class */
  function(_super) {
    __extends2(TabStripNavigation2, _super);
    function TabStripNavigation2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2.itemsNavRef = React2.createRef();
      _this2.isRtl = function() {
        return _this2.props.dir === "rtl";
      };
      _this2.onWheel = function(e) {
        e.stopPropagation();
        var direction = e.deltaY < 0 ? PREV : NEXT;
        _this2.setNewScrollPosition(direction, e);
      };
      _this2.arrowClickPrev = function(e) {
        _this2.handleArrowClick(PREV, e);
      };
      _this2.arrowClickNext = function(e) {
        _this2.handleArrowClick(NEXT, e);
      };
      _this2.handleArrowClick = function(direction, e) {
        _this2.setNewScrollPosition(direction, e);
      };
      _this2.setNewScrollPosition = function(direction, e) {
        var list = _this2.itemsNavRef.current;
        if (!list) {
          return;
        }
        var horizontal = _this2.horizontalScroll();
        var scrollEnd = horizontal ? list.scrollWidth - list.offsetWidth : list.scrollHeight - list.offsetHeight;
        var increment = (e.type === "click" ? _this2.props.buttonScrollSpeed : _this2.props.mouseScrollSpeed) || 0;
        var scrollPosition = horizontal ? list.scrollLeft : list.scrollTop;
        var nextScrollPosition = horizontal ? list.scrollWidth - list.scrollLeft : list.scrollHeight - list.scrollTop;
        var nextScrollPositionRtl = list.scrollWidth - list.scrollLeft * -1;
        if (_this2.isRtl() && _this2.horizontalScroll()) {
          if (direction === PREV && scrollPosition < 0) {
            scrollPosition += increment;
            nextScrollPositionRtl += increment;
          }
          if (direction === NEXT && scrollPosition < scrollEnd) {
            scrollPosition -= increment;
            nextScrollPositionRtl -= increment;
          }
          scrollPosition = Math.min(0, Math.min(scrollEnd, scrollPosition));
        } else {
          if (direction === PREV && scrollPosition > 0) {
            scrollPosition -= increment;
            nextScrollPosition += increment;
          }
          if (direction === NEXT && scrollPosition < scrollEnd) {
            scrollPosition += increment;
            nextScrollPosition -= increment;
          }
          scrollPosition = Math.max(0, Math.min(scrollEnd, scrollPosition));
        }
        var calculatePrev = scrollPosition === 0;
        var scrollBehavior = e.type === "click" ? DEFAULT_SCROLL_BEHAVIOR : void 0;
        if (horizontal) {
          var calculateNext = _this2.isRtl() ? Math.round(nextScrollPositionRtl) <= list.clientWidth || Math.floor(nextScrollPositionRtl) <= list.clientWidth : Math.round(nextScrollPosition) <= list.clientWidth || Math.floor(nextScrollPosition) <= list.clientWidth;
          _this2.setState({
            disabledPrev: calculatePrev,
            disabledNext: calculateNext
          });
          list.scrollTo({ left: scrollPosition, behavior: scrollBehavior });
        } else {
          _this2.setState({
            disabledPrev: calculatePrev,
            disabledNext: Math.round(nextScrollPosition) <= list.clientHeight || Math.floor(nextScrollPosition) <= list.clientHeight
          });
          list.scrollTo({ top: scrollPosition, behavior: scrollBehavior });
        }
      };
      _this2.renderArrow = function(type, disabled) {
        var horizontal = _this2.horizontalScroll();
        var directions = {
          prev: {
            arrowTab: "k-tabstrip-prev",
            arrow: horizontal ? "caret-alt-left" : "caret-alt-up"
          },
          next: {
            arrowTab: "k-tabstrip-next",
            arrow: horizontal ? "caret-alt-right" : "caret-alt-down"
          }
        };
        var ButtonComponent = (type === PREV ? _this2.props.prevButton : _this2.props.nextButton) || Button;
        var onClick = type === PREV ? _this2.arrowClickPrev : _this2.arrowClickNext;
        return React2.createElement(ButtonComponent, { disabled, className: "".concat(directions[type].arrowTab), onClick, icon: directions[type].arrow, onMouseDown: preventDefault, tabIndex: -1, fillMode: "flat" });
      };
      _this2.state = {
        disabledPrev: _this2.props.selected === 0,
        disabledNext: _this2.props.selected === React2.Children.count(_this2.props.children) - 1
      };
      return _this2;
    }
    TabStripNavigation2.prototype.componentDidMount = function() {
      if (this.props.scrollable) {
        this.scrollToSelected();
      }
    };
    TabStripNavigation2.prototype.componentDidUpdate = function(prevProps) {
      var _a3 = this.props, scrollable = _a3.scrollable, selected = _a3.selected;
      if (scrollable && prevProps.selected !== selected) {
        this.scrollToSelected();
        this.setState({
          disabledPrev: selected === 0,
          disabledNext: selected === React2.Children.count(this.props.children) - 1
        });
      }
    };
    TabStripNavigation2.prototype.render = function() {
      var _a3 = this.props, selected = _a3.selected, tabPosition = _a3.tabPosition, children = _a3.children, onSelect = _a3.onSelect, onKeyDown = _a3.onKeyDown;
      var tabsCount = React2.Children.count(children);
      var childElements = React2.Children.toArray(children);
      var tabs;
      if (children) {
        tabs = times(tabsCount).map(function(_, index, array3) {
          var tabProps = {
            active: selected === index,
            disabled: childElements[index].props.disabled,
            index,
            title: childElements[index].props.title,
            first: index === 0,
            last: index === array3.length - 1,
            onSelect
          };
          return React2.createElement(TabStripNavigationItem, __assign2({ key: index }, tabProps));
        });
      }
      var wrapperClasses = classNames("k-tabstrip-items-wrapper", {
        "k-hstack": tabPosition === "top" || tabPosition === "bottom",
        "k-vstack": tabPosition === "left" || tabPosition === "right"
      });
      var navClasses = classNames("k-tabstrip-items", "k-reset");
      return React2.createElement("div", { className: wrapperClasses }, this.props.scrollable ? React2.createElement(
        React2.Fragment,
        null,
        this.renderArrow(PREV, this.state.disabledPrev),
        React2.createElement("ul", { ref: this.itemsNavRef, className: navClasses, role: "tablist", tabIndex: this.props.tabIndex, onKeyDown, onWheel: this.onWheel }, tabs),
        this.renderArrow(NEXT, this.state.disabledNext)
      ) : React2.createElement("ul", { className: navClasses, role: "tablist", tabIndex: this.props.tabIndex, onKeyDown }, tabs));
    };
    TabStripNavigation2.prototype.scrollToSelected = function() {
      var _a3, _b, _c, _d;
      var list = this.itemsNavRef.current;
      var tab = list && list.children[this.props.selected || 0];
      if (tab instanceof HTMLElement && list instanceof HTMLElement) {
        var horizontal = this.horizontalScroll();
        var listSize = horizontal ? list.offsetWidth : list.offsetHeight;
        var tabSize = horizontal ? tab.offsetWidth : tab.offsetHeight;
        var scrollDir = horizontal ? "left" : "top";
        var currentScrollOffset = horizontal ? list.scrollLeft : list.scrollTop;
        var scrollPosition = 0;
        if (this.isRtl()) {
          var tabOffset = tab.offsetLeft;
          currentScrollOffset = currentScrollOffset * -1;
          if (tabOffset < 0) {
            scrollPosition = tabOffset - tabSize + list.offsetLeft;
            list.scrollTo((_a3 = {}, _a3[scrollDir] = scrollPosition, _a3.behavior = DEFAULT_SCROLL_BEHAVIOR, _a3));
          } else if (tabOffset + tabSize > listSize - currentScrollOffset) {
            scrollPosition = currentScrollOffset + tabOffset - tabSize;
            list.scrollTo((_b = {}, _b[scrollDir] = scrollPosition, _b.behavior = DEFAULT_SCROLL_BEHAVIOR, _b));
          }
        } else {
          var tabOffset = horizontal ? tab.offsetLeft - list.offsetLeft : tab.offsetTop - list.offsetTop;
          if (currentScrollOffset + listSize < tabOffset + tabSize) {
            scrollPosition = tabOffset + tabSize - listSize;
            list.scrollTo((_c = {}, _c[scrollDir] = scrollPosition, _c.behavior = DEFAULT_SCROLL_BEHAVIOR, _c));
          } else if (currentScrollOffset > tabOffset) {
            scrollPosition = tabOffset;
            list.scrollTo((_d = {}, _d[scrollDir] = scrollPosition, _d.behavior = DEFAULT_SCROLL_BEHAVIOR, _d));
          }
        }
      }
    };
    TabStripNavigation2.prototype.horizontalScroll = function() {
      return /top|bottom/.test(this.props.tabPosition || "top");
    };
    ;
    TabStripNavigation2.propTypes = {
      children: PropTypes2.oneOfType([
        PropTypes2.element,
        PropTypes2.arrayOf(PropTypes2.element)
      ]),
      onSelect: PropTypes2.func,
      onKeyDown: PropTypes2.func,
      selected: PropTypes2.number,
      tabIndex: PropTypes2.number
    };
    return TabStripNavigation2;
  }(React2.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStripContent.js
var React3 = __toESM(require_react());
var PropTypes3 = __toESM(require_prop_types());
var __extends3 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var TabStripContent = (
  /** @class */
  function(_super) {
    __extends3(TabStripContent2, _super);
    function TabStripContent2() {
      var _this2 = _super !== null && _super.apply(this, arguments) || this;
      _this2.contentId = guid();
      _this2.childFactory = function(child) {
        return React3.cloneElement(child, __assign3(__assign3({}, child.props), { in: child.props.children.props.id === String(_this2.contentId + _this2.props.selected) }));
      };
      return _this2;
    }
    TabStripContent2.prototype.render = function() {
      var _a3 = this.props, children = _a3.children, selected = _a3.selected;
      var selectedTab = children && typeof selected === "number" && React3.Children.toArray(children)[selected];
      var contentClasses = classNames("k-content", "k-active", selectedTab && selectedTab.props.contentClassName);
      return React3.createElement("div", { className: contentClasses, style: this.props.style }, this.renderContent(children));
    };
    TabStripContent2.prototype.renderContent = function(children) {
      var _this2 = this;
      return !this.props.keepTabsMounted ? this.renderChild(React3.Children.toArray(children)[this.props.selected], this.props.selected) : React3.Children.map(this.props.children, function(tab, idx) {
        return _this2.renderChild(tab, idx);
      });
    };
    TabStripContent2.prototype.renderChild = function(tab, idx) {
      var visible = idx === this.props.selected;
      var contentProps = {
        "role": "tabpanel",
        "aria-expanded": true,
        "aria-labelledby": idx.toString(),
        "style": {
          "display": visible ? void 0 : "none"
        }
      };
      var animationStyle = {
        position: "initial",
        display: visible ? void 0 : "none"
      };
      if (tab.props.disabled) {
        return null;
      }
      return this.props.animation ? React3.createElement(
        Fade,
        { appear: true, exit: this.props.keepTabsMounted, style: animationStyle, childFactory: this.props.keepTabsMounted ? this.childFactory : void 0 },
        React3.createElement("div", __assign3({}, contentProps, { id: String(this.contentId + idx), key: idx }), tab.props.children)
      ) : React3.createElement("div", __assign3({}, contentProps, { key: idx }), tab.props.children);
    };
    TabStripContent2.propTypes = {
      animation: PropTypes3.bool,
      children: PropTypes3.oneOfType([
        PropTypes3.element,
        PropTypes3.arrayOf(PropTypes3.element)
      ]),
      selected: PropTypes3.number,
      style: PropTypes3.object
    };
    return TabStripContent2;
  }(React3.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-react-layout",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1680171781,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStrip.js
var __extends4 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var TabStrip = (
  /** @class */
  function(_super) {
    __extends4(TabStrip2, _super);
    function TabStrip2(props) {
      var _a3;
      var _this2 = _super.call(this, props) || this;
      _this2._element = null;
      _this2.keyBinding = (_a3 = {}, _a3[Keys.left] = function() {
        return _this2.prevNavigatableTab();
      }, _a3[Keys.right] = function() {
        return _this2.nextNavigatableTab();
      }, _a3[Keys.down] = function() {
        return _this2.nextNavigatableTab();
      }, _a3[Keys.up] = function() {
        return _this2.prevNavigatableTab();
      }, _a3[Keys.home] = function() {
        return 0;
      }, _a3[Keys.end] = function() {
        return React4.Children.count(_this2.props.children) - 1;
      }, _a3);
      _this2.onSelect = function(index) {
        if (_this2.props.selected !== index) {
          if (_this2.props.onSelect) {
            _this2.props.onSelect({
              selected: index
            });
          }
        }
      };
      _this2.onKeyDown = function(event) {
        var handler;
        switch (event.keyCode) {
          case Keys.left:
            handler = _this2.keyBinding[_this2.invertKeys(Keys.left, Keys.right)];
            break;
          case Keys.right:
            handler = _this2.keyBinding[_this2.invertKeys(Keys.right, Keys.left)];
            break;
          case Keys.up:
            handler = _this2.keyBinding[Keys.up];
            break;
          case Keys.down:
            handler = _this2.keyBinding[Keys.down];
            break;
          case Keys.home:
            handler = _this2.keyBinding[Keys.home];
            break;
          case Keys.end:
            handler = _this2.keyBinding[Keys.end];
            break;
          default:
            break;
        }
        if (handler) {
          event.preventDefault();
          _this2.onSelect(handler());
        }
      };
      _this2.renderContent = function(tabProps) {
        var selected = tabProps.selected, children = tabProps.children, tabContentStyle = tabProps.tabContentStyle;
        var childrenCount = React4.Children.count(children);
        if (selected < childrenCount && selected > -1) {
          return React4.createElement(TabStripContent, __assign4({ index: selected }, tabProps, { style: tabContentStyle }));
        }
        return null;
      };
      _this2.firstNavigatableTab = function() {
        var children = _this2.children();
        var length = React4.Children.count(children);
        if (children) {
          for (var i = 0; i < length; i++) {
            if (!children[i].props.disabled) {
              return i;
            }
          }
        }
      };
      _this2.lastNavigatableTab = function() {
        var children = _this2.children();
        var length = React4.Children.count(children);
        if (children) {
          for (var i = length - 1; i > 0; i--) {
            if (!children[i].props.disabled) {
              return i;
            }
          }
        }
      };
      _this2.prevNavigatableTab = function() {
        var children = _this2.children();
        var selected = _this2.props.selected;
        var index = selected ? selected - 1 : -1;
        if (index < 0) {
          return _this2.lastNavigatableTab();
        }
        if (children) {
          for (var i = index; i > -1; i--) {
            if (!children[i].props.disabled) {
              return i;
            }
            if (i === 0) {
              return _this2.lastNavigatableTab();
            }
          }
        }
      };
      _this2.nextNavigatableTab = function() {
        var children = _this2.children();
        var selected = _this2.props.selected;
        var index = selected ? selected + 1 : 1;
        var childrenCount = React4.Children.count(children);
        if (index >= childrenCount) {
          return _this2.firstNavigatableTab();
        }
        if (children) {
          for (var i = index; i < childrenCount; i++) {
            if (!children[i].props.disabled) {
              return i;
            }
            if (i + 1 === childrenCount) {
              return _this2.firstNavigatableTab();
            }
          }
        }
      };
      validatePackage2(packageMetadata);
      return _this2;
    }
    TabStrip2.prototype.render = function() {
      var _this2 = this;
      var tabProps = __assign4(__assign4({}, this.props), { children: this.children(), onKeyDown: this.onKeyDown, onSelect: this.onSelect });
      var tabPosition = tabProps.tabPosition, _a3 = tabProps.tabIndex, tabIndex = _a3 === void 0 ? 0 : _a3;
      var bottom = tabPosition === "bottom";
      var componentClasses = classNames("k-tabstrip", {
        "k-tabstrip-left": tabPosition === "left",
        "k-tabstrip-right": tabPosition === "right",
        "k-tabstrip-bottom": tabPosition === "bottom",
        "k-tabstrip-top": tabPosition === "top",
        "k-tabstrip-scrollable": this.props.scrollable
      }, this.props.className);
      return React4.createElement(
        "div",
        { id: this.props.id, ref: function(div) {
          return _this2._element = div;
        }, dir: this.props.dir, className: componentClasses, style: this.props.style },
        !bottom && React4.createElement(TabStripNavigation, __assign4({}, tabProps, { tabIndex })),
        this.renderContent(tabProps),
        bottom && React4.createElement(TabStripNavigation, __assign4({}, tabProps, { tabIndex }))
      );
    };
    TabStrip2.prototype.invertKeys = function(original, inverted) {
      var rtl = this._element && getComputedStyle(this._element).direction === "rtl" || false;
      return rtl ? inverted : original;
    };
    TabStrip2.prototype.children = function() {
      return React4.Children.toArray(this.props.children).filter(function(c) {
        return c;
      });
    };
    TabStrip2.propTypes = {
      animation: PropTypes4.bool,
      children: PropTypes4.node,
      onSelect: PropTypes4.func,
      selected: PropTypes4.number,
      style: PropTypes4.object,
      tabContentStyle: PropTypes4.object,
      tabPosition: PropTypes4.string,
      tabIndex: PropTypes4.number,
      className: PropTypes4.string,
      dir: PropTypes4.string
    };
    TabStrip2.defaultProps = {
      animation: true,
      tabPosition: "top",
      keepTabsMounted: false,
      buttonScrollSpeed: 100,
      mouseScrollSpeed: 10
    };
    return TabStrip2;
  }(React4.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/tabstrip/TabStripTab.js
var React5 = __toESM(require_react());
var PropTypes5 = __toESM(require_prop_types());
var __extends5 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var TabStripTab = (
  /** @class */
  function(_super) {
    __extends5(TabStripTab2, _super);
    function TabStripTab2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    TabStripTab2.prototype.render = function() {
      return null;
    };
    TabStripTab2.propTypes = {
      disabled: PropTypes5.bool,
      contentClassName: PropTypes5.string,
      children: PropTypes5.oneOfType([
        PropTypes5.element,
        PropTypes5.node
      ]),
      title: PropTypes5.oneOfType([
        PropTypes5.string,
        PropTypes5.element,
        PropTypes5.node
      ])
    };
    return TabStripTab2;
  }(React5.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/panelbar/PanelBar.js
var React8 = __toESM(require_react());
var PropTypes7 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/panelbar/PanelBarItem.js
var React6 = __toESM(require_react());
var PropTypes6 = __toESM(require_prop_types());
var __extends6 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
function iconElement(_a3) {
  var imageUrl = _a3.imageUrl, icon = _a3.icon, svgIcon = _a3.svgIcon, iconClass = _a3.iconClass;
  if (imageUrl) {
    return React6.createElement("img", { role: "presentation", className: "k-panelbar-item-icon k-image", src: imageUrl });
  } else if (icon || svgIcon) {
    return React6.createElement(IconWrap, { className: "k-panelbar-item-icon", name: icon, icon: svgIcon });
  } else if (iconClass) {
    return React6.createElement("span", { role: "presentation", className: "k-panelbar-item-icon " + iconClass });
  }
  return null;
}
var PanelBarItem = (
  /** @class */
  function(_super) {
    __extends6(PanelBarItem2, _super);
    function PanelBarItem2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2.handleItemClick = function() {
        var _a3 = _this2.props, onSelect = _a3.onSelect, disabled = _a3.disabled, id = _a3.id;
        if (onSelect && !disabled) {
          onSelect.call(void 0, {
            uniquePrivateKey: _this2.props.uniquePrivateKey,
            id,
            target: _this2
          });
        }
      };
      _this2.childFactory = function(child) {
        if (_this2.props.keepItemsMounted) {
          return React6.cloneElement(child, __assign5(__assign5({}, child.props), { in: _this2.props.expanded }));
        }
        return child;
      };
      _this2.state = {
        show: props.expanded || false
      };
      return _this2;
    }
    PanelBarItem2.prototype.render = function() {
      var _this2 = this;
      var _a3 = this.props, id = _a3.id, children = _a3.children, title = _a3.title, uniquePrivateKey = _a3.uniquePrivateKey, disabled = _a3.disabled, selected = _a3.selected, focused = _a3.focused, expanded = _a3.expanded, className = _a3.className, level = _a3.level, headerClassName = _a3.headerClassName, animation = _a3.animation, keepItemsMounted = _a3.keepItemsMounted;
      var panelBarItemAriaAttributes = {
        "role": "treeitem",
        "aria-disabled": disabled,
        "aria-hidden": !disabled && !expanded,
        "aria-selected": !disabled && selected,
        "aria-expanded": !disabled && expanded && !!children
      };
      var panelBarItemClassName = classNames("k-panelbar-item", {
        "k-panelbar-header": level === 0,
        "k-expanded": expanded && !!children,
        "k-disabled": disabled
      }, "k-level-".concat(level), className);
      var panelBarLinkClassName = classNames("k-link", {
        "k-selected": !disabled && selected,
        "k-focus": !disabled && focused
      }, headerClassName);
      var animationStyle = { display: "block" };
      var icon = iconElement(this.props);
      var arrow = !disabled && children ? React6.createElement(IconWrap, { name: expanded ? "chevron-up" : "chevron-down", icon: expanded ? chevronUpIcon : chevronDownIcon, className: classNames("k-panelbar-toggle", expanded ? "k-panelbar-collapse" : "k-panelbar-expand") }) : null;
      var opened = !disabled && expanded;
      var content = opened || keepItemsMounted ? React6.createElement("ul", { role: "group", "aria-expanded": expanded, "aria-hidden": !expanded, className: "k-panelbar-group k-panel k-group", style: { display: keepItemsMounted ? this.state.show ? "block" : "none" : "block" } }, children) : null;
      var child = (animation !== void 0 ? animation : true) && !disabled && children ? React6.createElement(Reveal, { transitionEnterDuration: 200, transitionExitDuration: 200, key: uniquePrivateKey + "_animation", style: animationStyle, children: content, childFactory: keepItemsMounted && this.childFactory, unmountOnExit: !keepItemsMounted, onBeforeEnter: function() {
        return keepItemsMounted && _this2.setState({ show: true });
      }, onAfterExited: function() {
        return keepItemsMounted && _this2.setState({ show: false });
      } }) : content;
      return React6.createElement(
        "li",
        __assign5({ id, className: panelBarItemClassName }, panelBarItemAriaAttributes),
        React6.createElement(
          "span",
          { className: panelBarLinkClassName, onClick: this.handleItemClick },
          icon,
          React6.createElement("span", { className: "k-panelbar-item-text" }, title),
          arrow
        ),
        child
      );
    };
    PanelBarItem2.propTypes = {
      animation: PropTypes6.bool,
      children: PropTypes6.any,
      className: PropTypes6.string,
      icon: PropTypes6.string,
      iconClass: PropTypes6.string,
      imageUrl: PropTypes6.string,
      svgIcon: svgIconPropType,
      expanded: PropTypes6.bool,
      disabled: PropTypes6.bool,
      onSelect: PropTypes6.func,
      selected: PropTypes6.bool,
      level: PropTypes6.number,
      title: PropTypes6.oneOfType([
        PropTypes6.string,
        PropTypes6.element
      ]),
      id: PropTypes6.oneOfType([
        PropTypes6.string,
        PropTypes6.number
      ]),
      focused: PropTypes6.bool,
      keepItemsMounted: PropTypes6.bool
    };
    PanelBarItem2.defaultProps = {
      title: "Untitled"
    };
    return PanelBarItem2;
  }(React6.PureComponent)
);

// node_modules/@progress/kendo-react-layout/dist/es/panelbar/util.js
var React7 = __toESM(require_react());
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var __spreadArray = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var renderChildren = function(_a3) {
  var _b = _a3.animation, animation = _b === void 0 ? true : _b, _c = _a3.keepItemsMounted, keepItemsMounted = _c === void 0 ? false : _c, state = _a3.state, expanded = _a3.expanded, handleSelect = _a3.handleSelect, children = _a3.children, _d = _a3.parentExpanded, parentExpanded = _d === void 0 ? true : _d, _e = _a3.level, level = _e === void 0 ? 0 : _e, _f = _a3.parentPrivateKey, parentPrivateKey = _f === void 0 ? [] : _f;
  return React7.Children.map(children, function(child, idx) {
    if (child && child.type === PanelBarItem) {
      var nestedChildren = void 0;
      var privateKey = getId(child, parentPrivateKey, idx);
      if (child.props.children) {
        var renderState = {
          animation,
          keepItemsMounted,
          state,
          expanded,
          handleSelect,
          children: child.props.children,
          parentExpanded: (expanded || []).indexOf(privateKey) > -1,
          level: level + 1,
          parentPrivateKey: __spreadArray(__spreadArray([], parentPrivateKey, true), [privateKey], false)
        };
        nestedChildren = renderChildren(renderState);
      }
      return React7.cloneElement(child, __assign6(__assign6({}, child.props), { animation: child.props.animation !== void 0 ? child.props.animation : animation, keepItemsMounted, id: child.props.id || "k-panelbar-item-default-".concat(privateKey), uniquePrivateKey: privateKey, parentUniquePrivateKey: parentPrivateKey, parentExpanded, level, expanded: (expanded || []).indexOf(privateKey) > -1, focused: state.focused === privateKey && state.wrapperFocused, selected: state.selected === privateKey, children: nestedChildren, onSelect: handleSelect }));
    } else {
      return React7.createElement("div", { className: "k-panelbar-content k-content" }, child);
    }
  });
};
var getFirstId = function(props) {
  var firstItem = React7.Children.toArray(props.children)[0];
  if (firstItem) {
    return getId(firstItem, [], 0);
  }
  return "";
};
var getInitialState = function(props, expandMode, result, parentExpanded, parentPrivateKey) {
  if (result === void 0) {
    result = {
      expanded: props.expanded || [],
      selected: props.selected || "",
      focused: props.focused || "",
      wrapperFocused: false
    };
  }
  if (parentExpanded === void 0) {
    parentExpanded = true;
  }
  if (parentPrivateKey === void 0) {
    parentPrivateKey = [];
  }
  React7.Children.map(props.children, function(child, idx) {
    if (child && child.type === PanelBarItem) {
      var privateKey = getId(child, parentPrivateKey, idx);
      if (!child.props.disabled && parentExpanded) {
        if (child.props.selected) {
          result.selected = privateKey;
        }
        if (child.props.focused) {
          result.focused = privateKey;
        }
        if (child.props.expanded) {
          if (expandMode === "multiple") {
            result.expanded.push(privateKey);
          } else if (expandMode === "single") {
            result.expanded = [privateKey];
          }
        }
        if (child.props.children) {
          result = getInitialState(child.props, expandMode, result, !!child.props.expanded, __spreadArray(__spreadArray([], parentPrivateKey, true), [privateKey], false));
        }
      }
    }
  });
  return result;
};
var getId = function(child, parentPrivateKey, idx) {
  return child && child.props && child.props.id ? child.props.id : parentPrivateKey.length ? parentPrivateKey[parentPrivateKey.length - 1] + ".".concat(idx) : ".".concat(idx);
};
function flatVisibleItems(data, flattedItems) {
  if (flattedItems === void 0) {
    flattedItems = [];
  }
  (data || []).forEach(function(item) {
    if (!item.disabled) {
      flattedItems.push(item);
      if (item.expanded && item.children) {
        flatVisibleItems(item.children, flattedItems);
      }
    }
  });
  return flattedItems;
}
function flatChildren(children, flattenChildren) {
  if (flattenChildren === void 0) {
    flattenChildren = [];
  }
  React7.Children.forEach(children, function(child) {
    if (child && child.props && !child.props.disabled) {
      flattenChildren.push(child);
      if (child.props.children) {
        flatChildren(child.props.children, flattenChildren);
      }
    }
  });
  return flattenChildren;
}
function flatVisibleChildren(children, flattenVisibleChildren) {
  if (flattenVisibleChildren === void 0) {
    flattenVisibleChildren = [];
  }
  React7.Children.forEach(children, function(child) {
    if (child && child.props && !child.props.disabled && (child.props.expanded || child.props.parentExpanded)) {
      flattenVisibleChildren.push(child);
      if (child.props.children) {
        flatVisibleChildren(child.props.children, flattenVisibleChildren);
      }
    }
  });
  return flattenVisibleChildren;
}
var isPresent = function(value) {
  return value !== null && value !== void 0;
};
var PanelBarUtils;
(function(PanelBarUtils2) {
  function mapItemsToComponents(items) {
    return items.map(function(item, idx) {
      var children;
      if (item.content) {
        children = item.content;
      }
      if (item.children) {
        children = mapItemsToComponents(item.children);
      }
      return React7.createElement(PanelBarItem, __assign6({}, item, { children, key: item.id || idx }));
    });
  }
  PanelBarUtils2.mapItemsToComponents = mapItemsToComponents;
})(PanelBarUtils || (PanelBarUtils = {}));
var isArrayEqual = function(firstArray, secondArray) {
  if (firstArray.length !== secondArray.length) {
    return false;
  }
  return firstArray.every(function(ex, i) {
    return ex === secondArray[i];
  });
};

// node_modules/@progress/kendo-react-layout/dist/es/panelbar/interfaces/NavigationAction.js
var NavigationAction;
(function(NavigationAction2) {
  NavigationAction2[NavigationAction2["Toggle"] = 0] = "Toggle";
  NavigationAction2[NavigationAction2["Next"] = 1] = "Next";
  NavigationAction2[NavigationAction2["Previous"] = 2] = "Previous";
})(NavigationAction || (NavigationAction = {}));

// node_modules/@progress/kendo-react-layout/dist/es/panelbar/PanelBar.js
var __extends7 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var __spreadArray2 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var PanelBar = (
  /** @class */
  function(_super) {
    __extends7(PanelBar2, _super);
    function PanelBar2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2._element = null;
      _this2.handleSelect = function(event) {
        _this2.onSelect(event);
        _this2.onFocus(event);
      };
      _this2.onSelect = function(event) {
        var flattenChildren = flatChildren(React8.Children.toArray(_this2.children));
        var selectedChild;
        var newExpanded;
        flattenChildren.forEach(function(child) {
          if (child.props.uniquePrivateKey === (event.uniquePrivateKey || _this2.state.focused)) {
            selectedChild = child;
          }
        });
        switch (_this2.expandMode) {
          case "single":
            newExpanded = __spreadArray2(__spreadArray2([], selectedChild.props.parentUniquePrivateKey, true), [selectedChild.props.uniquePrivateKey], false);
            if (isArrayEqual(_this2.expandedItems, newExpanded)) {
              if (selectedChild.props.parentUniquePrivateKey) {
                newExpanded = __spreadArray2([], selectedChild.props.parentUniquePrivateKey, true);
              } else {
                newExpanded = [];
              }
            }
            break;
          case "multiple":
            newExpanded = _this2.expandedItems.slice();
            var index = newExpanded.indexOf(selectedChild.props.uniquePrivateKey);
            index === -1 ? newExpanded.push(selectedChild.props.uniquePrivateKey) : newExpanded.splice(index, 1);
            break;
          default:
            newExpanded = _this2.expandedItems.slice();
            break;
        }
        _this2.setState({ selected: selectedChild.props.uniquePrivateKey, expanded: newExpanded });
        if (_this2.props.onSelect) {
          _this2.props.onSelect.call(void 0, {
            target: selectedChild,
            expandedItems: newExpanded
          });
        }
      };
      _this2.onFocus = function(event, step) {
        if (step === void 0) {
          step = 0;
        }
        var flattenChildren = flatVisibleChildren(React8.Children.toArray(_this2.children));
        var focusedChild;
        flattenChildren.forEach(function(child, ixd) {
          if (child.props.uniquePrivateKey === (event.uniquePrivateKey || _this2.state.focused)) {
            var index = ixd + step < 0 ? 0 : ixd + step > flattenChildren.length ? flattenChildren.length - 1 : ixd + step;
            focusedChild = flattenChildren[index];
          }
        });
        if (focusedChild) {
          _this2.activeDescendant = focusedChild.props.id;
          _this2.setState({ focused: focusedChild.props.uniquePrivateKey });
        }
      };
      _this2.onNavigate = function(event, action) {
        var step;
        switch (action) {
          case NavigationAction.Previous:
            step = -1;
            _this2.onFocus(event, step);
            break;
          case NavigationAction.Next:
            step = 1;
            _this2.onFocus(event, step);
            break;
          case NavigationAction.Toggle:
            _this2.onSelect(event);
            break;
          default:
        }
      };
      _this2.handleWrapperFocus = function() {
        clearTimeout(_this2.nextTickId);
        if (!_this2.state.wrapperFocused) {
          _this2.setState({ wrapperFocused: true });
        }
      };
      _this2.handleWrapperBlur = function() {
        _this2.nextTick(function() {
          _this2.setState({ wrapperFocused: false });
        });
      };
      _this2.handleKeyDown = function(event) {
        var rtl = _this2._element && getComputedStyle(_this2._element).direction === "rtl" || false;
        if (event.target === event.currentTarget) {
          var keyCode = event.keyCode;
          var action = void 0;
          switch (keyCode) {
            case Keys.left:
              action = !rtl ? NavigationAction.Previous : NavigationAction.Next;
              break;
            case Keys.up:
              action = NavigationAction.Previous;
              break;
            case Keys.right:
              action = !rtl ? NavigationAction.Next : NavigationAction.Previous;
              break;
            case Keys.down:
              action = NavigationAction.Next;
              break;
            case Keys.space:
            case Keys.enter:
              action = NavigationAction.Toggle;
              break;
            default:
              action = null;
              break;
          }
          if (action !== null) {
            event.preventDefault();
            _this2.onNavigate(event, action);
          }
        }
      };
      validatePackage2(packageMetadata);
      var initialState = getInitialState(props, _this2.expandMode);
      if (!initialState.focused) {
        initialState.focused = getFirstId(props);
      }
      _this2.state = initialState;
      return _this2;
    }
    Object.defineProperty(PanelBar2.prototype, "expandMode", {
      get: function() {
        return this.props.expandMode || "multiple";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PanelBar2.prototype, "selectedItem", {
      get: function() {
        var _a3 = this.props.selected, selected = _a3 === void 0 ? this.state.selected : _a3;
        return selected;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PanelBar2.prototype, "expandedItems", {
      get: function() {
        var expanded = this.props.isControlled ? this.props.expanded || [] : this.state.expanded;
        return expanded;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(PanelBar2.prototype, "children", {
      get: function() {
        var state = __assign7(__assign7({}, this.state), { selected: this.selectedItem });
        var renderState = {
          animation: this.props.animation,
          keepItemsMounted: this.props.keepItemsMounted,
          state,
          expanded: this.expandedItems,
          handleSelect: this.handleSelect,
          children: this.props.children
        };
        return renderChildren(renderState);
      },
      enumerable: false,
      configurable: true
    });
    PanelBar2.prototype.render = function() {
      var _this2 = this;
      var ariaProps = {
        "aria-activedescendant": this.activeDescendant
      };
      var className = classNames("k-panelbar", this.props.className);
      return React8.createElement("ul", __assign7({ ref: function(div) {
        _this2._element = div;
      }, dir: this.props.dir, role: "tree", tabIndex: 0, onKeyDown: this.handleKeyDown, onFocus: this.handleWrapperFocus, onBlur: this.handleWrapperBlur, className, style: this.props.style }, ariaProps), this.children);
    };
    PanelBar2.prototype.nextTick = function(f) {
      this.nextTickId = window.setTimeout(function() {
        return f();
      });
    };
    PanelBar2.propTypes = {
      animation: PropTypes7.bool,
      children: function(props, propName) {
        var prop = props[propName];
        if (prop) {
          if (Array.isArray(prop)) {
            for (var _i = 0, prop_1 = prop; _i < prop_1.length; _i++) {
              var value = prop_1[_i];
              if (!value.type || value.type !== PanelBarItem) {
                return new Error("PanelBar children should be either PanelBarItem or Array of PanelBarItem.");
              }
            }
          } else {
            if (prop.type !== PanelBarItem) {
              return new Error("PanelBar child should be either PanelBarItem or Array of PanelBarItem.");
            }
          }
          return null;
        }
      },
      dir: PropTypes7.string,
      selected: PropTypes7.string,
      expanded: PropTypes7.arrayOf(PropTypes7.string),
      focused: PropTypes7.string,
      expandMode: PropTypes7.oneOf(["single", "multiple"]),
      className: PropTypes7.string,
      keepItemsMounted: PropTypes7.bool,
      onSelect: PropTypes7.func,
      style: PropTypes7.object
    };
    PanelBar2.defaultProps = {
      expandMode: "multiple",
      animation: true,
      keepItemsMounted: false
    };
    return PanelBar2;
  }(React8.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/Menu.js
var React15 = __toESM(require_react());
var PropTypes11 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/itemsIdsUtils.js
var EMPTY_ID = "";
var ZERO_LEVEL_ZERO_ITEM_ID = "0";
var SEPARATOR = "_";
function getItemById(itemId, items) {
  if (isIdZeroLevel(itemId)) {
    return items[Number(itemId)];
  } else {
    var rootParentItem = items[Number(getRootParentId(itemId))];
    return rootParentItem.items ? getItemById(getIdWithoutRootParentId(itemId), rootParentItem.items) : void 0;
  }
}
function getRootParentId(itemId) {
  return isIdEmptyOrZeroLevel(itemId) ? itemId : itemId.split(SEPARATOR)[0];
}
function getIdWithoutRootParentId(itemId) {
  if (isIdEmptyOrZeroLevel(itemId)) {
    return itemId;
  } else {
    var firstSeparatorIndex = itemId.indexOf(SEPARATOR);
    return itemId.substring(firstSeparatorIndex + 1);
  }
}
function getFirstChildId(itemId) {
  return createId("0", itemId);
}
function shouldOpenItem(itemId, lastItemIdToBeOpened) {
  if (lastItemIdToBeOpened.indexOf(itemId) === 0) {
    return lastItemIdToBeOpened.length === itemId.length || lastItemIdToBeOpened.charAt(itemId.length) === SEPARATOR;
  } else {
    return false;
  }
}
function createId(childId, parentId) {
  return parentId ? parentId + SEPARATOR + childId : childId;
}
function getDirectParentId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? EMPTY_ID : itemId.substring(0, lastSeparatorIndex);
}
function isIdEmptyOrZeroLevel(itemId) {
  return itemId === EMPTY_ID || itemId.indexOf(SEPARATOR) < 0;
}
function isIdZeroLevel(itemId) {
  return itemId !== EMPTY_ID && itemId.indexOf(SEPARATOR) < 0;
}
function isIdFirstLevel(itemId) {
  return getSeparatorOccurances(itemId) === 1;
}
function isFirstItemFromSiblings(itemId) {
  return getShortId(itemId) === ZERO_LEVEL_ZERO_ITEM_ID;
}
function getShortId(itemId) {
  var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);
  return lastSeparatorIndex < 0 ? itemId : itemId.substring(lastSeparatorIndex + 1);
}
function getDirectSiblingIdForLevelZero(next, shortItemId, siblingsCount) {
  if (!isIdZeroLevel(shortItemId)) {
    return shortItemId;
  }
  return next ? Number(shortItemId) < siblingsCount - 1 ? (Number(shortItemId) + 1).toString() : "0" : Number(shortItemId) > 0 ? (Number(shortItemId) - 1).toString() : (siblingsCount - 1).toString();
}
function getSeparatorOccurances(itemId) {
  return itemId.split(SEPARATOR).length - 1;
}

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/prepareInputItemsForInternalWork.js
var React10 = __toESM(require_react());

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItem.js
var React9 = __toESM(require_react());
var PropTypes8 = __toESM(require_prop_types());
var __extends8 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var MenuItem = (
  /** @class */
  function(_super) {
    __extends8(MenuItem2, _super);
    function MenuItem2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItem2.prototype.render = function() {
      return null;
    };
    MenuItem2.propTypes = {
      text: PropTypes8.string,
      url: PropTypes8.string,
      icon: PropTypes8.string,
      disabled: PropTypes8.bool,
      cssClass: PropTypes8.string,
      cssStyle: PropTypes8.object,
      render: PropTypes8.any,
      linkRender: PropTypes8.any,
      contentRender: PropTypes8.any,
      data: PropTypes8.any
    };
    return MenuItem2;
  }(React9.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/prepareInputItemsForInternalWork.js
function prepareInputItemsForInternalWork(models, menuChildren) {
  if (models && models.length > 0) {
    return {
      items: convertInputModelsToInternalOnesHelper(models),
      inputItems: models
    };
  } else if (getMenuItemChildComponents(menuChildren).length > 0) {
    var inputModels = convertInputComponentsToInputModelsHelper(getMenuItemChildComponents(menuChildren));
    return { items: convertInputModelsToInternalOnesHelper(inputModels), inputItems: inputModels };
  } else {
    return { items: [], inputItems: [] };
  }
}
function copyInputItemWithoutChildren(inputModel, inputComponent) {
  var result = {};
  var _a3 = inputModel ? inputModel : inputComponent.props, text = _a3.text, url = _a3.url, icon = _a3.icon, svgIcon = _a3.svgIcon, disabled = _a3.disabled, cssClass = _a3.cssClass, cssStyle = _a3.cssStyle, render = _a3.render, linkRender = _a3.linkRender, contentRender = _a3.contentRender, data = _a3.data;
  if (text !== void 0) {
    result.text = text;
  }
  if (url !== void 0) {
    result.url = url;
  }
  if (icon !== void 0) {
    result.icon = icon;
  }
  if (svgIcon !== void 0) {
    result.svgIcon = svgIcon;
  }
  if (disabled !== void 0) {
    result.disabled = disabled;
  }
  if (cssClass !== void 0) {
    result.cssClass = cssClass;
  }
  if (cssStyle !== void 0) {
    result.cssStyle = cssStyle;
  }
  if (render !== void 0) {
    result.render = render;
  }
  if (linkRender !== void 0) {
    result.linkRender = linkRender;
  }
  if (contentRender !== void 0) {
    result.contentRender = contentRender;
  }
  if (data !== void 0) {
    result.data = data;
  }
  return result;
}
function getMenuItemChildComponents(menuChildren) {
  return React10.Children.toArray(menuChildren).filter(function(child) {
    return child && child.type === MenuItem;
  });
}
function convertInputComponentsToInputModelsHelper(components) {
  var result = [];
  for (var index = 0; index < components.length; index++) {
    var comp = components[index];
    var model = copyInputItemWithoutChildren(void 0, comp);
    var items = convertInputComponentsToInputModelsHelper(getMenuItemChildComponents(comp.props.children));
    if (items.length > 0) {
      model.items = items;
    }
    result.push(model);
  }
  return result;
}
function convertInputModelsToInternalOnesHelper(inputModels, parentId) {
  var result = [];
  for (var index = 0; index < inputModels.length; index++) {
    var inputModel = inputModels[index];
    var internalModel = copyInputItemWithoutChildren(inputModel);
    internalModel.id = createId(index.toString(), parentId);
    internalModel.isLastFromSiblings = index === inputModels.length - 1;
    internalModel.items = copyOrCreateModelChildren(inputModel, internalModel);
    result.push(internalModel);
  }
  return result;
}
function copyOrCreateModelChildren(inputModel, internalModel) {
  if (inputModel.contentRender) {
    return [{
      contentParentItemId: internalModel.id,
      id: createId(ZERO_LEVEL_ZERO_ITEM_ID, internalModel.id),
      isLastFromSiblings: true,
      contentRender: inputModel.contentRender,
      items: []
    }];
  } else if (inputModel.items) {
    return convertInputModelsToInternalOnesHelper(inputModel.items, internalModel.id);
  } else {
    return [];
  }
}

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/getNewItemIdUponKeyboardNavigation.js
var NO_WHITESPACE_REGEX = /\S/;
function getNewItemIdUponKeyboardNavigation(sourceItems, sourceItemId, keyCode, key, isMenuVertical, isDirectionRightToLeft) {
  var sourceItem = getItemById2();
  switch (keyCode) {
    case Keys.left:
      return getIdUponLeftKey();
    case Keys.right:
      return getIdUponRightKey();
    case Keys.up:
      return getIdUponUpKey();
    case Keys.down:
      return getIdUponDownKey();
    case Keys.enter:
    case Keys.space:
      return getIdUponEnterAndSpaceKeys();
    case Keys.home:
      return getIdUponHomeKey();
    case Keys.end:
      return getIdUponEndKey();
    case Keys.esc:
      return getIdUponEscKey();
    default:
      return isSearchableKey() ? getIdUponSearchByChar() : sourceItemId;
  }
  function getIdUponLeftKey() {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? getIdUponRightKeyForVerticalMenu() : getIdUponLeftKeyForVerticalMenu();
    } else {
      return isDirectionRightToLeft ? getIdUponRightKeyForHorizontalMenu() : getIdUponLeftKeyForHorizontalMenu();
    }
  }
  function getIdUponRightKey() {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? getIdUponLeftKeyForVerticalMenu() : getIdUponRightKeyForVerticalMenu();
    } else {
      return isDirectionRightToLeft ? getIdUponLeftKeyForHorizontalMenu() : getIdUponRightKeyForHorizontalMenu();
    }
  }
  function getIdUponDownKey() {
    if (isMenuVertical) {
      return getNextSiblingId();
    } else {
      if (isIdZeroLevel(sourceItemId)) {
        return getFirstChildIdForEnabledItemOrGetSameId();
      } else {
        return getNextSiblingId();
      }
    }
  }
  function getIdUponUpKey() {
    if (isMenuVertical) {
      return getPrevSiblingId();
    } else {
      if (isIdZeroLevel(sourceItemId)) {
        return getLastChildIdForEnabledItemOrGetSameId();
      } else {
        return getPrevSiblingId();
      }
    }
  }
  function getIdUponEnterAndSpaceKeys() {
    if (sourceItem.disabled) {
      return sourceItemId;
    } else {
      return hasChildren() ? getFirstChildId(sourceItemId) : getRootParentId(sourceItemId);
    }
  }
  function getIdUponHomeKey() {
    return getSiblings()[0].id;
  }
  function getIdUponEndKey() {
    var siblings = getSiblings();
    return siblings[siblings.length - 1].id;
  }
  function getIdUponEscKey() {
    return isIdZeroLevel(sourceItemId) ? sourceItemId : getDirectParentId(sourceItemId);
  }
  function getIdUponSearchByChar() {
    var searchChar = key.toLowerCase();
    var siblings = getSiblings();
    var currentItemIndex = Number(getShortId(sourceItemId));
    var itemsToSearch = siblings.slice(currentItemIndex + 1).concat(siblings.slice(0, currentItemIndex + 1));
    var matchedSibling = itemsToSearch.find(function(item) {
      return (item.text || "").toLowerCase().startsWith(searchChar);
    });
    return matchedSibling ? matchedSibling.id : sourceItemId;
  }
  function getIdUponLeftKeyForHorizontalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getPrevSiblingId();
    } else if (isIdFirstLevel(sourceItemId)) {
      return getFirstChildIdForEnabledItemOrGetSameId(getPrevSiblingId(getRootParentId(sourceItemId)));
    } else {
      return getDirectParentId(sourceItemId);
    }
  }
  function getIdUponLeftKeyForVerticalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getLastChildIdForEnabledItemOrGetSameId();
    } else {
      return getDirectParentId(sourceItemId);
    }
  }
  function getIdUponRightKeyForHorizontalMenu() {
    if (isIdZeroLevel(sourceItemId)) {
      return getNextSiblingId();
    } else {
      return getFirstChildIdForEnabledItemOrGetSameId(hasChildren() ? sourceItemId : getNextSiblingId(getRootParentId(sourceItemId)));
    }
  }
  function getIdUponRightKeyForVerticalMenu() {
    return getFirstChildIdForEnabledItemOrGetSameId(isIdZeroLevel(sourceItemId) || hasChildren() ? sourceItemId : getNextSiblingId(getRootParentId(sourceItemId)));
  }
  function getFirstChildIdForEnabledItemOrGetSameId(itemId) {
    return getFirstOrLastChildIdForEnabledItemOrGetSameId(true, itemId);
  }
  function getLastChildIdForEnabledItemOrGetSameId(itemId) {
    return getFirstOrLastChildIdForEnabledItemOrGetSameId(false, itemId);
  }
  function isSearchableKey() {
    return key.length === 1 && NO_WHITESPACE_REGEX.test(key);
  }
  function getItemById2(itemId, items) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    if (items === void 0) {
      items = sourceItems;
    }
    return getItemById(itemId, items);
  }
  function hasChildren(itemId) {
    return getItemById2(itemId).items.length > 0;
  }
  function getPrevSiblingId(itemId) {
    return getSiblingId(false, itemId);
  }
  function getNextSiblingId(itemId) {
    return getSiblingId(true, itemId);
  }
  function getLastChildId(itemId) {
    var itemChildren = getItemById2(itemId).items;
    return itemChildren[itemChildren.length - 1].id;
  }
  function getSiblings() {
    return isIdZeroLevel(sourceItemId) ? sourceItems : getItemById2(getDirectParentId(sourceItemId), sourceItems).items;
  }
  function getFirstOrLastChildIdForEnabledItemOrGetSameId(getFirstChild, itemId) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    var item = getItemById2(itemId);
    if (hasChildren(itemId) && !item.disabled) {
      return getFirstChild ? getFirstChildId(itemId) : getLastChildId(itemId);
    } else {
      return itemId;
    }
  }
  function getSiblingId(next, itemId) {
    if (itemId === void 0) {
      itemId = sourceItemId;
    }
    if (isIdZeroLevel(itemId)) {
      return getDirectSiblingIdForLevelZero(next, itemId, sourceItems.length);
    } else {
      var directParentId = getDirectParentId(itemId);
      var shortId = getShortId(itemId);
      var siblingsCount = getItemById2(directParentId).items.length;
      return createId(getDirectSiblingIdForLevelZero(next, shortId, siblingsCount), directParentId);
    }
  }
}

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/hoverDelay.js
function getHoverOpenDelay(props) {
  if (props.hoverOpenDelay !== void 0) {
    return props.hoverOpenDelay;
  } else {
    return props.openOnClick ? 0 : 100;
  }
}
function getHoverCloseDelay(props) {
  return props.hoverCloseDelay !== void 0 ? props.hoverCloseDelay : 100;
}

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItemInternalsList.js
var React14 = __toESM(require_react());

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItemInternal.js
var React13 = __toESM(require_react());

// node_modules/@progress/kendo-react-layout/dist/es/menu/consts.js
var POPUP_ALIGN = {
  vertical: "top",
  horizontal: "left"
};
var POPUP_ALIGN_RTL = {
  vertical: "top",
  horizontal: "right"
};
var VERTICAL_COLLISION = {
  vertical: "flip",
  horizontal: "fit"
};
var HORIZONTAL_COLLISION = {
  vertical: "fit",
  horizontal: "flip"
};
var POPUP_SETTINGS_RTL = {
  downward: {
    anchorAlign: {
      vertical: "bottom",
      horizontal: "right"
    },
    popupAlign: POPUP_ALIGN_RTL,
    collision: VERTICAL_COLLISION
  },
  leftward: {
    anchorAlign: {
      vertical: "top",
      horizontal: "left"
    },
    popupAlign: POPUP_ALIGN_RTL,
    collision: HORIZONTAL_COLLISION
  }
};
var POPUP_SETTINGS = {
  downward: {
    anchorAlign: {
      vertical: "bottom",
      horizontal: "left"
    },
    popupAlign: POPUP_ALIGN,
    collision: VERTICAL_COLLISION
  },
  rightward: {
    anchorAlign: {
      vertical: "top",
      horizontal: "right"
    },
    popupAlign: POPUP_ALIGN,
    collision: HORIZONTAL_COLLISION
  }
};

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/misc.js
function getPopupSettings(itemId, isMenuVertical, isDirectionRightToLeft) {
  var childrenPosition = getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft);
  if (isDirectionRightToLeft) {
    return childrenPosition === "downward" ? POPUP_SETTINGS_RTL.downward : POPUP_SETTINGS_RTL.leftward;
  } else {
    return childrenPosition === "downward" ? POPUP_SETTINGS.downward : POPUP_SETTINGS.rightward;
  }
}
function getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft) {
  if (isIdZeroLevel(itemId)) {
    if (isMenuVertical) {
      return isDirectionRightToLeft ? "leftward" : "rightward";
    } else {
      return "downward";
    }
  } else {
    return isDirectionRightToLeft ? "leftward" : "rightward";
  }
}
function convertBoolDirectionToString(isDirectionRightToLeft) {
  return isDirectionRightToLeft ? "rtl" : "ltr";
}
function getDOMElementId(menuGuid, itemId) {
  return "".concat(menuGuid, "_").concat(itemId);
}

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItemLink.js
var React11 = __toESM(require_react());
var PropTypes9 = __toESM(require_prop_types());
var __extends9 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var MenuItemLink = (
  /** @class */
  function(_super) {
    __extends9(MenuItemLink2, _super);
    function MenuItemLink2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItemLink2.prototype.render = function() {
      if (this.props.url) {
        return React11.createElement("a", { className: this.getMenuItemClassName(), role: "presentation", href: this.props.url, tabIndex: -1 }, this.props.children);
      } else {
        return React11.createElement("span", { id: this.props.id, className: classNames(this.getMenuItemClassName(), this.props.className), style: this.props.style, role: "presentation" }, this.props.children);
      }
    };
    MenuItemLink2.prototype.getMenuItemClassName = function() {
      return classNames("k-link", "k-menu-link", {
        "k-active": this.props.opened
      });
    };
    MenuItemLink2.propTypes = {
      opened: PropTypes9.bool,
      url: PropTypes9.string
    };
    return MenuItemLink2;
  }(React11.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItemArrow.js
var React12 = __toESM(require_react());
var PropTypes10 = __toESM(require_prop_types());
var __extends10 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
var downArrowName = "caret-alt-down";
var rightArrowName = "caret-alt-right";
var leftArrowName = "caret-alt-left";
var MenuItemArrow = (
  /** @class */
  function(_super) {
    __extends10(MenuItemArrow2, _super);
    function MenuItemArrow2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    MenuItemArrow2.prototype.render = function() {
      return React12.createElement(IconWrap, __assign8({ "aria-hidden": true, className: "k-menu-expand-arrow" }, this.getIcon()));
    };
    MenuItemArrow2.prototype.getIcon = function() {
      var childrenPosition = getChildrenPosition(this.props.itemId, this.props.verticalMenu === true, this.props.dir === "rtl");
      switch (childrenPosition) {
        case "downward":
          return { name: downArrowName, icon: caretAltDownIcon };
        case "rightward":
          return { name: rightArrowName, icon: caretAltRightIcon };
        case "leftward":
          return { name: leftArrowName, icon: caretAltLeftIcon };
        default:
          return {};
      }
    };
    MenuItemArrow2.propTypes = {
      itemId: PropTypes10.string,
      dir: PropTypes10.string,
      verticalMenu: PropTypes10.bool
    };
    return MenuItemArrow2;
  }(React12.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItemInternal.js
var __extends11 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var MenuItemInternal = (
  /** @class */
  function(_super) {
    __extends11(MenuItemInternal2, _super);
    function MenuItemInternal2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2.isFirstRender = true;
      _this2.onMouseOver = function(event) {
        _this2.props.onMouseOver(_this2.props.item.id);
        event.stopPropagation();
      };
      _this2.onMouseLeave = function(event) {
        _this2.props.onMouseLeave(_this2.props.item.id);
        event.stopPropagation();
      };
      _this2.state = { opened: false };
      return _this2;
    }
    MenuItemInternal2.prototype.componentDidMount = function() {
      var focusedItemId = this.props.focusedItemId;
      var currentItemId = this.props.item.id;
      if (focusedItemId && focusedItemId === currentItemId) {
        this.itemElement.focus();
      }
      this.isFirstRender = false;
    };
    MenuItemInternal2.prototype.componentDidUpdate = function(prevProps) {
      var focusedItemId = this.props.focusedItemId;
      var currentItemId = this.props.item.id;
      if (focusedItemId) {
        if (prevProps.focusedItemId !== focusedItemId && focusedItemId === currentItemId && !this.itemElement.contains(document.activeElement)) {
          this.itemElement.focus();
        }
      }
    };
    MenuItemInternal2.prototype.render = function() {
      var _this2 = this;
      var item = this.props.item;
      var itemId = item.id;
      var menuItemId = getDOMElementId(this.props.menuGuid, itemId);
      return React13.createElement(
        React13.Fragment,
        null,
        React13.createElement("li", { id: getDOMElementId(this.props.menuGuid, itemId), className: this.getMenuItemClassName(item), style: item.cssStyle, tabIndex: itemId === this.props.tabbableItemId ? 0 : -1, onMouseOver: this.onMouseOver, onMouseLeave: this.onMouseLeave, onMouseDown: function(event) {
          return _this2.props.onMouseDown(event);
        }, onBlur: function(e) {
          return _this2.props.onBlur(itemId, e);
        }, onFocus: function() {
          return _this2.props.onFocus(itemId);
        }, onClick: function(event) {
          return _this2.props.onClick(event, itemId);
        }, role: "menuitem", "aria-disabled": item.disabled ? true : void 0, "aria-haspopup": item.items.length > 0 ? true : void 0, "aria-expanded": item.items.length > 0 ? this.Opened : void 0, "aria-label": item.text, "aria-owns": this.Opened ? menuItemId : void 0, ref: function(el) {
          return _this2.itemElement = el;
        }, key: "0" }, this.contentRender ? this.renderContent() : this.renderMenuItemLink()),
        this.renderPopupIfOpened()
      );
    };
    MenuItemInternal2.prototype.renderContent = function() {
      var itemId = this.props.item.contentParentItemId;
      return React13.createElement(
        "div",
        { className: "k-content", role: "presentation" },
        React13.createElement(this.contentRender, { item: this.props.onOriginalItemNeeded(itemId), itemId })
      );
    };
    MenuItemInternal2.prototype.renderMenuItemLink = function() {
      var item = this.props.item;
      if (this.linkRender) {
        return React13.createElement(this.linkRender, { item: this.props.onOriginalItemNeeded(item.id), itemId: item.id, opened: this.Opened, dir: convertBoolDirectionToString(this.props.isDirectionRightToLeft) });
      } else {
        var textOrItemRender = this.itemRender ? React13.createElement(this.itemRender, { item: this.props.onOriginalItemNeeded(item.id), itemId: item.id, key: "1" }) : React13.createElement("span", { className: "k-menu-link-text" }, item.text);
        return React13.createElement(
          MenuItemLink,
          { url: item.url, opened: this.Opened },
          this.renderMenuIconIfApplicable(),
          textOrItemRender,
          this.renderArrowIfApplicable()
        );
      }
    };
    MenuItemInternal2.prototype.renderPopupIfOpened = function() {
      if (this.Opened) {
        var itemId = this.props.item.id;
        var _a3 = getPopupSettings(itemId, this.props.isMenuVertical, this.props.isDirectionRightToLeft), anchorAlign = _a3.anchorAlign, popupAlign = _a3.popupAlign, collision = _a3.collision;
        return React13.createElement(
          Popup,
          { anchor: this.itemElement, show: true, popupClass: this.getPopupClassName(), anchorAlign, popupAlign, collision, animate: false, key: "1" },
          React13.createElement(MenuItemInternalsList, { parentItemId: itemId, items: this.props.item.items, menuGuid: this.props.menuGuid, focusedItemId: this.props.focusedItemId, lastItemIdToBeOpened: this.props.lastItemIdToBeOpened, tabbableItemId: this.props.tabbableItemId, itemRender: this.props.itemRender, linkRender: this.props.linkRender, isMenuVertical: this.props.isMenuVertical, isDirectionRightToLeft: this.props.isDirectionRightToLeft, className: "k-group k-menu-group k-reset k-menu-group-md", onMouseOver: this.props.onMouseOver, onMouseLeave: this.props.onMouseLeave, onMouseDown: this.props.onMouseDown, onBlur: this.props.onBlur, onFocus: this.props.onFocus, onClick: this.props.onClick, onOriginalItemNeeded: this.props.onOriginalItemNeeded })
        );
      } else {
        return null;
      }
    };
    MenuItemInternal2.prototype.renderMenuIconIfApplicable = function() {
      var _a3 = this.props.item, icon = _a3.icon, svgIcon = _a3.svgIcon;
      return icon || svgIcon ? React13.createElement(IconWrap, { name: icon, icon: svgIcon, key: "0" }) : null;
    };
    MenuItemInternal2.prototype.renderArrowIfApplicable = function() {
      return this.props.item.items.length > 0 ? React13.createElement(MenuItemArrow, { itemId: this.props.item.id, verticalMenu: this.props.isMenuVertical, dir: convertBoolDirectionToString(this.props.isDirectionRightToLeft), key: "2" }) : null;
    };
    Object.defineProperty(MenuItemInternal2.prototype, "itemRender", {
      get: function() {
        return this.props.item.render || this.props.itemRender;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MenuItemInternal2.prototype, "linkRender", {
      get: function() {
        return this.props.item.linkRender || this.props.linkRender;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MenuItemInternal2.prototype, "contentRender", {
      get: function() {
        return this.props.item.contentParentItemId ? this.props.item.contentRender : null;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(MenuItemInternal2.prototype, "Opened", {
      get: function() {
        var props = this.props;
        return props.item.items.length > 0 && shouldOpenItem(props.item.id, props.lastItemIdToBeOpened) && // HACK: Wait for the second render because otherwise the scenario of
        // popup inside popup throws an error (for example, hover of item with id '0_0').
        !this.isFirstRender;
      },
      enumerable: false,
      configurable: true
    });
    MenuItemInternal2.prototype.getPopupClassName = function() {
      return classNames("k-menu-popup", { "k-rtl": this.props.isDirectionRightToLeft });
    };
    MenuItemInternal2.prototype.getMenuItemClassName = function(item) {
      return classNames("k-item", "k-menu-item", {
        "k-first": isFirstItemFromSiblings(item.id),
        "k-last": item.isLastFromSiblings,
        "k-disabled": item.disabled
      }, item.cssClass);
    };
    return MenuItemInternal2;
  }(React13.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/MenuItemInternalsList.js
var __extends12 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var MenuItemInternalsList = (
  /** @class */
  function(_super) {
    __extends12(MenuItemInternalsList2, _super);
    function MenuItemInternalsList2() {
      var _this2 = _super !== null && _super.apply(this, arguments) || this;
      _this2.onMouseOver = function(event) {
        _this2.props.onMouseOver(_this2.props.parentItemId);
        event.stopPropagation();
      };
      _this2.onMouseLeave = function(event) {
        _this2.props.onMouseLeave(_this2.props.parentItemId);
        event.stopPropagation();
      };
      return _this2;
    }
    MenuItemInternalsList2.prototype.render = function() {
      var parentItemId = this.props.parentItemId;
      return React14.createElement("ul", { className: this.props.className, role: this.props.role ? this.props.role : parentItemId !== void 0 ? "menu" : "menubar", id: parentItemId !== void 0 ? getDOMElementId(this.props.menuGuid, parentItemId) : void 0, onMouseOver: parentItemId !== void 0 ? this.onMouseOver : void 0, onMouseLeave: parentItemId !== void 0 ? this.onMouseLeave : void 0, "aria-orientation": this.props["aria-orientation"] }, this.renderChildItems());
    };
    MenuItemInternalsList2.prototype.renderChildItems = function() {
      var _this2 = this;
      return this.props.items.length > 0 ? this.props.items.map(function(item, index) {
        return React14.createElement(MenuItemInternal, { item, isMenuVertical: _this2.props.isMenuVertical, isDirectionRightToLeft: _this2.props.isDirectionRightToLeft, focusedItemId: _this2.props.focusedItemId, lastItemIdToBeOpened: _this2.props.lastItemIdToBeOpened, tabbableItemId: _this2.props.tabbableItemId, itemRender: _this2.props.itemRender, linkRender: _this2.props.linkRender, menuGuid: _this2.props.menuGuid, onMouseOver: _this2.props.onMouseOver, onMouseLeave: _this2.props.onMouseLeave, onMouseDown: _this2.props.onMouseDown, onBlur: _this2.props.onBlur, onFocus: _this2.props.onFocus, onClick: _this2.props.onClick, onOriginalItemNeeded: _this2.props.onOriginalItemNeeded, key: index });
      }) : null;
    };
    return MenuItemInternalsList2;
  }(React14.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/DirectionHolder.js
var DirectionHolder = (
  /** @class */
  function() {
    function DirectionHolder2() {
      this.phase = "Initialized";
    }
    DirectionHolder2.prototype.getIsDirectionRightToLeft = function() {
      return this.isDirectionRightToLeft;
    };
    DirectionHolder2.prototype.setIsDirectionRightToLeft = function(value) {
      this.phase = this.phase === "NotInitialized" ? "Initialized" : "NewValueReceived";
      this.previousIsDirectionRightToLeft = this.isDirectionRightToLeft;
      this.isDirectionRightToLeft = value;
    };
    DirectionHolder2.prototype.hasDirectionChanged = function() {
      return this.phase === "NewValueReceived" ? this.previousIsDirectionRightToLeft !== this.isDirectionRightToLeft : false;
    };
    return DirectionHolder2;
  }()
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/utils/MouseOverHandler.js
var MouseOverHandler = (
  /** @class */
  function() {
    function MouseOverHandler2(openOnClick, resetMenu, openItem) {
      this.openOnClick = openOnClick;
      this.resetMenu = resetMenu;
      this.openItem = openItem;
      this.mouseDown = false;
      this.openOnClick = openOnClick;
      this.isMouseOverEnabled = openOnClick ? false : true;
    }
    Object.defineProperty(MouseOverHandler2.prototype, "OpenOnClick", {
      set: function(value) {
        if (Boolean(value) !== Boolean(this.openOnClick)) {
          this.mouseDown = false;
          this.isMouseOverEnabled = value ? false : true;
        }
        this.openOnClick = value;
      },
      enumerable: false,
      configurable: true
    });
    MouseOverHandler2.prototype.handleItemSelectedViaKeyboard = function() {
      if (this.openOnClick) {
        this.isMouseOverEnabled = false;
        this.resetMenu();
      }
    };
    Object.defineProperty(MouseOverHandler2.prototype, "IsMouseOverEnabled", {
      get: function() {
        return this.isMouseOverEnabled;
      },
      enumerable: false,
      configurable: true
    });
    MouseOverHandler2.prototype.handleItemMouseDown = function() {
      this.mouseDown = true;
    };
    MouseOverHandler2.prototype.handleItemFocus = function() {
      if (this.openOnClick && !this.mouseDown) {
        this.isMouseOverEnabled = true;
      }
      this.mouseDown = false;
    };
    MouseOverHandler2.prototype.handleItemClick = function(itemId, clickedItemIsWithDefaultClose) {
      if (this.openOnClick) {
        if (this.isMouseOverEnabled) {
          if (clickedItemIsWithDefaultClose) {
            this.isMouseOverEnabled = false;
            this.resetMenu();
          }
        } else {
          this.isMouseOverEnabled = true;
          this.openItem(itemId);
        }
      }
    };
    return MouseOverHandler2;
  }()
);

// node_modules/@progress/kendo-react-layout/dist/es/menu/components/Menu.js
var __extends13 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var initialItemsIds = {
  focusedItemId: EMPTY_ID,
  hoveredItemId: EMPTY_ID,
  tabbableItemId: ZERO_LEVEL_ZERO_ITEM_ID
};
var Menu = (
  /** @class */
  function(_super) {
    __extends13(Menu2, _super);
    function Menu2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2.menuWrapperEl = null;
      _this2.guid = guid();
      _this2.directionHolder = new DirectionHolder();
      _this2.inputItems = [];
      _this2.items = [];
      _this2.reset = function() {
        _this2.clearItemHoverAndLeaveRequestsIfApplicable();
        _this2.setState(initialItemsIds);
      };
      _this2.onKeyDown = function(event) {
        if (_this2.state.focusedItemId !== EMPTY_ID) {
          var currentItem = getItemById(_this2.state.focusedItemId, _this2.items);
          var newItemId = getNewItemIdUponKeyboardNavigation(_this2.items, currentItem.id, event.keyCode, event.key, _this2.props.vertical, _this2.directionHolder.getIsDirectionRightToLeft());
          if (currentItem.id !== newItemId) {
            event.preventDefault();
            _this2.setFocusedItemId(newItemId);
          }
          if ((event.keyCode === Keys.enter || event.keyCode === Keys.space) && !currentItem.disabled) {
            _this2.mouseOverHandler.handleItemSelectedViaKeyboard();
            _this2.dispatchSelectEventIfWired(event, currentItem.id);
            if (!event.isDefaultPrevented() && currentItem.items.length === 0 && currentItem.url) {
              window.location.assign(currentItem.url);
            }
          }
        }
        if (event.keyCode === Keys.esc && _this2.props.onClose) {
          _this2.props.onClose.call(void 0, event);
        }
      };
      _this2.onItemMouseOver = function(itemId) {
        if (_this2.mouseOverHandler.IsMouseOverEnabled) {
          _this2.clearItemHoverAndLeaveRequestsIfApplicable();
          _this2.itemHoverRequest = window.setTimeout(function() {
            _this2.setHoveredItemId(itemId);
            _this2.itemHoverRequest = null;
          }, getHoverOpenDelay(_this2.props));
        }
      };
      _this2.onItemMouseLeave = function(itemId) {
        if (_this2.mouseOverHandler.IsMouseOverEnabled && _this2.isItemWithDefaultClose(itemId)) {
          _this2.clearItemHoverAndLeaveRequestsIfApplicable();
          _this2.itemLeaveRequest = window.setTimeout(function() {
            _this2.setHoveredItemId(EMPTY_ID);
            _this2.itemLeaveRequest = null;
          }, getHoverCloseDelay(_this2.props));
        }
      };
      _this2.onItemMouseDown = function() {
        _this2.mouseOverHandler.handleItemMouseDown();
      };
      _this2.onItemFocus = function(itemId) {
        _this2.setFocusedItemId(itemId);
        _this2.mouseOverHandler.handleItemFocus();
      };
      _this2.onItemClick = function(event, itemId) {
        var item = getItemById(itemId, _this2.items);
        if (!item.disabled) {
          _this2.setFocusedItemId(itemId);
          _this2.mouseOverHandler.handleItemClick(itemId, _this2.isItemWithDefaultClose(itemId));
          _this2.dispatchSelectEventIfWired(event, itemId);
          if (!event.isDefaultPrevented() && item.url) {
            window.location.assign(item.url);
          }
        }
      };
      _this2.onItemBlur = function(itemId, event) {
        if (_this2.isItemWithDefaultClose(itemId)) {
          _this2.setFocusedItemId(EMPTY_ID);
        }
        if (event.relatedTarget && event.relatedTarget.nodeName === "LI") {
          var activeElementId = event.relatedTarget.getAttribute("id");
          if (activeElementId && activeElementId.includes(_this2.guid)) {
            return;
          }
        }
        if (_this2.props.onClose) {
          _this2.props.onClose.call(void 0, event);
        }
      };
      _this2.getInputItem = function(itemId) {
        return getItemById(itemId, _this2.inputItems);
      };
      validatePackage2(packageMetadata);
      _this2.mouseOverHandler = new MouseOverHandler(_this2.props.openOnClick, _this2.reset, _this2.onItemMouseOver);
      _this2.state = Object.assign({}, initialItemsIds, { isFirstRender: true });
      return _this2;
    }
    Object.defineProperty(Menu2.prototype, "element", {
      get: function() {
        return this.menuWrapperEl;
      },
      enumerable: false,
      configurable: true
    });
    Menu2.prototype.render = function() {
      var _this2 = this;
      this.prepareItems();
      if (!this.state.isFirstRender) {
        this.directionHolder.setIsDirectionRightToLeft(this.checkIsDirectionRightToLeft());
      }
      var lastItemIdToBeOpened = this.state.hoveredItemId ? this.state.hoveredItemId : this.state.focusedItemId ? getDirectParentId(this.state.focusedItemId) : EMPTY_ID;
      return React15.createElement(
        "div",
        { onKeyDown: this.onKeyDown, style: this.props.style, className: this.directionHolder.getIsDirectionRightToLeft() ? "k-rtl" : void 0, ref: function(el) {
          return _this2.menuWrapperEl = el;
        } },
        React15.createElement(MenuItemInternalsList, { className: this.getMenuClassName(), "aria-orientation": this.props.vertical ? "vertical" : void 0, items: this.items, isMenuVertical: this.props.vertical, isDirectionRightToLeft: this.directionHolder.getIsDirectionRightToLeft(), focusedItemId: this.state.focusedItemId, lastItemIdToBeOpened, tabbableItemId: this.state.tabbableItemId, itemRender: this.props.itemRender, linkRender: this.props.linkRender, menuGuid: this.guid, onMouseLeave: this.onItemMouseLeave, onMouseOver: this.onItemMouseOver, onMouseDown: this.onItemMouseDown, onFocus: this.onItemFocus, onClick: this.onItemClick, onBlur: this.onItemBlur, onOriginalItemNeeded: this.getInputItem, role: this.props.role })
      );
    };
    Menu2.prototype.componentDidMount = function() {
      this.setState({ isFirstRender: false });
    };
    Menu2.prototype.componentDidUpdate = function(prevProps) {
      if (Boolean(prevProps.vertical) !== Boolean(this.props.vertical) || this.directionHolder.hasDirectionChanged()) {
        this.reset();
      }
      this.mouseOverHandler.OpenOnClick = this.props.openOnClick;
    };
    Menu2.prototype.componentWillUnmount = function() {
      this.clearItemHoverAndLeaveRequestsIfApplicable();
    };
    Menu2.prototype.setFocusedItemId = function(focusedItemId) {
      this.setState(function(prevState) {
        var tabbableItemId = focusedItemId === EMPTY_ID ? prevState.tabbableItemId : getRootParentId(focusedItemId);
        var hoveredItemId = focusedItemId === EMPTY_ID || isIdEmptyOrZeroLevel(prevState.hoveredItemId) && isIdEmptyOrZeroLevel(focusedItemId) ? prevState.hoveredItemId : EMPTY_ID;
        return { hoveredItemId, focusedItemId, tabbableItemId };
      });
    };
    Menu2.prototype.setHoveredItemId = function(hoveredItemId) {
      this.setState(function(prevState) {
        if (isIdEmptyOrZeroLevel(hoveredItemId) && isIdEmptyOrZeroLevel(prevState.focusedItemId)) {
          return {
            hoveredItemId,
            focusedItemId: prevState.focusedItemId,
            tabbableItemId: prevState.tabbableItemId
          };
        } else {
          return { hoveredItemId, focusedItemId: EMPTY_ID, tabbableItemId: ZERO_LEVEL_ZERO_ITEM_ID };
        }
      });
    };
    Menu2.prototype.getMenuClassName = function() {
      return classNames("k-reset", "k-header", "k-menu", { "k-menu-horizontal": !this.props.vertical }, { "k-menu-vertical": this.props.vertical }, this.props.className);
    };
    Menu2.prototype.clearItemHoverAndLeaveRequestsIfApplicable = function() {
      if (this.itemHoverRequest) {
        clearTimeout(this.itemHoverRequest);
        this.itemHoverRequest = null;
      }
      if (this.itemLeaveRequest) {
        clearTimeout(this.itemLeaveRequest);
        this.itemLeaveRequest = null;
      }
    };
    Menu2.prototype.isItemWithDefaultClose = function(itemId) {
      return !this.props.customCloseItemIds || this.props.customCloseItemIds.indexOf(itemId) === -1;
    };
    Menu2.prototype.checkIsDirectionRightToLeft = function() {
      return Boolean(this.props.dir !== void 0 ? this.props.dir === "rtl" : this.menuWrapperEl && getComputedStyle(this.menuWrapperEl).direction === "rtl");
    };
    Menu2.prototype.prepareItems = function() {
      var _a3 = prepareInputItemsForInternalWork(this.props.items, this.props.children), items = _a3.items, inputItems = _a3.inputItems;
      this.items = items;
      this.inputItems = inputItems;
    };
    Menu2.prototype.dispatchSelectEventIfWired = function(event, itemId) {
      dispatchEvent(this.props.onSelect, event, this, { item: this.getInputItem(itemId), itemId });
    };
    Menu2.propTypes = {
      vertical: PropTypes11.bool,
      items: PropTypes11.arrayOf(PropTypes11.object),
      style: PropTypes11.object,
      dir: PropTypes11.string,
      hoverOpenDelay: PropTypes11.number,
      hoverCloseDelay: PropTypes11.number,
      openOnClick: PropTypes11.bool,
      itemRender: PropTypes11.any,
      linkRender: PropTypes11.any,
      customCloseItemIds: PropTypes11.arrayOf(PropTypes11.string),
      onSelect: PropTypes11.func,
      role: PropTypes11.string
    };
    Menu2.defaultProps = { vertical: false };
    return Menu2;
  }(React15.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/splitter/Splitter.js
var React18 = __toESM(require_react());

// node_modules/@progress/kendo-react-layout/dist/es/splitter/SplitterPane.js
var React16 = __toESM(require_react());
var __extends14 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitterPane = (
  /** @class */
  function(_super) {
    __extends14(SplitterPane2, _super);
    function SplitterPane2() {
      return _super !== null && _super.apply(this, arguments) || this;
    }
    SplitterPane2.prototype.render = function() {
      var _a3;
      var _b = this.props, id = _b.id, size = _b.size, collapsed = _b.collapsed, overlay = _b.overlay, containsSplitter = _b.containsSplitter, collapsible = _b.collapsible, resizable = _b.resizable, scrollable = _b.scrollable, keepMounted = _b.keepMounted;
      var fixedSize = size && size.length > 0;
      var style = {
        flexBasis: size
      };
      var paneClasses = classNames("k-pane", (_a3 = {}, _a3["k-hidden"] = collapsed, _a3["hidden"] = collapsed, _a3["k-pane-flex"] = containsSplitter, _a3["k-pane-static"] = !resizable && !collapsible || fixedSize, _a3["k-scrollable"] = scrollable, _a3));
      return React16.createElement(
        "div",
        { id, role: "group", style, className: paneClasses },
        !collapsed || keepMounted ? this.props.children : void 0,
        overlay ? React16.createElement("div", { className: "k-splitter-overlay k-overlay" }) : void 0
      );
    };
    return SplitterPane2;
  }(React16.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/splitter/SplitterBar.js
var React17 = __toESM(require_react());
var __extends15 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var SplitterBar = (
  /** @class */
  function(_super) {
    __extends15(SplitterBar2, _super);
    function SplitterBar2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2.draggable = null;
      _this2.onDrag = function(data, isFirst, isLast) {
        var event = data.event;
        var _a3 = _this2.props, onDrag = _a3.onDrag, index = _a3.index;
        var element8 = _this2.draggable && _this2.draggable.element;
        if (element8 && !_this2.isStatic && _this2.isDraggable) {
          onDrag(event, element8, index, isFirst, isLast);
        }
      };
      _this2.onFocus = function() {
        _this2.setState({
          focused: true
        });
      };
      _this2.onBlur = function() {
        _this2.setState({
          focused: false
        });
      };
      _this2.onToggle = function(event) {
        var _a3 = _this2.props, onToggle = _a3.onToggle, index = _a3.index, prev = _a3.prev, next = _a3.next;
        if (prev.collapsible || next.collapsible) {
          onToggle(prev.collapsible ? index : index + 1, event);
        }
      };
      _this2.onPrevToggle = function(event) {
        var _a3 = _this2.props, onToggle = _a3.onToggle, index = _a3.index, prev = _a3.prev;
        if (prev.collapsible) {
          onToggle(index, event);
        }
      };
      _this2.onNextToggle = function(event) {
        var _a3 = _this2.props, onToggle = _a3.onToggle, index = _a3.index, next = _a3.next;
        if (next.collapsible) {
          onToggle(index + 1, event);
        }
      };
      _this2.onKeyDown = function(event) {
        var keyCode = event && event.keyCode;
        var isHorizontal = _this2.isHorizontal;
        var index = _this2.props.index;
        var element8 = _this2.draggable && _this2.draggable.element;
        var onKeyboardResize = function(el, idx, offset) {
          event.preventDefault();
          _this2.props.onKeyboardResize(el, idx, offset, event);
        };
        if (!element8) {
          return;
        }
        if (keyCode === Keys.enter) {
          event.preventDefault();
          _this2.onToggle(event);
        } else if (_this2.isDraggable) {
          if (isHorizontal && keyCode === Keys.left) {
            onKeyboardResize(element8, index, -10);
          } else if (isHorizontal && keyCode === Keys.right) {
            onKeyboardResize(element8, index, 10);
          } else if (!isHorizontal && keyCode === Keys.up) {
            onKeyboardResize(element8, index, -10);
          } else if (!isHorizontal && keyCode === Keys.down) {
            onKeyboardResize(element8, index, 10);
          }
        }
      };
      _this2.state = {
        focused: false
      };
      return _this2;
    }
    Object.defineProperty(SplitterBar2.prototype, "isStatic", {
      get: function() {
        var _a3 = this.props, prev = _a3.prev, next = _a3.next;
        var betweenResizablePanes = prev.resizable && next.resizable;
        var nearCollapsiblePane = prev.collapsible || next.collapsible;
        return !betweenResizablePanes && !nearCollapsiblePane;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(SplitterBar2.prototype, "isDraggable", {
      get: function() {
        var _a3 = this.props, prev = _a3.prev, next = _a3.next;
        var betweenResizablePanes = prev.resizable && next.resizable;
        var nearCollapsedPane = prev.collapsed || next.collapsed;
        return !!betweenResizablePanes && !nearCollapsedPane;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(SplitterBar2.prototype, "isHorizontal", {
      get: function() {
        return this.props.orientation === "horizontal";
      },
      enumerable: false,
      configurable: true
    });
    SplitterBar2.prototype.render = function() {
      var _a3;
      var _this2 = this;
      var isDraggable = this.isDraggable;
      var isStatic = this.isStatic;
      var isHorizontal = this.isHorizontal;
      var barClasses = classNames("k-splitbar", (_a3 = {}, _a3["k-focus"] = this.state.focused, _a3["k-splitbar-horizontal"] = isHorizontal, _a3["k-splitbar-vertical"] = !isHorizontal, _a3["k-splitbar-draggable-horizontal"] = isHorizontal && isDraggable, _a3["k-splitbar-draggable-vertical"] = !isHorizontal && isDraggable, _a3["k-splitbar-static-horizontal"] = isHorizontal && isStatic, _a3["k-splitbar-static-vertical"] = !isHorizontal && isStatic, _a3));
      return React17.createElement(
        Draggable,
        { onPress: function(event) {
          return _this2.onDrag(event, true, false);
        }, onDrag: function(event) {
          return _this2.onDrag(event, false, false);
        }, onRelease: function(event) {
          return _this2.onDrag(event, false, true);
        }, ref: function(component) {
          _this2.draggable = component;
        } },
        React17.createElement(
          "div",
          { tabIndex: isStatic ? -1 : 0, role: "separator", "aria-valuenow": 0, "aria-label": this.props.ariaLabel, "aria-orientation": isHorizontal ? "vertical" : void 0, className: barClasses, style: { touchAction: "none" }, onFocus: this.onFocus, onBlur: this.onBlur, onDoubleClick: this.onToggle, onKeyDown: this.onKeyDown },
          this.props.prev.collapsible && React17.createElement(
            "div",
            { className: "k-collapse-prev", onClick: this.onPrevToggle },
            React17.createElement(IconWrap, { name: this.props.prev.collapsible ? isHorizontal ? this.props.prev.collapsed ? "caret-alt-right" : "caret-alt-left" : this.props.prev.collapsed ? "caret-alt-down" : "caret-alt-up" : void 0, icon: this.props.prev.collapsible ? isHorizontal ? this.props.prev.collapsed ? caretAltRightIcon : caretAltLeftIcon : this.props.prev.collapsed ? caretAltDownIcon : caretAltUpIcon : void 0 })
          ),
          React17.createElement("div", { className: "k-resize-handle" }),
          this.props.next.collapsible && React17.createElement(
            "div",
            { className: "k-collapse-next", onClick: this.onNextToggle },
            React17.createElement(IconWrap, { name: this.props.next.collapsible ? isHorizontal ? this.props.next.collapsed ? "caret-alt-left" : "caret-alt-right" : this.props.next.collapsed ? "caret-alt-up" : "caret-alt-down" : void 0, icon: this.props.prev.collapsible ? isHorizontal ? this.props.prev.collapsed ? caretAltLeftIcon : caretAltRightIcon : this.props.prev.collapsed ? caretAltUpIcon : caretAltDownIcon : void 0 })
          )
        )
      );
    };
    return SplitterBar2;
  }(React17.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/splitter/messages/index.js
var _a;
var splitBarLabel = "splitBarLabel";
var messages = (_a = {}, _a[splitBarLabel] = "split bar", _a);

// node_modules/@progress/kendo-react-layout/dist/es/splitter/Splitter.js
var __extends16 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var PANE_DEFAULTS = {
  collapsible: false,
  collapsed: false,
  resizable: true,
  scrollable: true
};
var DOUBLE_CLICK_WAIT_TIME = 150;
var Splitter = (
  /** @class */
  function(_super) {
    __extends16(Splitter2, _super);
    function Splitter2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2._container = null;
      _this2.validatePanes = function(panesOptions) {
        var withoutSize = panesOptions.filter(function(pane) {
          return pane.size === void 0;
        });
        if (!withoutSize.length) {
          throw new Error("The Splitter should have at least one pane without a set size.");
        }
      };
      _this2.mapPaneOptions = function(panes, panesContent) {
        var orientation = _this2.orientation;
        var _a3 = _this2.state, dragIndex = _a3.dragIndex, isDragging = _a3.isDragging;
        var paneOptions = [];
        for (var index = 0; index < panesContent.length; index++) {
          var containsSplitter = false;
          var paneContent = panesContent[index];
          if (React18.isValidElement(paneContent)) {
            containsSplitter = paneContent.type.displayName === "Splitter";
          }
          var overlay = false;
          if (isDragging && dragIndex !== void 0) {
            overlay = dragIndex === index || dragIndex + 1 === index;
          }
          paneOptions.push(__assign9(__assign9(__assign9({}, PANE_DEFAULTS), { orientation, containsSplitter, overlay }), (panes || [])[index]));
        }
        return paneOptions;
      };
      _this2.mapSplitterPanes = function(panes, panesContent) {
        var ariaLabel = provideLocalizationService(_this2).toLanguageString(splitBarLabel, messages[splitBarLabel]);
        return panes.map(function(pane, index) {
          var splitterBar;
          var paneKey = index * 2;
          var barKey = paneKey + 1;
          if (index + 1 < panes.length) {
            var next = panes[index + 1];
            splitterBar = React18.createElement(SplitterBar, { key: barKey, index, orientation: pane.orientation, prev: pane, next, ariaLabel, onDrag: _this2.onBarDragResize, onToggle: _this2.onBarToggle, onKeyboardResize: _this2.onBarKeyboardResize });
          }
          var splitterPane = React18.createElement(SplitterPane, __assign9({ key: paneKey }, pane), panesContent[index]);
          return [splitterPane, splitterBar];
        });
      };
      _this2.onBarToggle = function(index, event) {
        var panesOptions = _this2.panesOptions(_this2.panesContent);
        var updatedState = panesOptions.map(function(pane, idx) {
          var paneProps = _this2.getPaneProps(pane);
          if (idx === index) {
            return __assign9(__assign9({}, paneProps), { collapsed: !pane.collapsed });
          } else {
            return __assign9({}, paneProps);
          }
        });
        if (_this2.props.onChange) {
          _this2.props.onChange({
            newState: updatedState,
            isLast: true,
            nativeEvent: event
          });
        }
      };
      _this2.onBarDragResize = function(event, barElement, index, isFirst, isLast) {
        var time = new Date().getTime();
        var pageX = event.pageX, pageY = event.pageY;
        var _a3 = _this2.surroudingPanes(barElement), prevElement = _a3.prevElement, nextElement = _a3.nextElement;
        if (!prevElement || !nextElement) {
          return;
        }
        if (isFirst) {
          _this2.setState({
            isDragging: true,
            dragIndex: index,
            startTime: time,
            originalX: pageX,
            originalY: pageY,
            originalPrevSize: _this2.elementSize(prevElement),
            originalNextSize: _this2.elementSize(nextElement)
          });
          return;
        }
        var _b = _this2.state, originalPrevSize = _b.originalPrevSize, originalNextSize = _b.originalNextSize, startTime = _b.startTime, originalX = _b.originalX, originalY = _b.originalY;
        if (!isFirst && time - startTime < DOUBLE_CLICK_WAIT_TIME) {
          if (isLast) {
            _this2.resetDragState();
          }
          return;
        }
        var delta;
        if (_this2.orientation === "vertical") {
          delta = pageY - originalY;
        } else if (_this2.isRtl) {
          delta = originalX - pageX;
        } else {
          delta = pageX - originalX;
        }
        _this2.resize(index, index + 1, originalPrevSize, originalNextSize, delta, isLast, event);
        if (isLast) {
          _this2.resetDragState();
        }
      };
      _this2.onBarKeyboardResize = function(barElement, index, delta, event) {
        var _a3 = _this2.surroudingPanes(barElement), prevElement = _a3.prevElement, nextElement = _a3.nextElement;
        var originalPrevSize = _this2.elementSize(prevElement);
        var originalNextSize = _this2.elementSize(nextElement);
        _this2.resize(index, index + 1, originalPrevSize, originalNextSize, delta, true, event);
      };
      _this2.containerSize = function() {
        if (!_this2._container) {
          return 0;
        }
        return _this2.elementSize(_this2._container, true);
      };
      _this2.panesOptions = function(panesContent) {
        return _this2.mapPaneOptions(_this2.panes, panesContent);
      };
      _this2.elementSize = function(el, isContainer) {
        var sizeType = isContainer ? "client" : "offset";
        if (_this2.orientation === "vertical") {
          return el["".concat(sizeType, "Height")];
        } else {
          return el["".concat(sizeType, "Width")];
        }
      };
      _this2.clamp = function(min, max, v) {
        return Math.min(max, Math.max(min, v));
      };
      _this2.fixedSize = function(size) {
        return size && size.length > 0;
      };
      validatePackage2(packageMetadata);
      _this2.state = {
        isDragging: false,
        dragIndex: void 0,
        startTime: 0,
        originalX: 0,
        originalY: 0,
        originalPrevSize: 0,
        originalNextSize: 0,
        panes: props.defaultPanes || []
      };
      return _this2;
    }
    Object.defineProperty(Splitter2.prototype, "isControlledState", {
      get: function() {
        return this.props.panes !== void 0;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Splitter2.prototype, "panes", {
      get: function() {
        return this.panesDuringOnChange !== void 0 ? this.panesDuringOnChange : this.isControlledState ? this.props.panes : this.state.panes;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Splitter2.prototype, "orientation", {
      get: function() {
        return this.props.orientation || "horizontal";
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Splitter2.prototype, "isRtl", {
      get: function() {
        return this._container && getComputedStyle(this._container).direction === "rtl" || false;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(Splitter2.prototype, "panesContent", {
      get: function() {
        return React18.Children.toArray(this.props.children).filter(function(c) {
          return c;
        });
      },
      enumerable: false,
      configurable: true
    });
    Splitter2.prototype.render = function() {
      var _this2 = this;
      var panesContent = this.panesContent;
      var panesOptions = this.panesOptions(panesContent);
      var className = classNames("k-widget", "k-splitter", "k-splitter-flex", "k-splitter-".concat(this.orientation), this.props.className);
      this.validatePanes(panesOptions);
      return React18.createElement("div", { style: this.props.style, ref: function(ref) {
        return _this2._container = ref;
      }, className }, this.mapSplitterPanes(panesOptions, panesContent));
    };
    Splitter2.prototype.surroudingPanes = function(barElement) {
      return {
        prevElement: barElement.previousElementSibling,
        nextElement: barElement.nextElementSibling
      };
    };
    Splitter2.prototype.isPercent = function(size) {
      return /%$/.test(size);
    };
    Splitter2.prototype.toPixels = function(size, splitterSize) {
      var result = parseInt(size, 10);
      if (this.isPercent(size)) {
        result = splitterSize * result / 100;
      }
      return result;
    };
    Splitter2.prototype.resetDragState = function() {
      this.setState({
        isDragging: false,
        dragIndex: void 0,
        startTime: 0,
        originalX: 0,
        originalY: 0,
        originalPrevSize: 0,
        originalNextSize: 0
      });
    };
    Splitter2.prototype.resize = function(prevIndex, nextIndex, originalPrevSize, originalNextSize, delta, isLast, event) {
      var _this2 = this;
      var panesOptions = this.panesOptions(this.panesContent);
      var prevOptions = panesOptions[prevIndex];
      var nextOptions = panesOptions[nextIndex];
      var total = originalPrevSize + originalNextSize;
      var splitterSize = this.containerSize();
      var px = function(s) {
        return _this2.toPixels(s, splitterSize);
      };
      var prevDragState = {
        index: prevIndex,
        initialSize: originalPrevSize,
        min: px(prevOptions.min) || total - px(nextOptions.max) || 0,
        max: px(prevOptions.max) || total - px(nextOptions.min) || total
      };
      var nextDragState = {
        index: nextIndex,
        initialSize: originalNextSize,
        min: px(nextOptions.min) || total - px(prevOptions.max) || 0,
        max: px(nextOptions.max) || total - px(prevOptions.min) || total
      };
      var resize = function(paneState, change) {
        var pane = panesOptions[paneState.index];
        var newSize = _this2.clamp(paneState.min, paneState.max, paneState.initialSize + change);
        if (_this2.isPercent(pane.size || "")) {
          return 100 * newSize / splitterSize + "%";
        } else {
          return newSize + "px";
        }
      };
      var prevSize;
      var nextSize;
      if (this.fixedSize(prevOptions.size) && this.fixedSize(nextOptions.size)) {
        prevSize = resize(prevDragState, delta);
        nextSize = resize(nextDragState, -delta);
      } else if (nextOptions.collapsible || this.fixedSize(nextOptions.size)) {
        nextSize = resize(nextDragState, -delta);
      } else {
        prevSize = resize(prevDragState, delta);
      }
      var updatedState = panesOptions.map(function(pane, idx) {
        var paneProps = _this2.getPaneProps(pane);
        if (idx === prevIndex) {
          return __assign9(__assign9({}, paneProps), { size: prevSize });
        } else if (idx === nextIndex) {
          return __assign9(__assign9({}, paneProps), { size: nextSize });
        } else {
          return __assign9({}, paneProps);
        }
      });
      this.panesDuringOnChange = updatedState;
      if (!this.isControlledState) {
        this.setState({
          panes: updatedState
        });
      }
      if (this.props.onChange) {
        this.props.onChange({
          newState: updatedState,
          isLast,
          nativeEvent: event
        });
      }
      this.panesDuringOnChange = void 0;
    };
    Splitter2.prototype.getPaneProps = function(pane) {
      var orientation = pane.orientation, overlay = pane.overlay, containsSplitter = pane.containsSplitter, others = __rest(pane, ["orientation", "overlay", "containsSplitter"]);
      return others;
    };
    Splitter2.displayName = "Splitter";
    return Splitter2;
  }(React18.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/card/Card.js
var React19 = __toESM(require_react());
var PropTypes12 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/card/interfaces/Enums.js
var avatarType;
(function(avatarType2) {
  avatarType2["TEXT"] = "text";
  avatarType2["IMAGE"] = "image";
  avatarType2["ICON"] = "icon";
})(avatarType || (avatarType = {}));
var cardOrientation;
(function(cardOrientation2) {
  cardOrientation2["HORIZONTAL"] = "horizontal";
  cardOrientation2["VERTICAL"] = "vertical";
})(cardOrientation || (cardOrientation = {}));
var cardType;
(function(cardType2) {
  cardType2["DEFAULT"] = "default";
  cardType2["primary"] = "primary";
  cardType2["INFO"] = "info";
  cardType2["SUCCESS"] = "success";
  cardType2["WARNING"] = "warning";
  cardType2["ERROR"] = "error";
})(cardType || (cardType = {}));
var cardActionsLayout;
(function(cardActionsLayout2) {
  cardActionsLayout2["START"] = "start";
  cardActionsLayout2["CENTER"] = "center";
  cardActionsLayout2["END"] = "end";
  cardActionsLayout2["STRETCHED"] = "stretched";
})(cardActionsLayout || (cardActionsLayout = {}));

// node_modules/@progress/kendo-react-layout/dist/es/card/Card.js
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Card = React19.forwardRef(function(props, ref) {
  var _a3;
  validatePackage2(packageMetadata);
  var children = props.children, dir = props.dir, style = props.style, className = props.className, type = props.type, orientation = props.orientation, customProps = __rest2(props, ["children", "dir", "style", "className", "type", "orientation"]);
  var target = React19.useRef(null);
  var chipRef = React19.useRef(null);
  React19.useImperativeHandle(target, function() {
    return {
      element: chipRef.current,
      props
    };
  });
  React19.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React19.createElement("div", __assign10({ dir, style, ref: chipRef, className: classNames("k-card", className, (_a3 = {}, _a3["k-card-".concat(type)] = type !== cardType.DEFAULT, _a3), orientation !== cardOrientation.HORIZONTAL ? "k-card-vertical" : "k-card-horizontal") }, customProps), children);
});
Card.displayName = "KendoReactCard";
Card.propTypes = {
  children: PropTypes12.node,
  className: PropTypes12.string,
  dir: PropTypes12.string,
  orientation: PropTypes12.oneOf(["horizontal", "vertical"]),
  style: PropTypes12.object,
  type: PropTypes12.oneOf(["default", "primary", "info", "success", "warning", "error"])
};
Card.defaultProps = {
  type: cardType.DEFAULT,
  orientation: cardOrientation.VERTICAL
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardHeader.js
var React20 = __toESM(require_react());
var PropTypes13 = __toESM(require_prop_types());
var CardHeader = function(props) {
  return React20.createElement("div", { style: props.style, className: classNames("k-card-header", props.className) }, props.children);
};
CardHeader.propTypes = {
  className: PropTypes13.string
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardTitle.js
var React21 = __toESM(require_react());
var PropTypes14 = __toESM(require_prop_types());
var CardTitle = function(props) {
  return React21.createElement("div", { style: props.style, className: classNames("k-card-title", props.className) }, props.children);
};
CardTitle.propTypes = {
  className: PropTypes14.string
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardBody.js
var React22 = __toESM(require_react());
var PropTypes15 = __toESM(require_prop_types());
var CardBody = function(props) {
  return React22.createElement("div", { style: props.style, className: classNames("k-card-body", props.className) }, props.children);
};
CardBody.propTypes = {
  className: PropTypes15.string
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardActions.js
var React23 = __toESM(require_react());
var PropTypes16 = __toESM(require_prop_types());
var CardActions = function(props) {
  return React23.createElement("div", { style: props.style, className: classNames("k-card-actions", props.className, "k-card-actions-".concat(props.layout), props.orientation !== cardOrientation.VERTICAL ? "k-card-actions-horizontal" : "k-card-actions-vertical") }, props.children);
};
CardActions.propTypes = {
  layout: PropTypes16.oneOf(["stretched", "start", "center", "end"]),
  orientation: PropTypes16.oneOf(["horizontal", "vertical"])
};
CardActions.defaultProps = {
  layout: cardActionsLayout.START,
  orientation: cardOrientation.HORIZONTAL
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardImage.js
var React24 = __toESM(require_react());
var PropTypes17 = __toESM(require_prop_types());
var CardImage = function(props) {
  return React24.createElement("img", { style: props.style, className: classNames("k-card-image", props.className), src: props.src });
};
CardImage.propTypes = {
  className: PropTypes17.string,
  src: PropTypes17.string
};
CardImage.defaultProps = {
  src: ""
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardSubtitle.js
var React25 = __toESM(require_react());
var PropTypes18 = __toESM(require_prop_types());
var CardSubtitle = function(props) {
  return React25.createElement("div", { style: props.style, className: classNames("k-card-subtitle", props.className) }, props.children);
};
CardSubtitle.propTypes = {
  className: PropTypes18.string
};

// node_modules/@progress/kendo-react-layout/dist/es/card/CardFooter.js
var React26 = __toESM(require_react());
var PropTypes19 = __toESM(require_prop_types());
var CardFooter = function(props) {
  return React26.createElement("div", { style: props.style, className: classNames("k-card-footer", props.className) }, props.children);
};
CardFooter.propTypes = {
  className: PropTypes19.string
};

// node_modules/@progress/kendo-react-layout/dist/es/card/Avatar.js
var React27 = __toESM(require_react());
var PropTypes20 = __toESM(require_prop_types());
var Avatar = function(props) {
  var _a3;
  validatePackage2(packageMetadata);
  return React27.createElement(
    "div",
    { style: props.style, className: classNames("k-avatar", (_a3 = {}, _a3["k-avatar-bordered"] = props.border, _a3["k-rounded-".concat(kendoThemeMaps.roundedMap[props.rounded] || props.rounded)] = props.rounded, _a3["k-avatar-".concat(kendoThemeMaps.sizeMap[props.size] || props.size)] = props.size, _a3["k-avatar-".concat(props.fillMode)] = props.fillMode, _a3["k-avatar-".concat(props.fillMode, "-").concat(props.themeColor)] = Boolean(props.fillMode && props.themeColor), _a3), props.className) },
    React27.createElement("span", { className: "k-avatar-".concat(props.type) }, props.children)
  );
};
Avatar.propTypes = {
  className: PropTypes20.string,
  type: PropTypes20.oneOf(["text", "image", "icon"]),
  size: PropTypes20.oneOf([null, "small", "medium", "large"]),
  rounded: PropTypes20.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: PropTypes20.oneOf([null, "solid", "outline"]),
  /* eslint-disable max-len */
  themeColor: PropTypes20.oneOf([null, "base", "dark", "error", "info", "inverse", "inverse", "light", "primary", "secondary", "success", "tertiary", "warning"])
};
Avatar.defaultProps = {
  type: avatarType.TEXT,
  size: "medium",
  rounded: "full",
  fillMode: "solid",
  themeColor: "primary"
};

// node_modules/@progress/kendo-react-layout/dist/es/drawer/Drawer.js
var React31 = __toESM(require_react());
var PropTypes23 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/drawer/context/DrawerContext.js
var React28 = __toESM(require_react());
var defaultContext = {
  animation: true,
  expanded: false,
  mode: "overlay",
  position: "start",
  mini: false,
  dir: "ltr",
  width: 240,
  miniWidth: 50
};
var DrawerContext = React28.createContext(defaultContext);

// node_modules/@progress/kendo-react-layout/dist/es/drawer/DrawerNavigation.js
var React30 = __toESM(require_react());
var PropTypes22 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/drawer/DrawerItem.js
var React29 = __toESM(require_react());
var PropTypes21 = __toESM(require_prop_types());
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var DrawerItem = React29.forwardRef(function(props, target) {
  var className = props.className, style = props.style, text = props.text, icon = props.icon, svgIcon = props.svgIcon, separator = props.separator, disabled = props.disabled, selected = props.selected, onSelect = props.onSelect, index = props.index, tabIndex = props.tabIndex, children = props.children, others = __rest3(props, ["className", "style", "text", "icon", "svgIcon", "separator", "disabled", "selected", "onSelect", "index", "tabIndex", "children"]);
  var _a3 = React29.useContext(DrawerContext), expanded = _a3.expanded, mini = _a3.mini, item = _a3.item;
  var elementRef = React29.useRef(null);
  var focusElement = React29.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  React29.useImperativeHandle(target, function() {
    return {
      element: elementRef.current,
      focus: focusElement,
      props
    };
  });
  var itemClassNames = classNames("k-drawer-item", {
    "k-selected": selected,
    "k-disabled": disabled
  }, className);
  var handleClick = React29.useCallback(function(event) {
    if (onSelect && !disabled) {
      var handle = {
        element: elementRef.current,
        focus: focusElement,
        props
      };
      onSelect(handle, index, event);
    }
  }, [onSelect, index, disabled]);
  var drawerItemContent = React29.createElement(
    React29.Fragment,
    null,
    (icon || svgIcon) && React29.createElement(IconWrap, { name: icon ? toIconName(icon) : icon, icon: svgIcon }),
    !expanded && mini ? null : React29.createElement("span", { className: "k-item-text" }, text)
  );
  return separator ? React29.createElement("li", { className: "k-drawer-item k-drawer-separator", role: "separator" }) : React29.createElement("li", __assign11({ ref: elementRef, className: itemClassNames, style, role: "menuitem", "aria-label": text, "aria-disabled": disabled, onClick: handleClick, tabIndex: getTabIndex(tabIndex, disabled) }, others), !item ? drawerItemContent : children);
});
DrawerItem.propTypes = {
  className: PropTypes21.string,
  style: PropTypes21.object,
  text: PropTypes21.string,
  icon: PropTypes21.string,
  svgIcon: svgIconPropType,
  separator: PropTypes21.bool,
  selected: PropTypes21.bool,
  disabled: PropTypes21.bool,
  targetItem: PropTypes21.any
};
DrawerItem.displayName = "KendoDrawerItem";

// node_modules/@progress/kendo-react-layout/dist/es/drawer/DrawerNavigation.js
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var DEFAULT_EXPANDED_WIDTH = 240;
var DEFAULT_MINI_WIDTH = 50;
var DEFAULT_ANIMATION = { type: "slide", duration: 200 };
var NO_ANIMATION = { type: "slide", duration: 0 };
var DrawerNavigation = React30.forwardRef(function(props, target) {
  var children = props.children, className = props.className, style = props.style;
  var _a3 = React30.useContext(DrawerContext), animation = _a3.animation, expanded = _a3.expanded, mode = _a3.mode, position = _a3.position, onOverlayClick = _a3.onOverlayClick, mini = _a3.mini, dir = _a3.dir, width = _a3.width, miniWidth = _a3.miniWidth, items = _a3.items, item = _a3.item, onSelect = _a3.onSelect;
  var elementRef = React30.useRef(null);
  var focusElement = React30.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  var customSettings = typeof animation !== "boolean" ? animation : animation === false ? NO_ANIMATION : DEFAULT_ANIMATION;
  var navWidth = width ? width : DEFAULT_EXPANDED_WIDTH;
  var navMiniWidth = miniWidth ? miniWidth : DEFAULT_MINI_WIDTH;
  React30.useImperativeHandle(target, function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  });
  var navigationClassNames = React30.useMemo(function() {
    return "k-widget k-drawer " + classNames({
      "k-drawer-start": position === "start",
      "k-drawer-end": position === "end"
    }, className);
  }, [position]);
  var expandPush = {
    opacity: 1,
    flexBasis: navWidth,
    WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
    transition: "all " + (customSettings && customSettings.duration) + "ms"
  };
  var expandOverlay = {
    opacity: 1,
    transform: "translateX(0px)",
    WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
    transition: "all " + (customSettings && customSettings.duration) + "ms"
  };
  var collapsePush = {
    opacity: !mini ? 0 : 1,
    flexBasis: !mini ? 0 : navMiniWidth,
    WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
    transition: "all " + (customSettings && customSettings.duration) + "ms"
  };
  var collapseOverlay = {
    opacity: 0,
    transform: "translateX(-100%)",
    WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
    transition: "all " + (customSettings && customSettings.duration) + "ms"
  };
  var collapseOverlayRtl = {
    opacity: 0,
    transform: "translateX(100%)",
    WebkitTransition: "all " + (customSettings && customSettings.duration) + "ms",
    transition: "all " + (customSettings && customSettings.duration) + "ms"
  };
  var collapseOverlayMini = {
    transform: "translateX(0%)",
    WebkitTransitionDuration: (customSettings && customSettings.duration) + "ms",
    transitionDuration: (customSettings && customSettings.duration) + "ms"
  };
  var drawerAnimation = expanded ? mode === "push" ? expandPush : expandOverlay : mode === "push" ? collapsePush : dir === "ltr" && position === "start" || dir === "rtl" && position === "end" ? mini ? collapseOverlayMini : collapseOverlay : mini ? collapseOverlayMini : collapseOverlayRtl;
  var drawerItems = items && React30.createElement("ul", { className: "k-drawer-items", role: "menubar", "aria-label": "drawer-list", "aria-expanded": expanded }, items.map(function(element8, index) {
    var drawerItemProps = __assign12(__assign12({ index }, element8), { onSelect });
    var ItemComp = item || DrawerItem;
    return React30.createElement(ItemComp, __assign12({ key: index }, drawerItemProps));
  }));
  var drawerNavigation = React30.createElement(
    "div",
    { style: customSettings ? __assign12(__assign12({}, drawerAnimation), style) : style, className: navigationClassNames, ref: elementRef },
    React30.createElement("div", { className: "k-drawer-wrapper", style: !expanded && mini && mode === "overlay" ? { width: navMiniWidth } : { width: navWidth } }, drawerItems || children)
  );
  return mode === "overlay" ? React30.createElement(
    React30.Fragment,
    null,
    expanded && React30.createElement("div", { className: "k-overlay", onClick: onOverlayClick }),
    drawerNavigation
  ) : drawerNavigation;
});
DrawerNavigation.propTypes = {
  children: PropTypes22.any,
  className: PropTypes22.string,
  style: PropTypes22.object,
  item: PropTypes22.any,
  tabIndex: PropTypes22.number
};
DrawerNavigation.displayName = "KendoDrawerNavigation";

// node_modules/@progress/kendo-react-layout/dist/es/drawer/Drawer.js
var _this = void 0;
var Drawer = React31.forwardRef(function(props, target) {
  validatePackage2(packageMetadata);
  var expanded = props.expanded, mode = props.mode, position = props.position, className = props.className, children = props.children, style = props.style, animation = props.animation, mini = props.mini, width = props.width, miniWidth = props.miniWidth, items = props.items, item = props.item, tabIndex = props.tabIndex, onOverlayClick = props.onOverlayClick, onSelect = props.onSelect;
  var elementRef = React31.useRef(null);
  var focusElement = React31.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  React31.useImperativeHandle(target, function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  });
  var handleSelect = React31.useCallback(function(itemTarget, itemIndex, event) {
    if (items && onSelect) {
      var ev = {
        itemTarget,
        itemIndex,
        syntheticEvent: event,
        nativeEvent: event && event.nativeEvent,
        target: _this
      };
      onSelect.call(void 0, ev);
    }
  }, [items, onSelect]);
  var dir = useDir(elementRef, props.dir);
  var drawerClassNames = classNames({
    "k-drawer-container": true,
    "k-drawer-expanded": expanded,
    "k-drawer-overlay": mode === "overlay",
    "k-drawer-push": mode === "push",
    "k-drawer-mini": mini
  }, className);
  return React31.createElement(
    DrawerContext.Provider,
    { value: {
      animation,
      expanded,
      mode,
      position,
      mini,
      dir,
      items,
      item,
      width,
      miniWidth,
      onOverlayClick,
      onSelect: handleSelect
    } },
    React31.createElement(
      "div",
      { className: drawerClassNames, ref: elementRef, dir, style, tabIndex },
      items && React31.createElement(DrawerNavigation, null),
      children
    )
  );
});
Drawer.propTypes = {
  animation: PropTypes23.any,
  expanded: PropTypes23.bool,
  children: PropTypes23.any,
  className: PropTypes23.string,
  dir: PropTypes23.string,
  mode: PropTypes23.string,
  position: PropTypes23.string,
  mini: PropTypes23.bool,
  style: PropTypes23.object,
  tabIndex: PropTypes23.number,
  width: PropTypes23.number,
  miniWidth: PropTypes23.number,
  selected: PropTypes23.number,
  onSelect: PropTypes23.func,
  onOverlayClick: PropTypes23.func
};
var defaultProps = {
  animation: true,
  expanded: false,
  mode: "overlay",
  position: "start",
  mini: false,
  dir: "ltr",
  width: 240,
  miniWidth: 50
};
Drawer.defaultProps = defaultProps;
Drawer.displayName = "KendoDrawer";

// node_modules/@progress/kendo-react-layout/dist/es/drawer/DrawerContent.js
var React32 = __toESM(require_react());
var PropTypes24 = __toESM(require_prop_types());
var DrawerContent = React32.forwardRef(function(props, target) {
  var children = props.children, className = props.className, style = props.style;
  var elementRef = React32.useRef(null);
  React32.useImperativeHandle(target, function() {
    return {
      element: elementRef.current
    };
  });
  var contentClassNames = classNames({
    "k-drawer-content": true
  }, className);
  return React32.createElement("div", { className: contentClassNames, style, ref: elementRef }, children);
});
DrawerContent.propTypes = {
  children: PropTypes24.any,
  className: PropTypes24.string,
  style: PropTypes24.object
};
DrawerContent.displayName = "KendoDrawerContent";

// node_modules/@progress/kendo-react-layout/dist/es/stepper/Stepper.js
var React38 = __toESM(require_react());
var PropTypes28 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/stepper/context/StepperContext.js
var React33 = __toESM(require_react());
var defaultContext2 = {
  linear: false,
  mode: "steps",
  value: 0
};
var StepperContext = React33.createContext(defaultContext2);

// node_modules/@progress/kendo-react-layout/dist/es/stepper/Step.js
var React34 = __toESM(require_react());
var PropTypes25 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/stepper/contants.js
var DEFAULT_ANIMATION_DURATION = 400;
var NO_ANIMATION2 = 0;

// node_modules/@progress/kendo-react-layout/dist/es/stepper/messages/index.js
var _a2;
var optionalText = "stepper.optionalText";
var progBarAriaLabel = "stepper.progBarAriaLabel";
var messages2 = (_a2 = {}, _a2[optionalText] = "(Optional)", _a2[progBarAriaLabel] = "progressbar", _a2);

// node_modules/@progress/kendo-react-layout/dist/es/stepper/Step.js
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var __rest4 = function(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var Step = React34.forwardRef(function(props, target) {
  var children = props.children, className = props.className, current = props.current, disabled = props.disabled, focused = props.focused, icon = props.icon, svgIcon = props.svgIcon, index = props.index, isValid = props.isValid, label = props.label, optional = props.optional, style = props.style, tabIndex = props.tabIndex, text = props.text, others = __rest4(props, ["children", "className", "current", "disabled", "focused", "icon", "svgIcon", "index", "isValid", "label", "optional", "style", "tabIndex", "text"]);
  var _a3 = React34.useContext(StepperContext), animationDuration = _a3.animationDuration, isVertical = _a3.isVertical, item = _a3.item, linear = _a3.linear, mode = _a3.mode, numOfSteps = _a3.numOfSteps, value = _a3.value, onChange = _a3.onChange, onFocus = _a3.onFocus, successIcon = _a3.successIcon, errorIcon = _a3.errorIcon, successSVGIcon = _a3.successSVGIcon, errorSVGIcon = _a3.errorSVGIcon;
  var elementRef = React34.useRef(null);
  var focusElement = React34.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React34.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React34.useImperativeHandle(target, getImperativeHandle);
  var allowClick = !linear || (index === value - 1 || index === value || index === value + 1);
  var isInLabel = mode === "labels" || Boolean(icon) && Boolean(label);
  var localizationService = useLocalization();
  var localizeMessage = function(message) {
    return localizationService.toLanguageString(message, messages2[message]);
  };
  var optionalMessage = localizeMessage(optionalText);
  var progressAnimation = typeof animationDuration === "number" ? animationDuration : animationDuration !== false ? DEFAULT_ANIMATION_DURATION : NO_ANIMATION2;
  var handleClick = React34.useCallback(function(event) {
    if (onChange && !disabled) {
      dispatchEvent(onChange, event, getImperativeHandle(), { value: index });
    }
  }, [onChange, value, disabled]);
  var handleFocus = React34.useCallback(function(event) {
    if (onFocus && !disabled) {
      dispatchEvent(onFocus, event, getImperativeHandle(), void 0);
    }
  }, [onFocus, disabled]);
  var itemClassNames = React34.useMemo(function() {
    return classNames("k-step", {
      "k-step-first": index === 0,
      "k-step-last": numOfSteps && index === numOfSteps - 1,
      "k-step-done": index < value,
      "k-step-current": current,
      "k-step-optional": optional,
      "k-step-error": isValid !== void 0 && !isValid,
      "k-step-success": isValid
    }, {
      "k-disabled": disabled,
      "k-focus": focused
    }, className);
  }, [index, numOfSteps, value, current, optional, disabled, focused, isValid, className]);
  var itemStyles = React34.useMemo(function() {
    return __assign13({ maxWidth: !isVertical ? "calc(100% / ".concat(numOfSteps, ")") : void 0, maxHeight: isVertical ? "calc(100% / ".concat(numOfSteps, ")") : void 0, pointerEvents: !allowClick ? "none" : void 0 }, style);
  }, [isVertical, numOfSteps, style, allowClick]);
  var validationIconCustom = isValid ? successIcon : errorIcon;
  var validationIcons = validationIconCustom ? React34.createElement("span", { className: "k-step-indicator-icon " + validationIconCustom, "aria-hidden": "true" }) : React34.createElement(IconWrap, { className: "k-step-indicator-icon", name: isValid ? "check-circle" : "exclamation-circle", icon: isValid ? successSVGIcon || checkOutlineIcon : errorSVGIcon || exclamationCircleIcon });
  var stepIndicator = React34.createElement(React34.Fragment, null, mode !== "labels" ? React34.createElement("span", { className: "k-step-indicator", "aria-hidden": true, style: { transitionDuration: progressAnimation + "ms" } }, icon || svgIcon ? !isInLabel && isValid !== void 0 ? validationIcons : React34.createElement(IconWrap, { className: "k-step-indicator-icon", name: icon ? toIconName(icon) : icon, icon: svgIcon }) : isValid !== void 0 ? validationIcons : React34.createElement("span", { className: "k-step-indicator-text" }, text ? text : index + 1)) : null);
  var stepLabel = React34.createElement(
    "span",
    { className: "k-step-label" },
    label && React34.createElement("span", { className: "k-step-text" }, label),
    isInLabel && isValid !== void 0 && validationIcons,
    optional && React34.createElement("span", { className: "k-step-label-optional" }, optionalMessage)
  );
  var stepLink = React34.createElement(
    React34.Fragment,
    null,
    stepIndicator,
    stepLabel
  );
  return React34.createElement(
    "li",
    __assign13({ ref: elementRef, className: itemClassNames, style: itemStyles }, others),
    React34.createElement("a", { className: "k-step-link", title: label ? label : void 0, onClick: handleClick, onFocus: handleFocus, tabIndex: tabIndex ? tabIndex : focused ? 0 : -1, "aria-current": current, "aria-disabled": disabled || !allowClick || void 0, "aria-invalid": isValid !== void 0 && !isValid || void 0 }, !item ? stepLink : children)
  );
});
Step.propTypes = {
  children: PropTypes25.any,
  className: PropTypes25.string,
  // content: PropTypes.any,
  current: PropTypes25.bool,
  disabled: PropTypes25.bool,
  icon: PropTypes25.string,
  index: PropTypes25.number,
  isValid: PropTypes25.bool,
  label: PropTypes25.string,
  optional: PropTypes25.bool,
  style: PropTypes25.object,
  tabIndex: PropTypes25.number,
  text: PropTypes25.string
};
var defaultProps2 = {
  tabIndex: 0
};
Step.defaultProps = defaultProps2;
Step.displayName = "KendoStep";

// node_modules/@progress/kendo-react-progressbars/dist/es/chunkprogressbar/ChunkProgressBar.js
var React35 = __toESM(require_react());
var PropTypes26 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-progressbars/dist/es/common/constants.js
var MIN_RATIO = 1e-5;
var LABEL_DECIMALS = 3;
var DEFAULT_ANIMATION_DURATION2 = 400;
var NO_ANIMATION3 = 0;

// node_modules/@progress/kendo-react-progressbars/dist/es/common/utils.js
var truncateNumber = function(value) {
  var numberParts = value.toString().split(".");
  return numberParts.length === 1 ? "".concat(numberParts[0]) : "".concat(numberParts[0], ".").concat(numberParts[1].substr(0, LABEL_DECIMALS));
};
var calculatePercentage = function(min, max, value) {
  var onePercent = Math.abs((max - min) / 100);
  return Math.abs((value - min) / onePercent);
};
var updateProgress = function(progressRef, progressWrapRef, percentage, isVertical) {
  var progressPercentage = Math.max(percentage, 0.01);
  var progressWrapPercentage = 100 / progressPercentage * 100;
  if (progressRef.current && progressWrapRef.current) {
    progressRef.current.style.width = !isVertical ? "".concat(progressPercentage, "%") : "100%";
    progressWrapRef.current.style.width = !isVertical ? "".concat(progressWrapPercentage, "%") : "100%";
    progressRef.current.style.height = isVertical ? "".concat(progressPercentage, "%") : "100%";
    progressWrapRef.current.style.height = isVertical ? "".concat(progressWrapPercentage, "%") : "100%";
  }
};
var calculateRatio = function(min, max, value) {
  return Math.max((value - min) / (max - min), MIN_RATIO);
};

// node_modules/@progress/kendo-react-progressbars/dist/es/package-metadata.js
var packageMetadata2 = {
  name: "@progress/kendo-react-progressbars",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1680171754,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-progressbars/dist/es/chunkprogressbar/ChunkProgressBar.js
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
var ChunkProgressBar = React35.forwardRef(function(props, target) {
  validatePackage2(packageMetadata2);
  var _a3 = props.chunkCount, chunkCount = _a3 === void 0 ? defaultProps3.chunkCount : _a3, className = props.className, disabled = props.disabled, orientation = props.orientation, _b = props.min, min = _b === void 0 ? defaultProps3.min : _b, _c = props.max, max = _c === void 0 ? defaultProps3.max : _c, _d = props.reverse, reverse = _d === void 0 ? defaultProps3.reverse : _d, style = props.style, tabIndex = props.tabIndex, emptyStyle = props.emptyStyle, emptyClassName = props.emptyClassName, progressStyle = props.progressStyle, progressClassName = props.progressClassName;
  var elementRef = React35.useRef(null);
  var focusElement = React35.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  React35.useImperativeHandle(target, function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  });
  var value = props.value || defaultProps3.value;
  var indeterminateProp = props.value === null;
  var dir = useRtl(elementRef, props.dir);
  var isVertical = orientation === "vertical";
  var wrapperProps = {
    className: classNames("k-progressbar k-chunk-progressbar", {
      "k-progressbar-horizontal": !isVertical,
      "k-progressbar-vertical": isVertical,
      "k-progressbar-reverse": reverse,
      "k-progressbar-indeterminate": indeterminateProp,
      "k-disabled": disabled
    }, className),
    ref: elementRef,
    dir,
    tabIndex: getTabIndex(tabIndex, disabled),
    role: "progressbar",
    "aria-label": props.ariaLabel,
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-valuenow": indeterminateProp ? void 0 : value,
    "aria-disabled": disabled,
    style
  };
  var Chunks = function(_a4) {
    var count = _a4.count;
    var chunks = [];
    var chunkSizePercentage = 100 / count + "%";
    var progressRatio = calculateRatio(min, max, value);
    var completedChunksCount = Math.floor(progressRatio * count);
    var completedChunks = Array(count).fill(false);
    for (var i = 0; i < completedChunksCount; i++) {
      completedChunks[i] = true;
    }
    for (var i = 0; i < count; ++i) {
      var isComplete = completedChunks[i];
      var classes = isComplete ? progressClassName : emptyClassName;
      var layoutStyles = {
        width: !isVertical ? chunkSizePercentage : void 0,
        height: isVertical ? chunkSizePercentage : void 0
      };
      var styles = isComplete ? progressStyle : emptyStyle;
      var mergedStyles = __assign14(__assign14({}, layoutStyles), styles);
      chunks.push(React35.createElement("li", { key: i, className: classNames("k-progress-chunk", {
        "k-first": i === 0,
        "k-last": i === count - 1,
        "k-selected": isComplete
      }, classes), style: mergedStyles }));
    }
    return React35.createElement(React35.Fragment, null, chunks);
  };
  return React35.createElement(
    "div",
    __assign14({}, wrapperProps),
    React35.createElement(
      "ul",
      { className: "k-progressbar-chunks k-reset" },
      React35.createElement(Chunks, { count: chunkCount || defaultProps3.chunkCount })
    )
  );
});
ChunkProgressBar.propTypes = {
  chunkCount: PropTypes26.number,
  ariaLabel: PropTypes26.string,
  disabled: PropTypes26.bool,
  reverse: PropTypes26.bool,
  max: PropTypes26.number,
  min: PropTypes26.number,
  value: PropTypes26.number,
  tabIndex: PropTypes26.number,
  emptyStyle: PropTypes26.object,
  emptyClassName: PropTypes26.string,
  progressStyle: PropTypes26.object,
  progressClassName: PropTypes26.string
};
var defaultProps3 = {
  chunkCount: 5,
  min: 0,
  max: 100,
  value: 0,
  disabled: false,
  reverse: false
};
ChunkProgressBar.defaultProps = defaultProps3;
ChunkProgressBar.displayName = "KendoChunkProgressBar";

// node_modules/@progress/kendo-react-progressbars/dist/es/progressbar/ProgressBar.js
var React37 = __toESM(require_react());
var PropTypes27 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-progressbars/dist/es/progressbar/hooks/usePrevious.js
var React36 = __toESM(require_react());
var usePrevious = function(value) {
  var ref = React36.useRef();
  React36.useEffect(function() {
    ref.current = value;
  });
  return ref.current;
};

// node_modules/@progress/kendo-react-progressbars/dist/es/progressbar/ProgressBar.js
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
var ProgressBar = React37.forwardRef(function(props, target) {
  validatePackage2(packageMetadata2);
  var animation = props.animation, disabled = props.disabled, _a3 = props.reverse, reverse = _a3 === void 0 ? defaultProps4.reverse : _a3, orientation = props.orientation, labelVisible = props.labelVisible, labelPlacement = props.labelPlacement, _b = props.max, max = _b === void 0 ? defaultProps4.max : _b, _c = props.min, min = _c === void 0 ? defaultProps4.min : _c, tabIndex = props.tabIndex, className = props.className, style = props.style, emptyStyle = props.emptyStyle, emptyClassName = props.emptyClassName, progressStyle = props.progressStyle, progressClassName = props.progressClassName;
  var elementRef = React37.useRef(null);
  var progressStatusRef = React37.useRef(null);
  var progressStatusWrapRef = React37.useRef(null);
  var focusElement = React37.useCallback(function() {
    if (elementRef.current) {
      elementRef.current.focus();
    }
  }, []);
  React37.useImperativeHandle(target, function() {
    return {
      element: elementRef.current,
      progressStatusElement: progressStatusRef.current,
      progressStatusWrapElement: progressStatusWrapRef.current,
      focus: focusElement
    };
  });
  var value = props.value || defaultProps4.value;
  var prevValue = usePrevious(value);
  var indeterminateProp = props.value === null;
  var dir = useRtl(elementRef, props.dir);
  var isVertical = orientation === "vertical";
  var formattedLabel = truncateNumber(value);
  var labelProps = {
    value
  };
  var renderLabel = labelVisible ? props.label ? React37.createElement(
    "span",
    { className: "k-progress-status" },
    React37.createElement(props.label, __assign15({}, labelProps))
  ) : React37.createElement("span", { className: "k-progress-status" }, formattedLabel) : void 0;
  var wrapperProps = {
    className: classNames("k-progressbar", {
      "k-progressbar-horizontal": !isVertical,
      "k-progressbar-vertical": isVertical,
      "k-progressbar-reverse": reverse,
      "k-progressbar-indeterminate": indeterminateProp,
      "k-disabled": disabled
    }, className),
    ref: elementRef,
    dir,
    tabIndex: getTabIndex(tabIndex, disabled),
    role: "progressbar",
    "aria-label": props.ariaLabel,
    "aria-valuemin": min,
    "aria-valuemax": max,
    "aria-valuenow": indeterminateProp ? void 0 : value,
    "aria-disabled": disabled,
    style
  };
  var positionClasses = classNames("k-progress-status-wrap", {
    "k-progress-start": labelPlacement === "start",
    "k-progress-center": labelPlacement === "center",
    "k-progress-end": labelPlacement === "end" || labelPlacement === void 0
  });
  var animationDuration = typeof animation !== "boolean" && animation !== void 0 ? animation.duration : animation ? DEFAULT_ANIMATION_DURATION2 : NO_ANIMATION3;
  var handleStart = React37.useCallback(function() {
    var percentage = calculatePercentage(min, max, prevValue);
    updateProgress(progressStatusRef, progressStatusWrapRef, percentage, isVertical);
  }, [isVertical, max, min, prevValue]);
  var handleUpdate = React37.useCallback(function(progress) {
    var percentage = calculatePercentage(min, max, prevValue + (value - prevValue) * progress);
    updateProgress(progressStatusRef, progressStatusWrapRef, percentage, isVertical);
  }, [min, max, prevValue, value, isVertical]);
  var handleEnd = React37.useCallback(function() {
    var percentage = calculatePercentage(min, max, value);
    updateProgress(progressStatusRef, progressStatusWrapRef, percentage, isVertical);
  }, [isVertical, max, min, value]);
  useAnimation({
    duration: animationDuration,
    onStart: handleStart,
    onUpdate: handleUpdate,
    onEnd: handleEnd
  }, [value, animationDuration]);
  return React37.createElement(
    "div",
    __assign15({}, wrapperProps),
    React37.createElement("span", { className: positionClasses + (emptyClassName ? " " + emptyClassName : ""), style: emptyStyle }, renderLabel),
    React37.createElement(
      "div",
      { className: "k-progressbar-value k-selected", style: progressStyle, ref: progressStatusRef },
      React37.createElement("span", { className: positionClasses + (progressClassName ? " " + progressClassName : ""), ref: progressStatusWrapRef }, renderLabel)
    )
  );
});
ProgressBar.propTypes = {
  animation: PropTypes27.any,
  ariaLabel: PropTypes27.string,
  disabled: PropTypes27.bool,
  reverse: PropTypes27.bool,
  label: PropTypes27.any,
  labelVisible: PropTypes27.bool,
  labelPlacement: PropTypes27.oneOf(["start", "center", "end"]),
  max: PropTypes27.number,
  min: PropTypes27.number,
  value: PropTypes27.number,
  tabIndex: PropTypes27.number,
  emptyStyle: PropTypes27.object,
  emptyClassName: PropTypes27.string,
  progressStyle: PropTypes27.object,
  progressClassName: PropTypes27.string
};
var defaultProps4 = {
  animation: false,
  min: 0,
  max: 100,
  value: 0,
  disabled: false,
  reverse: false,
  labelVisible: true
};
ProgressBar.defaultProps = defaultProps4;
ProgressBar.displayName = "KendoProgressBar";

// node_modules/@progress/kendo-react-layout/dist/es/stepper/Stepper.js
var __assign16 = function() {
  __assign16 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign16.apply(this, arguments);
};
var Stepper = React38.forwardRef(function(props, target) {
  validatePackage2(packageMetadata);
  var animationDuration = props.animationDuration, children = props.children, className = props.className, disabled = props.disabled, errorIcon = props.errorIcon, errorSVGIcon = props.errorSVGIcon, item = props.item, items = props.items, linear = props.linear, mode = props.mode, orientation = props.orientation, style = props.style, successIcon = props.successIcon, successSVGIcon = props.successSVGIcon, onChange = props.onChange, onFocus = props.onFocus;
  var localizationService = useLocalization();
  var pbAriaLabel = localizationService.toLanguageString(progBarAriaLabel, messages2[progBarAriaLabel]);
  var elementRef = React38.useRef(null);
  var focusElement = React38.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React38.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React38.useImperativeHandle(target, getImperativeHandle);
  var value = props.value || defaultProps5.value;
  var _a3 = React38.useState(value), focusedIdx = _a3[0], setFocusedIdx = _a3[1];
  var numOfSteps = items ? items.length : 0;
  var isVertical = orientation === "vertical";
  var dir = useRtl(elementRef, props.dir);
  var animation = typeof animationDuration === "number" ? animationDuration : animationDuration !== false ? DEFAULT_ANIMATION_DURATION : NO_ANIMATION2;
  var dispatchChangeEvent = React38.useCallback(function(event, val) {
    var prevIdx = val === value - 1;
    var currIdx = val === value;
    var nextIdx = val === value + 1;
    var allowClick = !linear || (prevIdx || currIdx || nextIdx);
    if (value !== val && onChange && !disabled && allowClick) {
      dispatchEvent(onChange, event, getImperativeHandle(), { value: val });
      setFocusedIdx(val);
    }
  }, [value, linear, onChange, disabled, setFocusedIdx]);
  var handleChange = React38.useCallback(function(event) {
    var currentValue = event.value;
    var syntethicEvent = event.syntheticEvent;
    dispatchChangeEvent(syntethicEvent, currentValue);
  }, [dispatchChangeEvent]);
  var handleFocus = React38.useCallback(function(event) {
    if (onFocus && !disabled) {
      dispatchEvent(onFocus, event.syntheticEvent, getImperativeHandle(), void 0);
    }
  }, [onFocus, disabled]);
  var handleEnter = React38.useCallback(function(event) {
    dispatchChangeEvent(event, focusedIdx);
  }, [dispatchChangeEvent, focusedIdx]);
  var handleKeyDown = React38.useCallback(function(event) {
    var isRtl = dir === "rtl";
    var currIndex = focusedIdx;
    var maxNavIndex = items.length - 1;
    switch (event.keyCode) {
      case Keys.left:
        event.preventDefault();
        if (!isRtl && currIndex > 0) {
          setFocusedIdx(currIndex - 1);
        }
        if (isRtl && currIndex < maxNavIndex) {
          setFocusedIdx(currIndex + 1);
        }
        break;
      case Keys.right:
        event.preventDefault();
        if (!isRtl && currIndex < maxNavIndex) {
          setFocusedIdx(currIndex + 1);
        }
        if (isRtl && currIndex > 0) {
          setFocusedIdx(currIndex - 1);
        }
        break;
      case Keys.up:
        event.preventDefault();
        if (!isRtl && currIndex > 0) {
          setFocusedIdx(currIndex - 1);
        }
        if (isRtl && currIndex > 0) {
          setFocusedIdx(currIndex - 1);
        }
        break;
      case Keys.down:
        event.preventDefault();
        if (!isRtl && currIndex < maxNavIndex) {
          setFocusedIdx(currIndex + 1);
        }
        if (isRtl && currIndex < maxNavIndex) {
          setFocusedIdx(currIndex + 1);
        }
        break;
      case Keys.home:
        event.preventDefault();
        setFocusedIdx(0);
        break;
      case Keys.end:
        event.preventDefault();
        setFocusedIdx(maxNavIndex);
        break;
      case Keys.space:
        event.preventDefault();
        break;
      case Keys.enter:
        event.preventDefault();
        if (!items[currIndex].disabled) {
          handleEnter(event);
        }
        break;
      default:
    }
  }, [items, setFocusedIdx, focusedIdx, dir, handleEnter]);
  var stepperClasses = React38.useMemo(function() {
    return classNames("k-stepper", {
      "k-stepper-linear": linear
    }, className);
  }, [linear, className]);
  var stepperStyles = React38.useMemo(function() {
    return __assign16({ display: "grid", gridTemplateColumns: !isVertical ? "repeat(" + numOfSteps * 2 + ", 1fr)" : void 0, gridTemplateRows: isVertical ? "repeat(" + numOfSteps + ", 1fr)" : void 0 }, style);
  }, [isVertical, numOfSteps, style]);
  var listClasses = React38.useMemo(function() {
    return classNames("k-step-list", {
      "k-step-list-horizontal": !isVertical,
      "k-step-list-vertical": isVertical
    });
  }, [isVertical]);
  var listStyles = React38.useMemo(function() {
    return {
      gridColumnStart: !isVertical ? 1 : void 0,
      gridColumnEnd: !isVertical ? -1 : void 0,
      gridRowStart: isVertical ? 1 : void 0,
      gridRowEnd: isVertical ? -1 : void 0
    };
  }, [isVertical]);
  var progressbarStyles = React38.useMemo(function() {
    return {
      gridColumnStart: !isVertical ? 2 : void 0,
      gridColumnEnd: !isVertical ? numOfSteps * 2 : void 0,
      gridRowStart: isVertical ? 1 : void 0,
      gridRowEnd: isVertical ? numOfSteps : void 0,
      top: isVertical ? 17 : void 0
    };
  }, [isVertical, numOfSteps]);
  var steps = items && items.map(function(element8, index) {
    var stepProps = __assign16({ index, disabled: disabled || element8.disabled, focused: index === focusedIdx, current: index === value }, element8);
    var ItemComp = item || Step;
    return React38.createElement(ItemComp, __assign16({ key: index }, stepProps));
  });
  return React38.createElement(
    StepperContext.Provider,
    { value: {
      animationDuration,
      isVertical,
      item,
      linear,
      mode,
      numOfSteps,
      value,
      successIcon,
      successSVGIcon,
      errorIcon,
      errorSVGIcon,
      onChange: handleChange,
      onFocus: handleFocus
    } },
    React38.createElement(
      "nav",
      { className: stepperClasses, style: stepperStyles, dir, onKeyDown: handleKeyDown },
      React38.createElement("ol", { className: listClasses, style: listStyles }, steps ? steps : children),
      React38.createElement(ProgressBar, { style: progressbarStyles, animation: { duration: animation }, ariaLabel: pbAriaLabel, "aria-hidden": true, max: numOfSteps - 1, labelVisible: false, orientation, reverse: orientation === "vertical", value, disabled, tabIndex: -1 })
    )
  );
});
Stepper.propTypes = {
  animationDuration: PropTypes28.oneOfType([PropTypes28.bool, PropTypes28.number]),
  children: PropTypes28.any,
  className: PropTypes28.string,
  dir: PropTypes28.string,
  disabled: PropTypes28.bool,
  errorIcon: PropTypes28.string,
  errorSVGIcon: svgIconPropType,
  item: PropTypes28.any,
  items: PropTypes28.any,
  linear: PropTypes28.bool,
  mode: PropTypes28.oneOf(["steps", "labels"]),
  orientation: PropTypes28.oneOf(["horizontal", "vertical"]),
  style: PropTypes28.object,
  successIcon: PropTypes28.string,
  successSVGIcon: svgIconPropType,
  value: PropTypes28.number.isRequired,
  onChange: PropTypes28.func,
  onFocus: PropTypes28.func
};
var defaultProps5 = {
  value: 0
};
Stepper.defaultProps = defaultProps5;
Stepper.displayName = "KendoStepper";

// node_modules/@progress/kendo-react-layout/dist/es/appbar/AppBar.js
var React39 = __toESM(require_react());
var PropTypes29 = __toESM(require_prop_types());
var AppBar = React39.forwardRef(function(props, target) {
  validatePackage2(packageMetadata);
  var children = props.children, className = props.className, style = props.style, id = props.id;
  var elementRef = React39.useRef(null);
  var focusElement = React39.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React39.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React39.useImperativeHandle(target, getImperativeHandle);
  var calculatedId = React39.useMemo(function() {
    return guid();
  }, []);
  var themeColor = React39.useMemo(function() {
    return props.themeColor || defaultProps6.themeColor;
  }, [props.themeColor]);
  var position = React39.useMemo(function() {
    return props.position || defaultProps6.position;
  }, [props.position]);
  var positionMode = React39.useMemo(function() {
    return props.positionMode || defaultProps6.positionMode;
  }, [props.positionMode]);
  var appbarClasses = React39.useMemo(function() {
    return classNames("k-appbar", {
      "k-appbar-top": position === "top",
      "k-appbar-bottom": position === "bottom",
      "k-appbar-static": positionMode === "static",
      "k-appbar-sticky": positionMode === "sticky",
      "k-appbar-fixed": positionMode === "fixed",
      "k-appbar-light": themeColor === "light",
      "k-appbar-dark": themeColor === "dark",
      "k-appbar-inherit": themeColor === "inherit"
    }, className);
  }, [position, positionMode, themeColor, className]);
  return React39.createElement("div", { className: appbarClasses, style, id: id || calculatedId }, children);
});
AppBar.propTypes = {
  children: PropTypes29.any,
  className: PropTypes29.string,
  style: PropTypes29.object,
  id: PropTypes29.string,
  themeColor: PropTypes29.string,
  position: PropTypes29.oneOf(["top", "bottom"]),
  positionMode: PropTypes29.oneOf(["static", "sticky", "fixed"])
};
var defaultProps6 = {
  themeColor: "light",
  position: "top",
  positionMode: "static"
};
AppBar.displayName = "KendoAppBar";

// node_modules/@progress/kendo-react-layout/dist/es/appbar/AppBarSection.js
var React40 = __toESM(require_react());
var PropTypes30 = __toESM(require_prop_types());
var AppBarSection = React40.forwardRef(function(props, target) {
  var children = props.children, className = props.className, style = props.style;
  var elementRef = React40.useRef(null);
  var focusElement = React40.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React40.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React40.useImperativeHandle(target, getImperativeHandle);
  var sectionClasses = React40.useMemo(function() {
    return classNames("k-appbar-section", className);
  }, [className]);
  return React40.createElement("div", { className: sectionClasses, style }, children);
});
AppBarSection.propTypes = {
  children: PropTypes30.any,
  className: PropTypes30.string,
  style: PropTypes30.object
};
AppBarSection.displayName = "KendoAppBarSection";

// node_modules/@progress/kendo-react-layout/dist/es/appbar/AppBarSpacer.js
var React41 = __toESM(require_react());
var PropTypes31 = __toESM(require_prop_types());
var AppBarSpacer = React41.forwardRef(function(props, target) {
  var children = props.children, className = props.className, style = props.style;
  var elementRef = React41.useRef(null);
  var focusElement = React41.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React41.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React41.useImperativeHandle(target, getImperativeHandle);
  var spacerClasses = React41.useMemo(function() {
    return classNames("k-appbar-spacer", {
      "k-appbar-spacer-sized": style && style.width && style.width !== null
    }, className);
  }, [className, style]);
  var spacerStyles = React41.useMemo(function() {
    return {
      flexBasis: style && style.width ? style.width : void 0
    };
  }, [style]);
  return React41.createElement("span", { className: spacerClasses, style: spacerStyles }, children);
});
AppBarSpacer.propTypes = {
  children: PropTypes31.any,
  className: PropTypes31.string,
  style: PropTypes31.object
};
AppBarSpacer.displayName = "KendoAppBarSpacer";

// node_modules/@progress/kendo-react-layout/dist/es/tilelayout/TileLayout.js
var React44 = __toESM(require_react());
var PropTypes33 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/tilelayout/InternalTile.js
var React43 = __toESM(require_react());
var PropTypes32 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/tilelayout/ResizeHandlers.js
var React42 = __toESM(require_react());
var __extends17 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign17 = function() {
  __assign17 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign17.apply(this, arguments);
};
var Handle = function(props) {
  return React42.createElement(
    Draggable,
    { onPress: props.onPress, onDrag: function(data) {
      props.onResize(data.event, false, props.d);
    }, onRelease: function(data) {
      props.onResize(data.event, true, props.d);
    } },
    React42.createElement("div", { className: "k-resize-handle k-cursor-" + props.d + "-resize", style: __assign17({ bottom: 0, right: 0 }, props.style) })
  );
};
var ResizeHandlers = (
  /** @class */
  function(_super) {
    __extends17(ResizeHandlers2, _super);
    function ResizeHandlers2() {
      var _this2 = _super !== null && _super.apply(this, arguments) || this;
      _this2.handleResize = function(event, isEnd, direction) {
        event.originalEvent.preventDefault();
        _this2.props.onResize(event, { end: isEnd, direction });
      };
      return _this2;
    }
    ResizeHandlers2.prototype.render = function() {
      var _a3 = this.props, resizable = _a3.resizable, onPress = _a3.onPress, rtl = _a3.rtl;
      if (!resizable) {
        return null;
      }
      return React42.createElement(
        React42.Fragment,
        null,
        resizable !== "vertical" && React42.createElement(Handle, { onPress, onResize: this.handleResize, d: "ew", style: rtl ? { top: 0, width: 9, left: 0, right: "" } : { top: 0, width: 9, right: 0, left: "" } }),
        resizable !== "horizontal" && React42.createElement(Handle, { onPress, onResize: this.handleResize, d: "ns", style: { left: 0, height: 9 } }),
        resizable === true && React42.createElement(Handle, { onPress, onResize: this.handleResize, d: rtl ? "nesw" : "nwse", style: rtl ? { width: 9, height: 9, right: "", left: 0 } : { width: 9, height: 9, right: 0, left: "" } })
      );
    };
    return ResizeHandlers2;
  }(React42.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/tilelayout/InternalTile.js
var __extends18 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign18 = function() {
  __assign18 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign18.apply(this, arguments);
};
var ANIMATION_DURATION = 200;
var InternalTile = (
  /** @class */
  function(_super) {
    __extends18(InternalTile2, _super);
    function InternalTile2() {
      var _this2 = _super !== null && _super.apply(this, arguments) || this;
      _this2.state = {
        rtl: false
      };
      _this2.oldSize = {};
      _this2.draggable = null;
      _this2.dragging = false;
      _this2.resizing = false;
      _this2.element = null;
      _this2.ignoreDrag = false;
      _this2.pressOffset = { x: 0, y: 0 };
      _this2.pressXY = { x: 0, y: 0 };
      _this2.currentTranslate = { x: 0, y: 0 };
      _this2.preventDataOps = void 0;
      _this2.handleResize = function(e, q) {
        if (q.end) {
          _this2.handleRelease();
          return;
        }
        if (!_this2.element) {
          return;
        }
        var x = e.clientX;
        var y = e.clientY;
        _this2.resizing = true;
        var dX = (q.direction !== "ns" ? x - _this2.pressXY.x : 0) * (_this2.state.rtl ? -1 : 1);
        var dY = q.direction !== "ew" ? y - _this2.pressXY.y : 0;
        if (_this2.dragElement) {
          if (_this2.state.rtl) {
            _this2.dragElement.style.marginLeft = -dX + "px";
          } else {
            _this2.dragElement.style.marginRight = -dX + "px";
          }
          _this2.dragElement.style.height = "calc(100% + ".concat(dY, "px)");
        }
        _this2.element.classList.add("k-layout-item-hint", "k-layout-item-hint-resize");
        if (_this2.preventDataOps) {
          return;
        }
        var col = 0;
        var row = 0;
        var wrapBox = _this2.element.getBoundingClientRect();
        if (dX > wrapBox.width / _this2.props.defaultPosition.colSpan / 3) {
          col = 1;
        }
        if (dX < -wrapBox.width / _this2.props.defaultPosition.colSpan / 1.25) {
          col = -1;
        }
        if (dY > wrapBox.height / _this2.props.defaultPosition.rowSpan / 3) {
          row = 1;
        }
        if (dY < -wrapBox.height / _this2.props.defaultPosition.rowSpan / 1.25) {
          row = -1;
        }
        if (col !== 0 || row !== 0) {
          _this2.props.update(_this2.props.index, 0, 0, row, col);
        }
      };
      _this2.handlePress = function(e) {
        if (!_this2.dragElement) {
          return;
        }
        _this2.ignoreDrag = false;
        if (_this2.props.ignoreDrag && _this2.props.ignoreDrag(e.event.originalEvent)) {
          _this2.ignoreDrag = true;
          return;
        }
        if (_this2.element) {
          _this2.element.style.zIndex = "10";
          _this2.element.classList.add("k-layout-item-hint");
        }
        _this2.dragElement.classList.remove("k-cursor-grab");
        _this2.dragElement.classList.add("k-cursor-grabbing");
        var rec = _this2.dragElement.getBoundingClientRect();
        _this2.pressXY = {
          x: e.event.clientX,
          y: e.event.clientY
        };
        _this2.pressOffset = {
          x: e.event.clientX - rec.x,
          y: e.event.clientY - rec.y
        };
      };
      _this2.handleDrag = function(e) {
        if (_this2.ignoreDrag) {
          return;
        }
        var dragElement = _this2.dragElement;
        if (e.event.originalEvent.defaultPrevented || !dragElement) {
          return;
        }
        _this2.dragging = true;
        e.event.originalEvent.preventDefault();
        var rec = dragElement.getBoundingClientRect();
        _this2.currentTranslate = {
          x: e.event.clientX - rec.x - _this2.pressOffset.x + _this2.currentTranslate.x,
          y: e.event.clientY - rec.y - _this2.pressOffset.y + _this2.currentTranslate.y
        };
        dragElement.style.transform = "translate(".concat(_this2.currentTranslate.x, "px, ").concat(_this2.currentTranslate.y, "px)");
        dragElement.style.transition = "transform 0s";
        if (_this2.preventDataOps) {
          return;
        }
        var col = 0;
        var row = 0;
        if (_this2.currentTranslate.y > 0.7 * rec.height / _this2.props.defaultPosition.rowSpan) {
          row = 1;
        }
        if (_this2.currentTranslate.y < 0.7 * -rec.height / _this2.props.defaultPosition.rowSpan) {
          row = -1;
        }
        if (_this2.currentTranslate.x > 0.7 * rec.width / _this2.props.defaultPosition.colSpan) {
          col = 1;
        }
        if (_this2.currentTranslate.x < 0.7 * -rec.width / _this2.props.defaultPosition.colSpan) {
          col = -1;
        }
        _this2.props.update(_this2.props.index, row, _this2.state.rtl ? -col : col, 0, 0);
      };
      _this2.handleRelease = function() {
        _this2.dragging = _this2.resizing = false;
        _this2.currentTranslate = { x: 0, y: 0 };
        if (_this2.element) {
          _this2.element.style.zIndex = "1";
          _this2.element.classList.remove("k-layout-item-hint", "k-layout-item-hint-resize");
        }
        var dragElement = _this2.dragElement;
        if (dragElement) {
          dragElement.style.transform = "translate(0px, 0px)";
          dragElement.style.transition = "transform ".concat(ANIMATION_DURATION, "ms cubic-bezier(0.2, 0, 0, 1) 0s");
          dragElement.style.marginRight = "0px";
          dragElement.style.marginLeft = "0px";
          dragElement.style.height = "100%";
          dragElement.classList.remove("k-cursor-grabbing");
          dragElement.classList.add("k-cursor-grab");
        }
      };
      return _this2;
    }
    Object.defineProperty(InternalTile2.prototype, "reorderable", {
      get: function() {
        return this.props.reorderable !== void 0 ? this.props.reorderable : InternalTile2.defaultProps.reorderable;
      },
      enumerable: false,
      configurable: true
    });
    Object.defineProperty(InternalTile2.prototype, "dragElement", {
      get: function() {
        return this.draggable ? this.draggable.element : void 0;
      },
      enumerable: false,
      configurable: true
    });
    InternalTile2.prototype.componentDidMount = function() {
      if (!this.element) {
        return;
      }
      if (getComputedStyle(this.element).direction === "rtl") {
        this.setState({
          rtl: true
        });
      }
    };
    InternalTile2.prototype.render = function() {
      var _this2 = this;
      if (clearTimeout && typeof clearTimeout === "function") {
        clearTimeout(this.preventDataOps);
        this.preventDataOps = window.setTimeout(function() {
          _this2.preventDataOps = void 0;
        }, 200);
      }
      var position = this.props.defaultPosition;
      var resizable = this.props.resizable !== void 0 ? this.props.resizable : InternalTile2.defaultProps.resizable;
      var itemStyles = __assign18({ gridColumnStart: position.col, gridColumnEnd: "span ".concat(position.colSpan), gridRowStart: position.row, gridRowEnd: "span ".concat(position.rowSpan), outline: "none", order: position.order }, this.props.hintStyle);
      var card = React43.createElement(
        "div",
        { ref: function(e) {
          _this2.draggable = e ? { element: e } : null;
        }, className: classNames("k-tilelayout-item k-card", { "k-cursor-grab": this.reorderable }, this.props.className), style: __assign18({ height: "100%" }, this.props.style) },
        this.props.children,
        React43.createElement(ResizeHandlers, { onPress: this.handlePress, onResize: this.handleResize, resizable, rtl: this.state.rtl })
      );
      return React43.createElement(
        "div",
        { ref: function(e) {
          _this2.element = e;
        }, style: itemStyles, className: this.props.hintClassName },
        React43.createElement(Draggable, { ref: function(e) {
          _this2.draggable = e;
        }, onDrag: this.props.reorderable ? this.handleDrag : void 0, onRelease: this.props.reorderable ? this.handleRelease : void 0, onPress: this.props.reorderable ? this.handlePress : void 0 }, card)
      );
    };
    InternalTile2.prototype.getSnapshotBeforeUpdate = function(_) {
      this.oldSize = {};
      if (this.dragElement) {
        this.oldSize = this.dragElement.getBoundingClientRect();
      }
      return null;
    };
    InternalTile2.prototype.componentDidUpdate = function(prevProps) {
      var _this2 = this;
      var dragElement = this.dragElement;
      if (!dragElement) {
        return;
      }
      var newBox = dragElement.getBoundingClientRect();
      var oldBox = this.oldSize;
      if (this.resizing) {
        var diffCol = newBox.width - oldBox.width;
        if (this.state.rtl) {
          var currentM = parseFloat(dragElement.style.marginLeft || "0");
          dragElement.style.marginLeft = currentM - diffCol + "px";
        } else {
          var currentM = parseFloat(dragElement.style.marginRight || "0");
          dragElement.style.marginRight = currentM + diffCol + "px";
        }
        this.pressXY.x += this.state.rtl ? -diffCol : diffCol;
        var diffRow = newBox.height - oldBox.height;
        var currentBot = parseFloat(dragElement.style.height.substring(12));
        dragElement.style.height = "calc(100% + ".concat(currentBot + diffRow, "px)");
        this.pressXY.y += diffRow;
      }
      var deltaX = oldBox.left - newBox.left;
      var deltaY = oldBox.top - newBox.top;
      if (deltaX === 0 && deltaY === 0) {
        return;
      }
      if (this.dragging) {
        if (prevProps.defaultPosition.order !== this.props.defaultPosition.order || prevProps.defaultPosition.col !== this.props.defaultPosition.col) {
          this.currentTranslate.x = 0;
          this.currentTranslate.y = 0;
          dragElement.style.transform = "";
        }
        return;
      }
      if (Math.abs(deltaY) < 15 && Math.abs(deltaX) < 15) {
        return;
      }
      requestAnimationFrame(function() {
        var domNode = _this2.element;
        if (!domNode) {
          return;
        }
        domNode.style.transform = "translate(".concat(deltaX, "px, ").concat(deltaY, "px)");
        domNode.style.transition = "transform 0s";
        requestAnimationFrame(function() {
          domNode.style.transform = "";
          domNode.style.transition = "transform ".concat(ANIMATION_DURATION, "ms cubic-bezier(0.2, 0, 0, 1) 0s");
        });
      });
    };
    InternalTile2.propTypes = {
      defaultPosition: PropTypes32.object.isRequired,
      style: PropTypes32.object,
      className: PropTypes32.string,
      hintStyle: PropTypes32.object,
      hintClassName: PropTypes32.string,
      header: PropTypes32.any,
      body: PropTypes32.any,
      item: PropTypes32.any,
      resizable: PropTypes32.oneOf(["horizontal", "vertical", true, false]),
      reorderable: PropTypes32.bool
    };
    InternalTile2.displayName = "KendoTileLayoutItem";
    InternalTile2.defaultProps = {
      resizable: true,
      reorderable: true
    };
    return InternalTile2;
  }(React43.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/tilelayout/TileLayout.js
var __extends19 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign19 = function() {
  __assign19 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign19.apply(this, arguments);
};
var AUTO_FLOW_CLASSES = {
  "column": "k-grid-flow-col",
  "row": "k-grid-flow-row",
  "column dense": "k-grid-flow-col-dense",
  "row dense": "k-grid-flow-row-dense",
  "unset": "k-grid-flow-unset"
};
var TileLayout = (
  /** @class */
  function(_super) {
    __extends19(TileLayout2, _super);
    function TileLayout2() {
      var _this2 = _super !== null && _super.apply(this, arguments) || this;
      _this2._element = null;
      _this2.state = { positions: (_this2.props.items || []).map(function(p, i) {
        return Object.assign({ order: i, rowSpan: 1, colSpan: 1 }, p.defaultPosition);
      }) };
      _this2.focus = function() {
        if (_this2._element) {
          _this2._element.focus();
        }
      };
      _this2.update = function(index, dOrder, dCol, dRowSpan, dColSpan) {
        if (dRowSpan === void 0) {
          dRowSpan = 0;
        }
        if (dColSpan === void 0) {
          dColSpan = 0;
        }
        if (dOrder === 0 && dCol === 0 && !dColSpan && !dRowSpan) {
          return;
        }
        var shouldUpdate = false;
        var positions = _this2.state.positions.map(function(p) {
          return Object.assign({}, p);
        });
        var current = positions[index];
        var other = positions.find(function(item) {
          return item.order === current.order + dOrder;
        });
        if (other && other !== current) {
          current.order += dOrder;
          other.order += -dOrder;
          shouldUpdate = true;
        }
        var proposedCol = current.col + dCol;
        if (dCol !== 0 && proposedCol >= 1 && proposedCol + current.colSpan <= (_this2.props.columns || 3) + 1) {
          current.col = proposedCol;
          shouldUpdate = true;
        }
        var proposedColSpan = current.colSpan + dColSpan;
        if (dColSpan && proposedColSpan >= 1 && proposedColSpan + current.col <= (_this2.props.columns || 3) + 1) {
          current.colSpan = proposedColSpan;
          shouldUpdate = true;
        }
        var proposedRowSpan = current.rowSpan + dRowSpan;
        if (dRowSpan && proposedRowSpan >= 1) {
          current.rowSpan = proposedRowSpan;
          shouldUpdate = true;
        }
        if (shouldUpdate) {
          _this2.setState({ positions });
          dispatchEvent(_this2.props.onReposition, {}, _this2, { value: positions });
        }
      };
      return _this2;
    }
    Object.defineProperty(TileLayout2.prototype, "element", {
      /**
       * Gets the HTML element of the TileLayout component.
       */
      get: function() {
        return this._element;
      },
      enumerable: false,
      configurable: true
    });
    TileLayout2.getDerivedStateFromProps = function(props, state) {
      if (props.positions) {
        return {
          positions: props.positions.map(function(p, i) {
            return Object.assign({ order: i, rowSpan: 1, colSpan: 1 }, p);
          })
        };
      }
      if (props.items && (!state.positions || props.items.length !== state.positions.length)) {
        return {
          positions: props.items.map(function(p, i) {
            return Object.assign({ order: i, rowSpan: 1, colSpan: 1 }, p.defaultPosition);
          })
        };
      }
      return null;
    };
    TileLayout2.prototype.render = function() {
      var _this2 = this;
      var _a3 = this.props, className = _a3.className, _b = _a3.columns, columns = _b === void 0 ? 3 : _b, _c = _a3.columnWidth, columnWidth = _c === void 0 ? "1fr" : _c, gap = _a3.gap, _d = _a3.rowHeight, rowHeight = _d === void 0 ? "1fr" : _d, style = _a3.style, _e = _a3.autoFlow, autoFlow = _e === void 0 ? "column" : _e, _f = _a3.items, items = _f === void 0 ? [] : _f;
      var gapValue = gap ? "".concat(typeof gap.rows === "number" ? gap.rows + "px" : gap.rows) + " " + "".concat(typeof gap.columns === "number" ? gap.columns + "px" : gap.columns) : 16;
      var tileLayoutStyles = __assign19({ gridTemplateColumns: "repeat(".concat(columns, ", minmax(0px, ").concat(typeof columnWidth === "number" ? columnWidth + "px" : columnWidth, "))"), gridAutoRows: "minmax(0px, ".concat(typeof rowHeight === "number" ? rowHeight + "px" : rowHeight, ")"), gap: gapValue, padding: gapValue }, style);
      return React44.createElement("div", { ref: function(el) {
        _this2._element = el;
      }, dir: this.props.dir, className: classNames("k-tilelayout", AUTO_FLOW_CLASSES[autoFlow], className), style: tileLayoutStyles, id: this.props.id, children: items.map(function(tile, index) {
        return React44.createElement(InternalTile, { key: _this2.props.dataItemKey ? getter(_this2.props.dataItemKey)(tile) : index, update: _this2.update, defaultPosition: _this2.state.positions[index], index, resizable: tile.resizable, reorderable: tile.reorderable, style: tile.style, className: tile.className, hintClassName: tile.hintClassName, hintStyle: tile.hintStyle, ignoreDrag: _this2.props.ignoreDrag }, tile.item ? tile.item : React44.createElement(
          React44.Fragment,
          null,
          React44.createElement("div", { className: "k-tilelayout-item-header k-card-header" }, React44.isValidElement(tile.header) ? tile.header : React44.createElement("h5", { className: "k-card-title" }, tile.header)),
          React44.createElement("div", { className: "k-tilelayout-item-body k-card-body" }, tile.body)
        ));
      }) });
    };
    TileLayout2.propTypes = {
      id: PropTypes33.string,
      style: PropTypes33.object,
      className: PropTypes33.string,
      dir: PropTypes33.string,
      gap: PropTypes33.object,
      columns: PropTypes33.number,
      columnWidth: PropTypes33.oneOfType([PropTypes33.number, PropTypes33.string]),
      rowHeight: PropTypes33.oneOfType([PropTypes33.number, PropTypes33.string]),
      dataItemKey: PropTypes33.string,
      items: PropTypes33.array,
      positions: PropTypes33.array,
      autoFlow: PropTypes33.oneOf(["column", "row", "column dense", "row dense", "unset"]),
      onReposition: PropTypes33.func,
      ignoreDrag: PropTypes33.func
    };
    TileLayout2.displayName = "KendoTileLayout";
    return TileLayout2;
  }(React44.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/bottomnavigation/BottomNavigation.js
var React46 = __toESM(require_react());
var PropTypes35 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/bottomnavigation/models/utils.js
var THEME_COLOR_CLASSES = {
  "primary": "k-bottom-nav-primary",
  "secondary": "k-bottom-nav-secondary",
  "tertiary": "k-bottom-nav-tertiary",
  "info": "k-bottom-nav-info",
  "success": "k-bottom-nav-success",
  "warning": "k-bottom-nav-warning",
  "error": "k-bottom-nav-error",
  "dark": "k-bottom-nav-dark",
  "light": "k-bottom-nav-light",
  "inverse": "k-bottom-nav-inverse"
};
var FILL_CLASSES = {
  "flat": "k-bottom-nav-flat",
  "solid": "k-bottom-nav-solid"
};
var ITEM_FLOW_CLASSES = {
  "vertical": "k-bottom-nav-item-flow-vertical",
  "horizontal": "k-bottom-nav-item-flow-horizontal"
};
var POSITION_MODE_CLASSES = {
  "fixed": "k-pos-fixed",
  "sticky": "k-pos-sticky"
};

// node_modules/@progress/kendo-react-layout/dist/es/bottomnavigation/BottomNavigationItem.js
var React45 = __toESM(require_react());
var PropTypes34 = __toESM(require_prop_types());
var BottomNavigationItem = React45.forwardRef(function(props, ref) {
  validatePackage2(packageMetadata);
  var elementRef = React45.useRef(null);
  React45.useImperativeHandle(ref, function() {
    return {
      element: elementRef.current
    };
  });
  var className = props.className, style = props.style, selected = props.selected, disabled = props.disabled, item = props.item, render = props.render, dataItem = props.dataItem, icon = props.icon, svgIcon = props.svgIcon, text = props.text, id = props.id, onSelect = props.onSelect, onKeyDown = props.onKeyDown, index = props.index, tabIndex = props.tabIndex;
  var itemClasses = React45.useMemo(function() {
    return classNames("k-bottom-nav-item", {
      "k-selected": selected,
      "k-disabled": disabled
    }, className);
  }, [selected, disabled, className]);
  var handleClick = React45.useCallback(function(event) {
    if (onSelect && index !== void 0 && !disabled) {
      onSelect(event, index);
    }
  }, [onSelect, index, disabled]);
  var handleKeyDown = React45.useCallback(function(event) {
    if (onKeyDown && index !== void 0 && !disabled) {
      onKeyDown(event, index);
    }
  }, [onKeyDown, index, disabled]);
  var renderer = render;
  var ItemComp = item;
  var bottomNavItem = React45.createElement("span", { ref: elementRef, className: itemClasses, style, role: "link", id, tabIndex, onClick: handleClick, onKeyDown: handleKeyDown, "aria-current": selected, "aria-disabled": disabled }, ItemComp ? React45.createElement(ItemComp, { itemIndex: index, item: dataItem }) : React45.createElement(
    React45.Fragment,
    null,
    (icon || svgIcon) && React45.createElement(IconWrap, { className: "k-bottom-nav-item-icon", name: icon, icon: svgIcon }),
    text && React45.createElement("span", { className: "k-bottom-nav-item-text", style: { userSelect: "none" } }, text)
  ));
  return renderer !== void 0 ? renderer.call(void 0, bottomNavItem, props) : bottomNavItem;
});
var defaultProps7 = {
  tabIndex: 0
};
BottomNavigationItem.propTypes = {
  className: PropTypes34.string,
  style: PropTypes34.object,
  id: PropTypes34.string,
  disabled: PropTypes34.bool,
  selected: PropTypes34.bool,
  icon: PropTypes34.string,
  svgIcon: svgIconPropType,
  text: PropTypes34.string,
  tabIndex: PropTypes34.number
};
BottomNavigationItem.defaultProps = defaultProps7;
BottomNavigationItem.displayName = "KendoReactBottomNavigationItem";

// node_modules/@progress/kendo-react-layout/dist/es/bottomnavigation/BottomNavigation.js
var __assign20 = function() {
  __assign20 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign20.apply(this, arguments);
};
var BottomNavigation = React46.forwardRef(function(props, ref) {
  validatePackage2(packageMetadata);
  var elementRef = React46.useRef(null);
  var focusElement = React46.useCallback(function() {
    if (elementRef.current) {
      focusFirstFocusableChild(elementRef.current);
    }
  }, []);
  var getImperativeHandle = React46.useCallback(function() {
    return {
      element: elementRef.current,
      focus: focusElement
    };
  }, [focusElement]);
  React46.useImperativeHandle(ref, getImperativeHandle);
  var _a3 = props.themeColor, themeColor = _a3 === void 0 ? defaultProps8.themeColor : _a3, _b = props.fill, fill = _b === void 0 ? defaultProps8.fill : _b, _c = props.positionMode, positionMode = _c === void 0 ? defaultProps8.positionMode : _c, _d = props.itemFlow, itemFlow = _d === void 0 ? defaultProps8.itemFlow : _d, _e = props.border, border = _e === void 0 ? defaultProps8.border : _e, className = props.className, items = props.items, item = props.item, itemRender = props.itemRender, disabled = props.disabled, style = props.style, id = props.id, onSelect = props.onSelect, onKeyDown = props.onKeyDown;
  var navId = React46.useMemo(function() {
    return guid();
  }, []);
  var dir = useDir(elementRef, props.dir);
  var navClasses = React46.useMemo(function() {
    return classNames("k-bottom-nav", POSITION_MODE_CLASSES[positionMode], THEME_COLOR_CLASSES[themeColor], FILL_CLASSES[fill], ITEM_FLOW_CLASSES[itemFlow], {
      "k-bottom-nav-border": border,
      "k-disabled": disabled
    }, className);
  }, [positionMode, themeColor, fill, itemFlow, border, disabled, className]);
  var dispatchSelectEvent = React46.useCallback(function(dispatchedEvent, index) {
    if (!items) {
      return;
    }
    if (!items[index].disabled && onSelect) {
      dispatchEvent(onSelect, dispatchedEvent, getImperativeHandle(), {
        itemTarget: items[index],
        itemIndex: index
      });
    }
  }, [items, onSelect]);
  var handleSelect = React46.useCallback(function(event, clickedItemIndex) {
    dispatchSelectEvent(event, clickedItemIndex);
  }, [dispatchSelectEvent]);
  var handleKeyDown = React46.useCallback(function(event, clickedItemIndex) {
    switch (event.keyCode) {
      case Keys.enter:
      case Keys.space:
        dispatchSelectEvent(event, clickedItemIndex);
        event.preventDefault();
        break;
      default:
        break;
    }
    dispatchEvent(onKeyDown, event, getImperativeHandle(), void 0);
  }, [dispatchSelectEvent, onKeyDown]);
  return React46.createElement("nav", { ref: elementRef, className: navClasses, style, id: id || navId, dir }, items && items.map(function(element8, index) {
    return React46.createElement(BottomNavigationItem, __assign20({}, element8, { key: index, index, id: "".concat(id || navId, "-").concat(index), disabled: disabled || element8.disabled, selected: element8.selected, dataItem: element8, item, render: itemRender, onSelect: handleSelect, onKeyDown: handleKeyDown }));
  }));
});
var defaultProps8 = {
  themeColor: "primary",
  fill: "flat",
  itemFlow: "vertical",
  positionMode: "fixed",
  border: true
};
BottomNavigation.propTypes = {
  className: PropTypes35.string,
  style: PropTypes35.object,
  id: PropTypes35.string,
  dir: PropTypes35.string,
  themeColor: PropTypes35.oneOf([
    "primary",
    "secondary",
    "tertiary",
    "info",
    "success",
    "warning",
    "error",
    "dark",
    "light",
    "inverse"
  ]),
  fill: PropTypes35.oneOf(["solid", "flat"]),
  itemFlow: PropTypes35.oneOf(["vertical", "horizontal"]),
  border: PropTypes35.bool,
  disabled: PropTypes35.bool,
  selected: PropTypes35.number,
  onSelect: PropTypes35.func
};
BottomNavigation.defaultProps = defaultProps8;
BottomNavigation.displayName = "KendoReactBottomNavigation";

// node_modules/@progress/kendo-react-layout/dist/es/stacklayout/StackLayout.js
var React47 = __toESM(require_react());
var PropTypes36 = __toESM(require_prop_types());
var __assign21 = function() {
  __assign21 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign21.apply(this, arguments);
};
var StackLayout = React47.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var elementRef = React47.useRef(null);
  var getImperativeHandle = React47.useCallback(function() {
    return {
      element: elementRef.current
    };
  }, []);
  React47.useImperativeHandle(ref, getImperativeHandle);
  var className = props.className, style = props.style, id = props.id, children = props.children;
  var layoutId = React47.useMemo(function() {
    return guid();
  }, []);
  var orientation = React47.useMemo(function() {
    return props.orientation || defaultProps9.orientation;
  }, [props.orientation]);
  var isHorizontal = orientation === "horizontal";
  var hAlign = React47.useMemo(function() {
    return props.align && props.align.horizontal ? props.align.horizontal : defaultProps9.hAlign;
  }, [props.align]);
  var vAlign = React47.useMemo(function() {
    return props.align && props.align.vertical ? props.align.vertical : defaultProps9.vAlign;
  }, [props.align]);
  var stackLayoutClasses = React47.useMemo(function() {
    return classNames("k-stack-layout", {
      "k-hstack": orientation === "horizontal",
      "k-vstack": orientation === "vertical",
      "k-justify-content-start": isHorizontal && hAlign === "start" || !isHorizontal && vAlign === "top",
      "k-justify-content-center": isHorizontal && hAlign === "center" || !isHorizontal && vAlign === "middle",
      "k-justify-content-end": isHorizontal && hAlign === "end" || !isHorizontal && vAlign === "bottom",
      "k-justify-content-stretch": isHorizontal && hAlign === "stretch" || !isHorizontal && vAlign === "stretch",
      "k-align-items-start": !isHorizontal && hAlign === "start" || isHorizontal && vAlign === "top",
      "k-align-items-center": !isHorizontal && hAlign === "center" || isHorizontal && vAlign === "middle",
      "k-align-items-end": !isHorizontal && hAlign === "end" || isHorizontal && vAlign === "bottom",
      "k-align-items-stretch": !isHorizontal && hAlign === "stretch" || isHorizontal && vAlign === "stretch"
    }, className);
  }, [orientation, isHorizontal, hAlign, vAlign, className]);
  var stackLayoutStyles = __assign21({ gap: "".concat(typeof props.gap === "number" ? props.gap + "px" : props.gap) }, style);
  return React47.createElement("div", { ref: elementRef, className: stackLayoutClasses, style: stackLayoutStyles, id: id || layoutId }, children);
});
var defaultProps9 = {
  orientation: "horizontal",
  hAlign: "stretch",
  vAlign: "stretch"
};
StackLayout.propTypes = {
  className: PropTypes36.string,
  style: PropTypes36.object,
  children: PropTypes36.any,
  id: PropTypes36.string,
  orientation: PropTypes36.oneOf(["horizontal", "vertical"]),
  gap: PropTypes36.oneOfType([PropTypes36.string, PropTypes36.number]),
  align: PropTypes36.shape({
    vertical: PropTypes36.oneOf(["top", "middle", "bottom", "stretch"]),
    horizontal: PropTypes36.oneOf(["start", "center", "end", "stretch"])
  })
};
StackLayout.defaultProps = defaultProps9;
StackLayout.displayName = "KendoReactStackLayout";

// node_modules/@progress/kendo-react-layout/dist/es/gridlayout/GridLayout.js
var React48 = __toESM(require_react());
var PropTypes37 = __toESM(require_prop_types());
var __assign22 = function() {
  __assign22 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign22.apply(this, arguments);
};
var GridLayout = React48.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var elementRef = React48.useRef(null);
  var getImperativeHandle = React48.useCallback(function() {
    return {
      element: elementRef.current
    };
  }, []);
  React48.useImperativeHandle(ref, getImperativeHandle);
  var className = props.className, style = props.style, id = props.id, children = props.children, gap = props.gap;
  var layoutId = React48.useMemo(function() {
    return guid();
  }, []);
  var hAlign = React48.useMemo(function() {
    return props.align && props.align.horizontal ? props.align.horizontal : defaultProps10.hAlign;
  }, [props.align]);
  var vAlign = React48.useMemo(function() {
    return props.align && props.align.vertical ? props.align.vertical : defaultProps10.vAlign;
  }, [props.align]);
  var gridLayoutClasses = React48.useMemo(function() {
    return classNames("k-grid-layout", {
      "k-justify-items-start": hAlign === "start",
      "k-justify-items-center": hAlign === "center",
      "k-justify-items-end": hAlign === "end",
      "k-justify-items-stretch": hAlign === "stretch",
      "k-align-items-start": vAlign === "top",
      "k-align-items-center": vAlign === "middle",
      "k-align-items-end": vAlign === "bottom",
      "k-align-items-stretch": vAlign === "stretch"
    }, className);
  }, [hAlign, vAlign, className]);
  var gapStyle = gap ? "".concat(typeof gap.rows === "number" ? gap.rows + "px" : gap.rows) + " " + "".concat(typeof gap.cols === "number" ? gap.cols + "px" : gap.cols) : void 0;
  var gridTemplateRowsStyle = props.rows && props.rows.map(function(row) {
    return "".concat(typeof row.height === "number" ? row.height + "px" : row.height);
  }).join(" ");
  var gridTemplateColumnsStyle = props.cols && props.cols.map(function(col) {
    return "".concat(typeof col.width === "number" ? col.width + "px" : col.width);
  }).join(" ");
  var gridLayoutStyles = __assign22({ gap: gapStyle, gridTemplateColumns: gridTemplateColumnsStyle, gridTemplateRows: gridTemplateRowsStyle }, style);
  return React48.createElement("div", { ref: elementRef, className: gridLayoutClasses, style: gridLayoutStyles, id: id || layoutId }, children);
});
var defaultProps10 = {
  hAlign: "stretch",
  vAlign: "stretch",
  gap: void 0
};
GridLayout.propTypes = {
  className: PropTypes37.string,
  style: PropTypes37.object,
  children: PropTypes37.any,
  id: PropTypes37.string,
  gap: PropTypes37.shape({
    rows: PropTypes37.oneOfType([PropTypes37.string, PropTypes37.number]),
    columns: PropTypes37.oneOfType([PropTypes37.string, PropTypes37.number])
  }),
  align: PropTypes37.shape({
    vertical: PropTypes37.oneOf(["top", "middle", "bottom", "stretch"]),
    horizontal: PropTypes37.oneOf(["start", "center", "end", "stretch"])
  })
};
GridLayout.defaultProps = defaultProps10;
GridLayout.displayName = "KendoReactGridLayout";

// node_modules/@progress/kendo-react-layout/dist/es/gridlayout/GridLayoutItem.js
var React49 = __toESM(require_react());
var PropTypes38 = __toESM(require_prop_types());
var __assign23 = function() {
  __assign23 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign23.apply(this, arguments);
};
var GridLayoutItem = React49.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var elementRef = React49.useRef(null);
  var getImperativeHandle = React49.useCallback(function() {
    return {
      element: elementRef.current
    };
  }, []);
  React49.useImperativeHandle(ref, getImperativeHandle);
  var className = props.className, style = props.style, id = props.id, children = props.children, row = props.row, col = props.col, rowSpan = props.rowSpan, colSpan = props.colSpan;
  var itemId = React49.useMemo(function() {
    return guid();
  }, []);
  var gridLayoutItemStyles = __assign23({ gridArea: "".concat(row || "auto", " / ").concat(col || "auto", " / ").concat(rowSpan ? "span " + rowSpan : "auto", " / ").concat(colSpan ? "span " + colSpan : "auto") }, style);
  return React49.createElement("div", { ref: elementRef, className, style: gridLayoutItemStyles, id: id || itemId }, children);
});
GridLayoutItem.propTypes = {
  className: PropTypes38.string,
  style: PropTypes38.object,
  children: PropTypes38.any,
  id: PropTypes38.string
};
GridLayoutItem.displayName = "KendoReactGridLayoutItem";

// node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/Breadcrumb.js
var React54 = __toESM(require_react());
var PropTypes43 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/BreadcrumbListItem.js
var React50 = __toESM(require_react());
var PropTypes39 = __toESM(require_prop_types());
var BreadcrumbListItem = React50.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var target = React50.useRef(null);
  var breadcrumbLIRef = React50.useRef(null);
  var focus = React50.useCallback(function() {
    if (breadcrumbLIRef.current) {
      breadcrumbLIRef.current.focus();
    }
  }, [breadcrumbLIRef]);
  React50.useImperativeHandle(target, function() {
    return {
      element: breadcrumbLIRef.current,
      focus,
      props
    };
  });
  React50.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React50.createElement("li", { ref: breadcrumbLIRef, id: props.id, style: props.style, className: classNames("k-flex-none k-breadcrumb-item", props.className) }, props.children);
});
var propTypes = {
  id: PropTypes39.string,
  className: PropTypes39.string,
  children: PropTypes39.any,
  style: PropTypes39.object
};
BreadcrumbListItem.displayName = "KendoReactBreadcrumbListItem";
BreadcrumbListItem.propTypes = propTypes;

// node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/BreadcrumbDelimiter.js
var React51 = __toESM(require_react());
var PropTypes40 = __toESM(require_prop_types());
var BreadcrumbDelimiter = React51.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var target = React51.useRef(null);
  var breadcrumbDelimiterRef = React51.useRef(null);
  React51.useImperativeHandle(target, function() {
    var _a3;
    return {
      element: ((_a3 = breadcrumbDelimiterRef.current) === null || _a3 === void 0 ? void 0 : _a3.element) || null,
      props
    };
  });
  React51.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React51.createElement(IconWrap, { ref: breadcrumbDelimiterRef, id: props.id, "aria-hidden": true, tabIndex: props.tabIndex, style: props.style, name: "chevron-right", icon: chevronRightIcon, className: "k-breadcrumb-delimiter-icon" });
});
var propTypes2 = {
  id: PropTypes40.string,
  className: PropTypes40.string,
  style: PropTypes40.object,
  tabIndex: PropTypes40.number
};
BreadcrumbDelimiter.displayName = "KendoReactBreadcrumbDelimiter";
BreadcrumbDelimiter.propTypes = propTypes2;

// node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/BreadcrumbLink.js
var React52 = __toESM(require_react());
var PropTypes41 = __toESM(require_prop_types());
var BreadcrumbLink = React52.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var target = React52.useRef(null);
  var linkRef = React52.useRef(null);
  var focus = React52.useCallback(function() {
    if (linkRef.current) {
      linkRef.current.focus();
    }
  }, [linkRef]);
  React52.useImperativeHandle(target, function() {
    return {
      element: linkRef.current,
      focus,
      props
    };
  });
  React52.useImperativeHandle(ref, function() {
    return target.current;
  });
  var handleItemSelect = React52.useCallback(function(event) {
    if (props.id) {
      dispatchEvent(props.onItemSelect, event, event.target, { id: props.id });
    }
  }, [props.onItemSelect]);
  var handleKeyDown = React52.useCallback(function(event) {
    if (props.id) {
      dispatchEvent(props.onKeyDown, event, event.target, { id: props.id });
    }
  }, [props.onKeyDown]);
  return React52.createElement(
    "span",
    { "aria-current": props.ariaCurrent ? props.ariaCurrent : props.isLast, role: "link", id: props.id, ref: linkRef, style: props.style, dir: useDir(linkRef, props.dir), tabIndex: getTabIndex(props.tabIndex, props.disabled), className: classNames("k-cursor-pointer k-flex-none k-breadcrumb-link k-breadcrumb-icontext-link", {
      "k-disabled": props.disabled
    }), onClick: handleItemSelect, onKeyDown: handleKeyDown },
    props.iconClass ? React52.createElement("span", { className: classNames("k-icon", props.iconClass) }) : props.icon ? props.icon : "",
    props.text
  );
});
var propTypes3 = {
  id: PropTypes41.string,
  className: PropTypes41.string,
  tabIndex: PropTypes41.number,
  style: PropTypes41.object,
  dir: PropTypes41.string,
  disabled: PropTypes41.bool,
  text: PropTypes41.string,
  icon: PropTypes41.node,
  iconClass: PropTypes41.string,
  onClick: PropTypes41.func,
  ariaCurrent: PropTypes41.bool
};
BreadcrumbLink.displayName = "KendoReactBreadcrumbLink";
BreadcrumbLink.propTypes = propTypes3;

// node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/BreadcrumbOrderedList.js
var React53 = __toESM(require_react());
var PropTypes42 = __toESM(require_prop_types());
var BreadcrumbOrderedList = React53.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var target = React53.useRef(null);
  var orderedListRef = React53.useRef(null);
  React53.useImperativeHandle(target, function() {
    return {
      element: orderedListRef.current,
      props
    };
  });
  React53.useImperativeHandle(ref, function() {
    return target.current;
  });
  return React53.createElement("ol", { id: props.id, ref: orderedListRef, style: props.style, dir: useDir(orderedListRef, props.dir), tabIndex: getTabIndex(props.tabIndex, props.disabled), className: classNames("k-breadcrumb-container k-flex-wrap", {
    "k-disabled": props.disabled
  }, props.className) }, props.children);
});
var propTypes4 = {
  id: PropTypes42.string,
  className: PropTypes42.string,
  children: PropTypes42.element,
  tabIndex: PropTypes42.number,
  style: PropTypes42.object,
  dir: PropTypes42.string,
  disabled: PropTypes42.bool
};
BreadcrumbOrderedList.displayName = "KendoReactBreadcrumbOrderedList";
BreadcrumbOrderedList.propTypes = propTypes4;

// node_modules/@progress/kendo-react-layout/dist/es/breadcrumb/Breadcrumb.js
var __assign24 = function() {
  __assign24 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign24.apply(this, arguments);
};
var Breadcrumb = React54.forwardRef(function(props, ref) {
  validatePackage(packageMetadata);
  var target = React54.useRef(null);
  var breadcrumbRef = React54.useRef(null);
  var OrderedListComponent = React54.useMemo(function() {
    return props.breadcrumbOrderedList || BreadcrumbOrderedList;
  }, [props.breadcrumbOrderedList]);
  var ListItemComponent = React54.useMemo(function() {
    return props.breadcrumbListItem || BreadcrumbListItem;
  }, [props.breadcrumbListItem]);
  var DelimiterComponent = React54.useMemo(function() {
    return props.breadcrumbDelimiter || BreadcrumbDelimiter;
  }, [props.breadcrumbDelimiter]);
  var LinkComponent = React54.useMemo(function() {
    return props.breadcrumbLink || BreadcrumbLink;
  }, [props.breadcrumbLink]);
  var focus = React54.useCallback(function() {
    if (breadcrumbRef.current) {
      breadcrumbRef.current.focus();
    }
  }, [breadcrumbRef]);
  var disabled = React54.useMemo(function() {
    return props.disabled || false;
  }, [props.disabled]);
  React54.useImperativeHandle(target, function() {
    return {
      element: breadcrumbRef.current,
      focus,
      props
    };
  });
  React54.useImperativeHandle(ref, function() {
    return target.current;
  });
  var dir = useDir(breadcrumbRef, props.dir);
  var handleItemSelect = function(event) {
    if (target.current) {
      dispatchEvent(props.onItemSelect, event, event.target, { id: event.target.id });
    }
  };
  var handleKeyDown = function(event) {
    if (target.current) {
      dispatchEvent(props.onKeyDown, event, event.target, { id: event.target.id });
    }
  };
  var valueField = props.valueField || defaultProps11.valueField;
  var iconField = props.iconField || defaultProps11.iconField;
  var iconClassField = props.iconClassField || defaultProps11.iconClassField;
  var textField = props.textField || defaultProps11.textField;
  return React54.createElement(
    "nav",
    { "aria-label": props.ariaLabel, id: props.id, style: props.style, ref: breadcrumbRef, dir, className: classNames("k-breadcrumb", {
      "k-rtl": dir === "rtl",
      "k-disabled": disabled
    }, props.className) },
    React54.createElement(
      OrderedListComponent,
      null,
      React54.createElement(React54.Fragment, null, props.data.map(function(item, index, data) {
        var key = item[valueField];
        return React54.createElement(
          ListItemComponent,
          { key },
          index !== 0 && React54.createElement(DelimiterComponent, null),
          React54.createElement(LinkComponent, __assign24({ isLast: data.length - 1 === index, id: String(key), icon: item[iconField] || void 0, iconClass: item[iconClassField] ? String(item[iconClassField]) : void 0, text: item[textField] ? String(item[textField]) : void 0, disabled: item.disabled || false, onItemSelect: handleItemSelect, onKeyDown: handleKeyDown }, props))
        );
      }))
    )
  );
});
var propTypes5 = {
  id: PropTypes43.string,
  style: PropTypes43.object,
  className: PropTypes43.string,
  breadcrumbOrderedList: PropTypes43.elementType,
  breadcrumbListItem: PropTypes43.elementType,
  breadcrumbDelimiter: PropTypes43.elementType,
  breadcrumbLink: PropTypes43.elementType,
  data: PropTypes43.arrayOf(PropTypes43.shape({
    id: PropTypes43.string,
    text: PropTypes43.string,
    icon: PropTypes43.any,
    iconClass: PropTypes43.string
  })),
  dir: PropTypes43.oneOf(["ltr", "rtl"]),
  disabled: PropTypes43.bool,
  valueField: PropTypes43.string,
  textField: PropTypes43.string,
  iconField: PropTypes43.string,
  iconClassField: PropTypes43.string,
  onItemSelect: PropTypes43.func,
  ariaLabel: PropTypes43.string
};
var defaultProps11 = {
  valueField: "id",
  textField: "text",
  iconField: "icon",
  iconClassField: "iconClass"
};
Breadcrumb.displayName = "KendoReactBreadcrumb";
Breadcrumb.propTypes = propTypes5;
Breadcrumb.defaultProps = defaultProps11;

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheet.js
var React59 = __toESM(require_react());
var PropTypes48 = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetItem.js
var React55 = __toESM(require_react());
var PropTypes44 = __toESM(require_prop_types());
var ActionSheetItem = function(props) {
  var itemRef = React55.useRef(null);
  var onClick = React55.useCallback(function(event) {
    if (props.onClick) {
      props.onClick.call(void 0, {
        syntheticEvent: event,
        item: props.item,
        title: props.title
      });
    }
  }, [props.item, props.title, props.onClick]);
  React55.useEffect(function() {
    if (itemRef.current && props.focused) {
      itemRef.current.focus();
    }
  }, [props.focused]);
  return React55.createElement(
    "span",
    { style: props.style, tabIndex: props.tabIndex, className: classNames("k-actionsheet-item", "k-cursor-pointer", props.disabled && "k-disabled", props.className), ref: itemRef, role: "button", "aria-disabled": props.disabled, onClick },
    React55.createElement(
      "span",
      { className: "k-actionsheet-action" },
      props.icon && React55.createElement("span", { className: "k-icon-wrap" }, props.icon),
      (props.title || props.description) && React55.createElement(
        "span",
        { className: "k-actionsheet-item-text" },
        props.title && React55.createElement("span", { className: "k-actionsheet-item-title" }, props.title),
        props.description && React55.createElement("span", { className: "k-actionsheet-item-description" }, props.description)
      )
    )
  );
};
ActionSheetItem.propTypes = {
  className: PropTypes44.string,
  style: PropTypes44.object,
  description: PropTypes44.string,
  disabled: PropTypes44.bool,
  group: PropTypes44.oneOf(["top", "bottom"]),
  icon: PropTypes44.element,
  title: PropTypes44.string
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetHeader.js
var React56 = __toESM(require_react());
var PropTypes45 = __toESM(require_prop_types());
var headerDisplayName = "ActionSheetHeader";
var ActionSheetHeader = function(props) {
  return React56.createElement("div", { className: classNames("k-actionsheet-titlebar", props.className) }, props.children);
};
ActionSheetHeader.propTypes = {
  className: PropTypes45.string
};
ActionSheetHeader.displayName = headerDisplayName;
ActionSheetHeader.propTypes = {
  children: PropTypes45.any
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetFooter.js
var React57 = __toESM(require_react());
var PropTypes46 = __toESM(require_prop_types());
var footerDisplayName = "ActionSheetFooter";
var ActionSheetFooter = function(props) {
  return React57.createElement("div", { className: classNames("k-actionsheet-footer", props.className) }, props.children);
};
ActionSheetFooter.propTypes = {
  className: PropTypes46.string
};
ActionSheetFooter.displayName = footerDisplayName;
ActionSheetFooter.propTypes = {
  children: PropTypes46.any
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheetContent.js
var React58 = __toESM(require_react());
var PropTypes47 = __toESM(require_prop_types());
var contentDisplayName = "ActionSheetContent";
var ActionSheetContent = function(props) {
  return React58.createElement("div", { className: classNames("k-actionsheet-content", props.className) }, props.children);
};
ActionSheetContent.propTypes = {
  className: PropTypes47.string
};
ActionSheetContent.displayName = contentDisplayName;
ActionSheetContent.propTypes = {
  children: PropTypes47.any
};

// node_modules/@progress/kendo-react-layout/dist/es/actionsheet/ActionSheet.js
var __extends20 = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign25 = function() {
  __assign25 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign25.apply(this, arguments);
};
var __spreadArray3 = function(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
};
var ActionSheet = (
  /** @class */
  function(_super) {
    __extends20(ActionSheet2, _super);
    function ActionSheet2(props) {
      var _this2 = _super.call(this, props) || this;
      _this2.actionSheetRef = React59.createRef();
      _this2.actionSheetTitleClass = "k-actionsheet-title";
      _this2.ariaLabeledBy = _this2.actionSheetTitleClass + 1;
      _this2.animationDuration = 300;
      _this2.bottomPosition = { bottom: "0", width: "100%" };
      _this2.handleKeyDown = function(e) {
        if (_this2.props.navigatable) {
          _this2.navigation.triggerKeyboardEvent(e);
        }
      };
      _this2.onTab = function(target, nav, ev) {
        ev.preventDefault();
        if (ev.shiftKey) {
          nav.focusPrevious(target);
        } else {
          nav.focusNext(target);
        }
      };
      _this2.handleOverlayClick = function(ev) {
        if (_this2.props.onOverlayClick) {
          _this2.props.onOverlayClick.call(void 0, ev);
        }
        if (_this2.props.onClose) {
          _this2.props.onClose.call(void 0, ev);
        }
        if (!_this2.props.animation) {
          _this2.hideActionSheet();
        }
      };
      _this2.handleItemClick = function(ev) {
        if (_this2.props.onItemClick) {
          _this2.props.onItemClick.call(void 0, ev);
        }
        if (_this2.props.onItemSelect) {
          _this2.props.onItemSelect.call(void 0, ev);
        }
        if (!_this2.props.animation) {
          _this2.hideActionSheet();
        }
      };
      _this2.onEnter = function(target, nav, ev) {
        if (target.ariaDisabled) {
          return;
        }
        var isItem = target.className && target.className.indexOf("k-actionsheet-item") !== -1;
        var allItems = nav.elements.filter(function(e) {
          return e.className.indexOf("k-actionsheet-item") !== -1;
        });
        if (isItem && _this2.props.onItemClick) {
          ev.preventDefault();
          var item = _this2.props.items[allItems.indexOf(target)];
          _this2.props.onItemClick.call(void 0, {
            syntheticEvent: ev,
            item,
            title: item && item.title
          });
        }
        if (isItem && _this2.props.onItemSelect) {
          ev.preventDefault();
          var item = _this2.props.items[allItems.indexOf(target)];
          _this2.props.onItemSelect.call(void 0, {
            syntheticEvent: ev,
            item,
            title: item && item.title
          });
        }
        if (!_this2.props.animation) {
          _this2.hideActionSheet();
        }
      };
      _this2.onEscape = function(_target, _nav, ev) {
        if (_this2.props.onOverlayClick) {
          ev.preventDefault();
          _this2.props.onOverlayClick.call(void 0, ev);
        }
        if (_this2.props.onClose) {
          ev.preventDefault();
          _this2.props.onClose.call(void 0, ev);
        }
        if (!_this2.props.animation) {
          _this2.hideActionSheet();
        }
      };
      _this2.hideActionSheet = function() {
        _this2.setState({ show: false });
      };
      _this2.children = function(children) {
        var components = {};
        React59.Children.forEach(children, function(child) {
          components[child.type.displayName] = child;
        });
        return components;
      };
      _this2.state = {
        show: false,
        slide: false
      };
      validatePackage2(packageMetadata);
      return _this2;
    }
    ActionSheet2.prototype.componentDidMount = function() {
      if (this.props.expand && !this.state.show) {
        this.setState({ show: true });
      }
    };
    ActionSheet2.prototype.componentDidUpdate = function(_prevProps, prevState) {
      var _this2 = this;
      var currentRef = this.actionSheetRef.current;
      if (this.props.expand && !this.state.show) {
        this.setState({ show: true });
      }
      if (this.props.expand && this.state.show && !this.state.slide) {
        this.setState({ slide: true });
      }
      if (!this.props.expand && this.state.show && this.state.slide) {
        this.setState({ slide: false });
      }
      if (prevState !== this.state && this.state.slide && currentRef && !this.props.className) {
        currentRef.style.setProperty("--kendo-actionsheet-height", "auto");
        currentRef.style.setProperty("--kendo-actionsheet-max-height", "none");
      }
      if (currentRef) {
        if (this.props.navigatable) {
          this.navigation = new Navigation({
            tabIndex: this.props.tabIndex || 0,
            root: this.actionSheetRef,
            rovingTabIndex: false,
            selectors: __spreadArray3([
              ".k-actionsheet-item"
            ], [
              ".k-actionsheet-footer",
              ".k-actionsheet-content",
              ".k-actionsheet-titlebar"
            ].map(function(selector) {
              return FOCUSABLE_ELEMENTS.concat(_this2.props.navigatableElements).map(function(focusableSelector) {
                return "".concat(selector, " ").concat(focusableSelector);
              });
            }).flat(), true),
            keyboardEvents: {
              keydown: {
                "Tab": this.onTab,
                "Enter": this.onEnter,
                "Escape": this.onEscape
              }
            }
          });
          this.navigation.focusElement(this.navigation.first, null);
        }
      }
    };
    ;
    ActionSheet2.prototype.render = function() {
      var _this2 = this;
      var _a3 = this.props, title = _a3.title, subTitle = _a3.subTitle, animationStyles = _a3.animationStyles, animation = _a3.animation, expand = _a3.expand, tabIndex = _a3.tabIndex, items = _a3.items;
      var topGroupItems = items === null || items === void 0 ? void 0 : items.filter(function(item) {
        return !item.group || item.group === "top";
      });
      var bottomGroupItems = items === null || items === void 0 ? void 0 : items.filter(function(item) {
        return item.group === "bottom";
      });
      var shouldRenderSeparator = topGroupItems && topGroupItems.length > 0 && (bottomGroupItems && bottomGroupItems.length > 0);
      var children = this.children(this.props.children);
      var animationDuration = this.props.animationDuration || this.animationDuration;
      var actionSheetPanel = this.state.slide && React59.createElement(
        "div",
        { className: classNames("k-actionsheet", this.props.className, {
          "k-actionsheet-bottom": !this.props.className
        }), role: "dialog", "aria-modal": "true", "aria-hidden": false, "aria-labelledby": this.ariaLabeledBy, ref: this.actionSheetRef, onKeyDown: this.handleKeyDown },
        children[headerDisplayName] && !title && !subTitle && children[headerDisplayName],
        (title || subTitle) && React59.createElement(
          "div",
          { className: "k-actionsheet-titlebar k-text-center" },
          React59.createElement(
            "div",
            { className: "k-actionsheet-titlebar-group k-hbox" },
            React59.createElement(
              "div",
              { className: this.actionSheetTitleClass, id: this.ariaLabeledBy },
              title && React59.createElement("div", null, title),
              subTitle && React59.createElement("div", { className: "k-actionsheet-subtitle" }, subTitle)
            )
          )
        ),
        children[contentDisplayName] || React59.createElement(
          "div",
          { className: "k-actionsheet-content" },
          React59.createElement("div", { className: "k-list-ul", role: "group" }, topGroupItems && topGroupItems.map(function(item, idx) {
            return React59.createElement(ActionSheetItem, __assign25({}, item, { id: idx, key: idx, item, tabIndex: tabIndex || 0, onClick: _this2.handleItemClick }));
          })),
          shouldRenderSeparator && React59.createElement("hr", { className: "k-hr" }),
          React59.createElement("div", { className: "k-list-ul", role: "group" }, bottomGroupItems && bottomGroupItems.map(function(item, idx) {
            return React59.createElement(ActionSheetItem, __assign25({}, item, { id: idx + ((topGroupItems === null || topGroupItems === void 0 ? void 0 : topGroupItems.length) || 0), key: idx, item, tabIndex: tabIndex || 0, onClick: _this2.handleItemClick }));
          }))
        ),
        children[footerDisplayName]
      );
      return React59.createElement(React59.Fragment, null, expand || this.state.show ? React59.createElement(
        React59.Fragment,
        null,
        React59.createElement(
          "div",
          { className: "k-actionsheet-container" },
          React59.createElement("div", { className: "k-overlay", onClick: this.handleOverlayClick }),
          animation ? React59.createElement(Animation, { transitionName: this.state.slide ? "slide-up" : "slide-down", onExited: this.hideActionSheet, transitionEnterDuration: animationDuration, transitionExitDuration: animationDuration, animationEnteringStyle: animationStyles || this.bottomPosition, animationEnteredStyle: animationStyles || this.bottomPosition, animationExitingStyle: animationStyles || this.bottomPosition, exit: true, enter: true, appear: false }, actionSheetPanel) : actionSheetPanel
        )
      ) : null);
    };
    ;
    ActionSheet2.displayName = "KendoReactActionSheet";
    ActionSheet2.propTypes = {
      items: PropTypes48.array,
      subTitle: PropTypes48.string,
      title: PropTypes48.string,
      navigatable: PropTypes48.bool,
      navigatableElements: PropTypes48.array
    };
    ActionSheet2.defaultProps = {
      navigatable: true,
      navigatableElements: []
    };
    return ActionSheet2;
  }(React59.Component)
);

// node_modules/@progress/kendo-react-layout/dist/es/contextmenu/ContextMenu.js
var React60 = __toESM(require_react());
var __assign26 = function() {
  __assign26 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign26.apply(this, arguments);
};
var ContextMenu = function(props) {
  var menuRef = React60.useRef(null);
  React60.useEffect(function() {
    if (props.show) {
      setTimeout(function() {
        var element8 = menuRef.current && menuRef.current.element;
        var menuItem = element8 && element8.querySelector(".k-menu-item");
        if (menuItem && menuItem !== menuItem.ownerDocument.activeElement) {
          menuItem.focus();
        }
      });
    }
  }, [props.show]);
  return React60.createElement(
    Popup,
    { show: props.show, offset: props.offset, popupClass: "k-menu-popup", animate: false },
    React60.createElement(Menu, __assign26({ vertical: true }, props, { ref: menuRef, className: classNames("k-context-menu", props.className), onClose: props.onClose, role: "menu" }), props.children)
  );
};
ContextMenu.displayName = "KendoReactContextMenu";

// node_modules/@progress/kendo-react-layout/dist/es/expansionpanel/ExpansionPanel.js
var React61 = __toESM(require_react());
var PropTypes49 = __toESM(require_prop_types());
var ExpansionPanel = React61.forwardRef(function(props, target) {
  var _a3, _b;
  validatePackage2(packageMetadata);
  var elementRef = React61.useRef(null);
  var _c = React61.useState(false), focused = _c[0], setFocused = _c[1];
  var getImperativeHandle = React61.useCallback(function() {
    return { element: elementRef.current };
  }, []);
  React61.useImperativeHandle(target, getImperativeHandle);
  var _d = props.expanded, expanded = _d === void 0 ? false : _d, disabled = props.disabled, title = props.title, subtitle = props.subtitle, onAction = props.onAction, expandIcon = props.expandIcon, collapseIcon = props.collapseIcon, expandSVGIcon = props.expandSVGIcon, collapseSVGIcon = props.collapseSVGIcon;
  var onClick = React61.useCallback(function(event) {
    dispatchEvent(onAction, event, getImperativeHandle(), { expanded });
  }, [onAction, expanded]);
  var onKeyDown = React61.useCallback(function(event) {
    if (event.keyCode === Keys.enter || event.keyCode === Keys.space) {
      event.preventDefault();
      dispatchEvent(onAction, event, getImperativeHandle(), { expanded });
    }
  }, [onAction, expanded]);
  var handleFocus = React61.useCallback(function() {
    if (props.disabled) {
      return;
    }
    setFocused(true);
  }, [props.disabled]);
  var handleBlur = React61.useCallback(function() {
    if (props.disabled) {
      return;
    }
    setFocused(false);
  }, [props.disabled]);
  var _e = useAsyncFocusBlur({ onFocus: handleFocus, onBlur: handleBlur }), onFocus = _e.onFocus, onBlur = _e.onBlur;
  return React61.createElement(
    "div",
    { ref: elementRef, className: classNames("k-expander", props.className, {
      "k-expanded": expanded,
      "k-focus": focused && !disabled,
      "k-disabled": disabled
    }), onFocus, onBlur, style: props.style, id: props.id, dir: useRtl(elementRef, props.dir), onKeyDown: disabled ? void 0 : onKeyDown },
    React61.createElement(
      "div",
      { role: "button", "aria-controls": props.ariaControls, "aria-expanded": expanded, "aria-disabled": disabled, tabIndex: getTabIndex(props.tabIndex, disabled), className: "k-expander-header", onClick: disabled ? void 0 : onClick },
      title !== void 0 ? React61.createElement("div", { className: "k-expander-title" }, title) : void 0,
      React61.createElement("span", { className: "k-spacer" }),
      subtitle !== void 0 ? React61.createElement("div", { className: "k-expander-sub-title" }, subtitle) : void 0,
      React61.createElement(
        "span",
        { className: "k-expander-indicator" },
        React61.createElement(IconWrap, { name: !expanded ? !expandIcon ? "chevron-down" : void 0 : !collapseIcon ? "chevron-up" : void 0, icon: !expanded ? !expandSVGIcon ? chevronDownIcon : void 0 : !collapseSVGIcon ? chevronUpIcon : void 0, className: classNames(expanded ? (_a3 = {}, _a3[String(collapseIcon)] = Boolean(collapseIcon), _a3) : (_b = {}, _b[String(expandIcon)] = Boolean(expandIcon), _b)) })
      )
    ),
    props.children
  );
});
ExpansionPanel.propTypes = {
  children: PropTypes49.node,
  className: PropTypes49.string,
  style: PropTypes49.object,
  dir: PropTypes49.string,
  id: PropTypes49.string,
  tabIndex: PropTypes49.number,
  title: PropTypes49.node,
  subtitle: PropTypes49.node,
  expandIcon: PropTypes49.string,
  collapseIcon: PropTypes49.string,
  expanded: PropTypes49.bool,
  disabled: PropTypes49.bool,
  onAction: PropTypes49.func
};
ExpansionPanel.displayName = "KendoReactExpansionPanel";

// node_modules/@progress/kendo-react-layout/dist/es/expansionpanel/ExpansionPanelContent.js
var React62 = __toESM(require_react());
var __assign27 = function() {
  __assign27 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
    }
    return t;
  };
  return __assign27.apply(this, arguments);
};
var ExpansionPanelContent = React62.forwardRef(function(props, ref) {
  return React62.createElement(
    "div",
    __assign27({ ref }, props, { className: classNames("k-expander-content-wrapper", props.className) }),
    React62.createElement("div", { className: "k-expander-content" }, props.children)
  );
});
ExpansionPanelContent.displayName = "KendoReactExpansionPanelContent";

export {
  TabStripNavigationItem,
  TabStripNavigation,
  TabStripContent,
  TabStrip,
  TabStripTab,
  PanelBarItem,
  renderChildren,
  getFirstId,
  getInitialState,
  flatVisibleItems,
  flatChildren,
  flatVisibleChildren,
  isPresent,
  PanelBarUtils,
  isArrayEqual,
  PanelBar,
  MenuItem,
  MenuItemLink,
  downArrowName,
  rightArrowName,
  leftArrowName,
  MenuItemArrow,
  Menu,
  SplitterPane,
  Splitter,
  Card,
  CardHeader,
  CardTitle,
  CardBody,
  CardActions,
  CardImage,
  CardSubtitle,
  CardFooter,
  Avatar,
  DrawerItem,
  DrawerNavigation,
  Drawer,
  DrawerContent,
  Step,
  Stepper,
  AppBar,
  AppBarSection,
  AppBarSpacer,
  TileLayout,
  BottomNavigationItem,
  BottomNavigation,
  StackLayout,
  GridLayout,
  GridLayoutItem,
  BreadcrumbListItem,
  BreadcrumbDelimiter,
  BreadcrumbLink,
  BreadcrumbOrderedList,
  Breadcrumb,
  ActionSheetItem,
  headerDisplayName,
  ActionSheetHeader,
  footerDisplayName,
  ActionSheetFooter,
  contentDisplayName,
  ActionSheetContent,
  ActionSheet,
  ContextMenu,
  ExpansionPanel,
  ExpansionPanelContent
};
//# sourceMappingURL=chunk-X4OET5D2.js.map
