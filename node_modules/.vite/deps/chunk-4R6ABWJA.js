import {
  provideLocalizationService,
  registerForLocalization,
  useLocalization
} from "./chunk-NQBGXZOD.js";
import {
  classNames,
  validatePackage2 as validatePackage
} from "./chunk-KTMNFILY.js";
import {
  require_prop_types
} from "./chunk-O6GWARG4.js";
import {
  require_react
} from "./chunk-ABDRZE5M.js";
import {
  __toESM
} from "./chunk-LFBQMW2U.js";

// node_modules/@progress/kendo-react-labels/dist/es/Label.js
var React = __toESM(require_react());
var PropTypes = __toESM(require_prop_types());

// node_modules/@progress/kendo-react-labels/dist/es/messages/index.js
var _a;
var labelsOptional = "labels.optional";
var messages = (_a = {}, _a[labelsOptional] = "(Optional)", _a);

// node_modules/@progress/kendo-react-labels/dist/es/package-metadata.js
var packageMetadata = {
  name: "@progress/kendo-react-labels",
  productName: "KendoReact",
  productCodes: ["KENDOUIREACT", "KENDOUICOMPLETE"],
  publishDate: 1680171668,
  version: "",
  licensingDocsUrl: "https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning"
};

// node_modules/@progress/kendo-react-labels/dist/es/Label.js
var Label = function(props) {
  validatePackage(packageMetadata);
  var id = props.id, editorId = props.editorId, editorRef = props.editorRef, editorDisabled = props.editorDisabled, children = props.children, editorValid = props.editorValid, style = props.style, className = props.className, optional = props.optional;
  var localizationService = useLocalization();
  var localizedOptional = optional ? localizationService.toLanguageString(labelsOptional, messages[labelsOptional]) : "";
  var optionalElement = localizedOptional && React.createElement("span", { className: "k-label-optional" }, localizedOptional);
  var onLabelClick = React.useCallback(function(e) {
    if (editorRef && editorRef.current && !editorDisabled) {
      if (editorRef.current.focus) {
        e.preventDefault();
        editorRef.current.focus();
      }
      var editorActionElement = editorRef.current.actionElement;
      if (editorActionElement) {
        e.preventDefault();
        editorActionElement.click();
      }
    }
  }, [editorRef]);
  var labelClassName = classNames({
    "k-label": true,
    "k-label-empty": !children,
    "k-text-error": editorValid === false,
    "k-text-disabled": editorDisabled === true
  }, className);
  return React.createElement(
    "label",
    { id, htmlFor: editorId, onClick: onLabelClick, style, className: labelClassName },
    children,
    optionalElement
  );
};
Label.propTypes = {
  id: PropTypes.string,
  editorId: PropTypes.string,
  editorRef: PropTypes.oneOfType([
    PropTypes.func,
    PropTypes.shape({ current: PropTypes.any })
  ]),
  editorValid: PropTypes.bool,
  editorDisabled: PropTypes.bool,
  style: PropTypes.object,
  className: PropTypes.string,
  optional: PropTypes.bool
};
Label.displayName = "KendoReactLabel";

// node_modules/@progress/kendo-react-labels/dist/es/Error.js
var React2 = __toESM(require_react());
var PropTypes2 = __toESM(require_prop_types());
var Error = function(props) {
  validatePackage(packageMetadata);
  var errorClassName = classNames({
    "k-form-error": true,
    "k-text-start": props.direction === "start",
    "k-text-end": props.direction === "end"
  }, props.className);
  return React2.createElement("div", { id: props.id, role: "alert", style: props.style, className: errorClassName }, props.children);
};
Error.propTypes = {
  id: PropTypes2.string,
  direction: PropTypes2.oneOf(["start", "end"]),
  children: PropTypes2.oneOfType([
    PropTypes2.element,
    PropTypes2.node
  ]),
  style: PropTypes2.object,
  className: PropTypes2.string
};
Error.defaultProps = {
  direction: "start"
};
Error.displayName = "KendoReactError";

// node_modules/@progress/kendo-react-labels/dist/es/Hint.js
var React3 = __toESM(require_react());
var PropTypes3 = __toESM(require_prop_types());
var Hint = function(props) {
  validatePackage(packageMetadata);
  var hintClassName = classNames({
    "k-form-hint": true,
    "k-text-start": props.direction === "start",
    "k-text-end": props.direction === "end",
    "k-text-disabled": props.editorDisabled === true
  }, props.className);
  return React3.createElement("div", { id: props.id, style: props.style, className: hintClassName }, props.children);
};
Hint.propTypes = {
  id: PropTypes3.string,
  direction: PropTypes3.oneOf(["start", "end"]),
  children: PropTypes3.oneOfType([
    PropTypes3.element,
    PropTypes3.node
  ]),
  style: PropTypes3.object,
  className: PropTypes3.string,
  editorDisabled: PropTypes3.bool
};
Hint.defaultProps = {
  direction: "start"
};
Hint.displayName = "KendoReactHint";

// node_modules/@progress/kendo-react-labels/dist/es/FloatingLabel.js
var React4 = __toESM(require_react());
var PropTypes4 = __toESM(require_prop_types());
var __extends = function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var FloatingLabel = (
  /** @class */
  function(_super) {
    __extends(FloatingLabel2, _super);
    function FloatingLabel2(props) {
      var _this = _super.call(this, props) || this;
      _this.state = {
        focused: false
      };
      _this.handleFocus = function(_) {
        _this.setState({ focused: true });
      };
      _this.handleBlur = function(_) {
        _this.setState({ focused: false });
      };
      validatePackage(packageMetadata);
      return _this;
    }
    FloatingLabel2.prototype.render = function() {
      var _a2 = this.props, label = _a2.label, editorId = _a2.editorId, className = _a2.className, editorValue = _a2.editorValue, editorPlaceholder = _a2.editorPlaceholder, editorValid = _a2.editorValid, editorDisabled = _a2.editorDisabled, style = _a2.style, id = _a2.id, optional = _a2.optional;
      var localizationService = provideLocalizationService(this);
      var localizedOptional = optional ? localizationService.toLanguageString(labelsOptional, messages[labelsOptional]) : "";
      var optionalElement = localizedOptional && React4.createElement("span", { className: "k-label-optional" }, localizedOptional);
      var spanClassNames = classNames({
        "k-floating-label-container": true,
        "k-focus": this.state.focused,
        "k-empty": !editorPlaceholder && !editorValue && editorValue !== 0,
        "k-text-disabled": editorDisabled,
        "k-rtl": this.props.dir === "rtl"
      }, className);
      var labelClassNames = classNames({
        "k-label": true,
        "k-text-error": editorValid === false,
        "k-text-disabled": editorDisabled
      });
      return React4.createElement(
        "span",
        { id: this.props.id, className: spanClassNames, onFocus: this.handleFocus, onBlur: this.handleBlur, style, dir: this.props.dir },
        this.props.children,
        label ? editorId ? React4.createElement(
          "label",
          { id, htmlFor: editorId, className: labelClassNames },
          label,
          optionalElement
        ) : React4.createElement(
          "span",
          { id, className: labelClassNames },
          label,
          optionalElement
        ) : null
      );
    };
    FloatingLabel2.propTypes = {
      label: PropTypes4.string,
      editorId: PropTypes4.string,
      editorValue: PropTypes4.oneOfType([PropTypes4.string, PropTypes4.bool, PropTypes4.number]),
      editorPlaceholder: PropTypes4.string,
      editorValid: PropTypes4.bool,
      editorDisabled: PropTypes4.bool,
      id: PropTypes4.string,
      style: PropTypes4.object,
      className: PropTypes4.string,
      optional: PropTypes4.bool
    };
    return FloatingLabel2;
  }(React4.Component)
);
registerForLocalization(FloatingLabel);

export {
  Label,
  Error,
  Hint,
  FloatingLabel
};
//# sourceMappingURL=chunk-4R6ABWJA.js.map
