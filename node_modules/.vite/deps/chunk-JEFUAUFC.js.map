{
  "version": 3,
  "sources": ["../../@progress/kendo-react-treeview/dist/es/TreeView.js", "../../@progress/kendo-react-treeview/dist/es/utils/itemIdUtils.js", "../../@progress/kendo-react-treeview/dist/es/utils/SortedPublicItemIds.js", "../../@progress/kendo-react-treeview/dist/es/utils/misc.js", "../../@progress/kendo-react-treeview/dist/es/utils/itemUtils.js", "../../@progress/kendo-react-treeview/dist/es/utils/getItemIdUponKeyboardNavigation.js", "../../@progress/kendo-react-treeview/dist/es/TreeViewItem.js", "../../@progress/kendo-react-treeview/dist/es/utils/consts.js", "../../@progress/kendo-react-treeview/dist/es/utils/FieldsService.js", "../../@progress/kendo-react-treeview/dist/es/package-metadata.js", "../../@progress/kendo-react-treeview/dist/es/processTreeViewItems.js", "../../@progress/kendo-react-treeview/dist/es/moveTreeViewItem.js", "../../@progress/kendo-react-treeview/dist/es/handleTreeViewCheckChange.js", "../../@progress/kendo-react-treeview/dist/es/TreeViewDragClue.js", "../../@progress/kendo-react-treeview/dist/es/TreeViewDragAnalyzer.js"],
  "sourcesContent": ["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { Keys, dispatchEvent, guid, kendoThemeMaps, classNames } from '@progress/kendo-react-common';\nimport nav from './utils/getItemIdUponKeyboardNavigation';\nimport { resolveItemId, isEnabledAndAllParentsEnabled, hasChildren } from './utils/itemUtils';\nimport { TreeViewItem } from './TreeViewItem';\nimport { ZERO_LEVEL_ZERO_NODE_ID, getItemById } from './utils/itemIdUtils';\nimport FieldsService from './utils/FieldsService';\nimport { validatePackage } from '@progress/kendo-react-common';\nimport { packageMetadata } from './package-metadata';\nimport { CHECK_FIELD, CHECK_INDETERMINATE_FIELD, CHILDREN_FIELD, DISABLED_FIELD, EXPAND_FIELD, HAS_CHILDREN_FIELD, SELECT_FIELD, TEXT_FIELD } from './utils/consts';\nvar sizeMap = kendoThemeMaps.sizeMap;\n/**\n * Represents the [KendoReact TreeView component]({% slug overview_treeview %}).\n *\n * @example\n * ```jsx\n * const data = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' }]\n * }];\n * class App extends React.Component {\n *     render() {\n *         return <TreeView data={data} />;\n *     }\n * }\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar TreeView = /** @class */ (function (_super) {\n    __extends(TreeView, _super);\n    function TreeView(props) {\n        var _this = _super.call(this, props) || this;\n        /**\n         * @hidden\n         */\n        _this.state = { focusedItemId: undefined, focusedItemPublicId: undefined, tabbableItemId: ZERO_LEVEL_ZERO_NODE_ID };\n        _this.fieldsSvc = null;\n        // When there is a change in state.focusedItemId, calling focus() on the dom element of the focused item\n        // is most often not needed, because the browser focuses the element on its own.\n        // https://github.com/telerik/kendo-react/issues/190\n        _this.allowExplicitFocus = false;\n        _this.treeGuid = guid();\n        _this._element = null;\n        _this.onFocusDomElNeeded = function (domItem) {\n            if (_this.allowExplicitFocus) {\n                _this.focusDomItem(domItem);\n            }\n        };\n        _this.onCheckChange = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchCheckChange(event, item, itemId);\n        };\n        _this.onExpandChange = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchExpandChange(event, item, itemId);\n        };\n        _this.onPress = function (_event, item, itemId) {\n            if (_this.props.onItemDragStart) {\n                _this.props.onItemDragStart.call(undefined, { target: _this, item: item, itemHierarchicalIndex: itemId });\n            }\n        };\n        _this.onDrag = function (event, item, itemId) {\n            var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;\n            if (_this.props.onItemDragOver) {\n                _this.props.onItemDragOver.call(undefined, {\n                    target: _this,\n                    item: item,\n                    itemHierarchicalIndex: itemId,\n                    pageX: pageX,\n                    pageY: pageY,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n            }\n        };\n        _this.onRelease = function (event, item, itemId) {\n            var pageX = event.pageX, pageY = event.pageY, clientX = event.clientX, clientY = event.clientY;\n            if (_this.props.onItemDragEnd) {\n                _this.props.onItemDragEnd.call(undefined, {\n                    target: _this,\n                    item: item,\n                    itemHierarchicalIndex: itemId,\n                    pageX: pageX,\n                    pageY: pageY,\n                    clientX: clientX,\n                    clientY: clientY\n                });\n            }\n        };\n        _this.onItemClick = function (event, item, itemId) {\n            _this.setFocus(itemId);\n            _this.dispatchItemClick(event, item, itemId);\n        };\n        _this.onFocus = function () {\n            clearTimeout(_this.blurRequest);\n            if (_this.state.focusedItemId === undefined && _this.data.length) {\n                _this.setFocus(_this.state.tabbableItemId);\n            }\n        };\n        _this.onBlur = function () {\n            clearTimeout(_this.blurRequest);\n            _this.blurRequest = window.setTimeout(function () { return _this.setFocus(undefined); }, 0);\n        };\n        _this.onKeyDown = function (event) {\n            var focusedItem = _this.getFocusedItem();\n            if (focusedItem && _this.fieldsSvc) {\n                var newItemId = nav(focusedItem, _this.state.focusedItemId, _this.data, event.keyCode, _this.fieldsSvc);\n                if (newItemId !== _this.state.focusedItemId) {\n                    // This disables the auto-scroll. The scroll is achieved via item focusing.\n                    event.preventDefault();\n                    _this.allowExplicitFocus = true;\n                    _this.setFocus(newItemId);\n                }\n                _this.dispatchEventsOnKeyDown(event, focusedItem);\n            }\n        };\n        validatePackage(packageMetadata);\n        return _this;\n    }\n    Object.defineProperty(TreeView.prototype, \"element\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._element;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    TreeView.prototype.render = function () {\n        var _a;\n        var _this = this;\n        this.fieldsSvc = new FieldsService(this.props);\n        var _b = this.props, size = _b.size, className = _b.className;\n        return (React.createElement(\"div\", { className: classNames('k-treeview', (_a = {},\n                _a[\"k-treeview-\".concat(sizeMap[size] || size)] = size,\n                _a), className), onKeyDown: this.onKeyDown, onFocus: this.onFocus, onBlur: this.onBlur, role: \"tree\", \"aria-multiselectable\": this.ariaMultiSelectable ? true : undefined, \"aria-label\": this.props['aria-label'], \"aria-labelledby\": this.props['aria-labelledby'], ref: function (element) { return _this._element = element; }, tabIndex: this.props.tabIndex },\n            React.createElement(\"ul\", { className: \"k-treeview-lines k-treeview-group\", role: \"group\" }, this.data.map(function (item, index) {\n                return (React.createElement(TreeViewItem, { item: item, position: index === 0 ? 'top' : index === _this.data.length - 1 ? 'bot' : 'mid', itemId: index.toString(), treeGuid: _this.treeGuid, animate: _this.props.animate, focusedItemId: _this.state.focusedItemId, tabbableItemId: _this.state.tabbableItemId, fieldsService: _this.fieldsSvc, itemUI: _this.props.item, checkboxes: _this.props.checkboxes, ariaMultiSelectable: _this.ariaMultiSelectable, onItemClick: _this.onItemClick, onFocusDomElNeeded: _this.onFocusDomElNeeded, draggable: _this.props.draggable, onPress: _this.onPress, onDrag: _this.onDrag, onRelease: _this.onRelease, expandIcons: _this.props.expandIcons, onExpandChange: _this.onExpandChange, onCheckChange: _this.onCheckChange, key: index, size: size }));\n            }))));\n    };\n    /**\n     * @hidden\n     */\n    TreeView.prototype.componentDidUpdate = function () {\n        this.allowExplicitFocus = false;\n        this.refocusDueToFocusIdField();\n    };\n    TreeView.prototype.dispatchEventsOnKeyDown = function (event, focusedItem) {\n        var _this = this;\n        if (this.fieldsSvc === null) {\n            return;\n        }\n        // isEnabled is the most expensive op and that is why is left last.\n        var isEnabled = function () {\n            return _this.fieldsSvc && isEnabledAndAllParentsEnabled(_this.state.focusedItemId, _this.data, _this.fieldsSvc);\n        };\n        if (event.keyCode === Keys.left && this.fieldsSvc.expanded(focusedItem) && isEnabled()) {\n            this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.right && !this.fieldsSvc.expanded(focusedItem) &&\n            (this.fieldsSvc.hasChildren(focusedItem) || hasChildren(focusedItem, this.props.childrenField)) && isEnabled()) {\n            this.dispatchExpandChange(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.enter && isEnabled()) {\n            this.dispatchItemClick(event, focusedItem, this.state.focusedItemId);\n        }\n        else if (event.keyCode === Keys.space && isEnabled()) {\n            // W/o preventDefault() long TreeViews gets incorrectly scrolled.\n            event.preventDefault();\n            this.dispatchCheckChange(event, focusedItem, this.state.focusedItemId);\n        }\n    };\n    TreeView.prototype.setFocus = function (focusedItemId) {\n        if (focusedItemId && this.fieldsSvc) {\n            if (this.fieldsSvc.focusIdField) {\n                var item = this.getItemById(focusedItemId);\n                this.setState({ focusedItemId: focusedItemId, focusedItemPublicId: this.fieldsSvc.focusId(item) });\n            }\n            else {\n                this.setState({ focusedItemId: focusedItemId });\n            }\n        }\n        else {\n            this.setState(function (state) {\n                return {\n                    focusedItemId: undefined,\n                    focusedItemPublicId: undefined,\n                    tabbableItemId: state.focusedItemId\n                };\n            });\n        }\n    };\n    TreeView.prototype.getFocusedItem = function () {\n        return this.state.focusedItemId ? this.getItemById(this.state.focusedItemId) : undefined;\n    };\n    TreeView.prototype.getItemById = function (itemId) {\n        return getItemById(itemId, this.data, this.props.childrenField || CHILDREN_FIELD);\n    };\n    TreeView.prototype.dispatchCheckChange = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onCheckChange, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.dispatchExpandChange = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onExpandChange, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.dispatchItemClick = function (dispatchedEvent, item, itemId) {\n        dispatchEvent(this.props.onItemClick, dispatchedEvent, this, { item: item, itemHierarchicalIndex: itemId });\n    };\n    TreeView.prototype.refocusDueToFocusIdField = function () {\n        if (this.fieldsSvc && this.fieldsSvc.focusIdField) {\n            var focusedItemPublicId = this.state.focusedItemPublicId;\n            if (focusedItemPublicId) {\n                var focusedItemId = this.props.getFocusHierarchicalIndex ?\n                    this.props.getFocusHierarchicalIndex(focusedItemPublicId) :\n                    resolveItemId(focusedItemPublicId, this.fieldsSvc.focusIdField, this.data, this.props.childrenField);\n                if (focusedItemId !== this.state.focusedItemId) {\n                    this.allowExplicitFocus = true;\n                    this.setState({ focusedItemId: focusedItemId });\n                }\n            }\n        }\n    };\n    Object.defineProperty(TreeView.prototype, \"ariaMultiSelectable\", {\n        get: function () {\n            return this.props['aria-multiselectable'] === true || this.props['aria-multiselectable'] === 'true';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeView.prototype, \"data\", {\n        get: function () {\n            return this.props.data || [];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TreeView.prototype.focusDomItem = function (domItem) {\n        domItem.focus();\n    };\n    Object.defineProperty(TreeView.prototype, \"guid\", {\n        /**\n         * Returns the `guid` which is associated with the TreeView.\n         */\n        get: function () {\n            return this.treeGuid;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    TreeView.propTypes = {\n        data: PropTypes.arrayOf(PropTypes.any),\n        animate: PropTypes.bool,\n        tabIndex: PropTypes.number,\n        focusIdField: PropTypes.string,\n        getHierarchicalIndexById: PropTypes.func,\n        onExpandChange: PropTypes.func,\n        onItemClick: PropTypes.func,\n        expandField: PropTypes.string,\n        selectField: PropTypes.string,\n        childrenField: PropTypes.string,\n        hasChildrenField: PropTypes.string,\n        textField: PropTypes.string,\n        disableField: PropTypes.string,\n        item: PropTypes.any,\n        'aria-multiselectable': function (props, propName, componentName) {\n            if (props[propName] !== undefined\n                && props[propName] !== true\n                && props[propName] !== false\n                && props[propName] !== 'true'\n                && props[propName] !== 'false') {\n                return new Error('Invalid prop `' + propName + '` supplied to' +\n                    ' `' + componentName + '`. Validation failed.');\n            }\n            return null;\n        },\n        'aria-label': PropTypes.string,\n        'aria-labelledby': PropTypes.string,\n        size: PropTypes.oneOf([null, 'small', 'medium', 'large'])\n    };\n    /**\n     * @hidden\n     */\n    TreeView.defaultProps = {\n        animate: true,\n        expandField: EXPAND_FIELD,\n        selectField: SELECT_FIELD,\n        hasChildrenField: HAS_CHILDREN_FIELD,\n        childrenField: CHILDREN_FIELD,\n        textField: TEXT_FIELD,\n        disableField: DISABLED_FIELD,\n        checkField: CHECK_FIELD,\n        checkIndeterminateField: CHECK_INDETERMINATE_FIELD,\n        size: 'medium'\n    };\n    return TreeView;\n}(React.Component));\nexport { TreeView };\n", "/**\n * @hidden\n */\nexport var EMPTY_ID = '';\n/**\n * @hidden\n */\nexport var ZERO_LEVEL_ZERO_NODE_ID = '0';\n/**\n * @hidden\n */\nexport var SEPARATOR = '_';\n/**\n * @hidden\n */\nexport function getItemById(itemId, items, childrenField) {\n    if (isIdZeroLevel(itemId)) {\n        return items[Number(itemId)];\n    }\n    else {\n        var rootParentItem = items[Number(getRootParentId(itemId))];\n        var subItems = (rootParentItem && rootParentItem[childrenField]) || [];\n        return subItems.length ?\n            getItemById(getIdWithoutRootParentId(itemId), subItems, childrenField) : undefined;\n    }\n}\n/**\n * @hidden\n */\nexport function getRootParentId(itemId) {\n    return isIdEmptyOrZeroLevel(itemId) ? itemId : itemId.split(SEPARATOR)[0];\n}\n/**\n * @hidden\n */\nexport function getIdWithoutRootParentId(itemId) {\n    if (isIdEmptyOrZeroLevel(itemId)) {\n        return itemId;\n    }\n    else {\n        var firstSeparatorIndex = itemId.indexOf(SEPARATOR);\n        return itemId.substring(firstSeparatorIndex + 1);\n    }\n}\n/**\n * @hidden\n */\nexport function getFirstChildId(itemId) {\n    return createId('0', itemId);\n}\n/**\n * @hidden\n */\nexport function createId(childId, parentId) {\n    childId = childId.toString();\n    return parentId ? parentId + SEPARATOR + childId : childId;\n}\n/**\n * @hidden\n */\nexport function getDirectParentId(itemId) {\n    var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);\n    return lastSeparatorIndex < 0 ? EMPTY_ID : itemId.substring(0, lastSeparatorIndex);\n}\n/**\n * @hidden\n */\nexport function isIdEmptyOrZeroLevel(itemId) {\n    return itemId === EMPTY_ID || itemId.indexOf(SEPARATOR) < 0;\n}\n/**\n * @hidden\n */\nexport function isIdZeroLevel(itemId) {\n    return itemId !== EMPTY_ID && itemId.indexOf(SEPARATOR) < 0;\n}\n/**\n * @hidden\n */\nexport function getAllShortIds(itemId) {\n    return itemId.split(SEPARATOR);\n}\n/**\n * @hidden\n */\nexport function getShortId(itemId) {\n    var lastSeparatorIndex = itemId.lastIndexOf(SEPARATOR);\n    return lastSeparatorIndex < 0 ? itemId : itemId.substring(lastSeparatorIndex + 1);\n}\n/**\n * @hidden\n */\nexport function isItemFirstFromSiblings(itemId) {\n    return getShortId(itemId) === ZERO_LEVEL_ZERO_NODE_ID;\n}\n/**\n * @hidden\n */\nexport function getDecrementedItemIdAfterRemoval(removedItemId, itemId) {\n    var preservedItemId = itemId;\n    removedItemId = 'r' + SEPARATOR + removedItemId;\n    itemId = 'r' + SEPARATOR + itemId;\n    var itemSharedPath = getDirectParentId(removedItemId) + SEPARATOR;\n    if (itemId.startsWith(itemSharedPath)) {\n        var itemNotSharedPath = itemId.substring(itemSharedPath.length);\n        if (itemNotSharedPath) {\n            var siblingShortId = getRootParentId(itemNotSharedPath);\n            if (Number(getShortId(removedItemId)) < Number(siblingShortId)) {\n                var decrementedId = itemSharedPath +\n                    (Number(siblingShortId) - 1).toString() +\n                    itemNotSharedPath.substring(siblingShortId.length);\n                return getIdWithoutRootParentId(decrementedId);\n            }\n        }\n    }\n    return preservedItemId;\n}\n", "var PROPS_COUNT_LIMIT = 50000;\n/**\n * @hidden\n */\n// An alternative is to use array.sort() and\n// implement a binary search function.\nvar SortedPublicItemIds = /** @class */ (function () {\n    function SortedPublicItemIds() {\n        this.objects = [];\n    }\n    SortedPublicItemIds.prototype.init = function (publicItemIds) {\n        var currentObj;\n        for (var i = 0; i < publicItemIds.length; i++) {\n            if (i % PROPS_COUNT_LIMIT === 0) {\n                currentObj = {};\n                this.objects.push(currentObj);\n            }\n            currentObj[publicItemIds[i]] = true;\n        }\n    };\n    SortedPublicItemIds.prototype.hasId = function (publicItemId) {\n        return this.objects.some(function (obj) { return obj[publicItemId]; });\n    };\n    return SortedPublicItemIds;\n}());\nexport default SortedPublicItemIds;\n", "/**\n * @hidden\n */\nexport function getNestedValue(fieldName, dataItem) {\n    var path = (fieldName || '').split('.');\n    var data = dataItem;\n    path.forEach(function (p) {\n        data = data ? data[p] : undefined;\n    });\n    return data;\n}\n/**\n * @hidden\n */\nexport function isArray(operation) {\n    return operation.length !== undefined;\n}\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { EMPTY_ID, isIdZeroLevel, createId, getRootParentId, getIdWithoutRootParentId, getAllShortIds } from './itemIdUtils';\nimport SortedPublicItemIds from './SortedPublicItemIds';\nimport { getNestedValue } from './misc';\n/**\n * @hidden\n */\nexport function hasChildren(item, childrenField) {\n    var children = getNestedValue(childrenField, item);\n    return Boolean(children && children.length);\n}\n/**\n * @hidden\n */\nexport function isItemExpandedAndWithChildren(item, fieldsSvc) {\n    return fieldsSvc.expanded(item) && hasChildren(item, fieldsSvc.getChildrenField());\n}\n/**\n * @hidden\n */\nexport function resolveItemId(publicId, idField, items, childrenField) {\n    var resolvedIds = resolveItemsIds([publicId], idField, items, childrenField);\n    return resolvedIds.length ? resolvedIds[0] : undefined;\n}\n/**\n * @hidden\n */\nexport function resolveItemsIds(publicIds, idField, items, childrenField) {\n    var result = [];\n    var sortedIds = new SortedPublicItemIds();\n    sortedIds.init(publicIds);\n    resolveItemsIdsHelper(sortedIds, idField, items, EMPTY_ID, result, childrenField);\n    return result;\n}\n/**\n * @hidden\n */\nexport function updateItem(items, itemId, update, cloneField, childrenField) {\n    var _a;\n    var itemIndex = Number(getRootParentId(itemId));\n    if (itemIndex >= items.length) {\n        return items;\n    }\n    var result = items;\n    var item = items[itemIndex];\n    // Clone the item before updating it.\n    if (!item[cloneField]) {\n        result = items.slice();\n        item = result[itemIndex] = Object.assign({}, item, (_a = {}, _a[cloneField] = true, _a));\n    }\n    // Directly update the item.\n    if (isIdZeroLevel(itemId)) {\n        update(item);\n    }\n    else if (item[childrenField]) {\n        item[childrenField] = updateItem(item[childrenField], getIdWithoutRootParentId(itemId), update, cloneField, childrenField);\n    }\n    return result;\n}\n/**\n * @hidden\n */\nexport function isEnabledAndAllParentsEnabled(itemId, items, fieldsSvc) {\n    var ids = getAllShortIds(itemId);\n    var currentItems = items;\n    for (var i = 0; i < ids.length; i++) {\n        var currentItem = currentItems[Number(ids[i])];\n        if (fieldsSvc.disabled(currentItem)) {\n            return false;\n        }\n        else {\n            currentItems = currentItem[fieldsSvc.getChildrenField()];\n        }\n    }\n    return true;\n}\n/**\n * @hidden\n */\nexport function getAllDirectIndirectChildrenIds(item, itemId, childrenField, idField) {\n    return idField ? getChildrenPublicIds(item) : getChildrenHierarchicalIndices(item, itemId);\n    function getChildrenHierarchicalIndices(startItem, startItemId) {\n        var result = [];\n        var children = startItem[childrenField] || [];\n        for (var i = 0; i < children.length; i++) {\n            var id = createId(i, startItemId);\n            result.push(id);\n            result = result.concat(getChildrenHierarchicalIndices(children[i], id));\n        }\n        return result;\n    }\n    function getChildrenPublicIds(startItem) {\n        var result = [];\n        var children = startItem[childrenField] || [];\n        for (var i = 0; i < children.length; i++) {\n            result.push(getNestedValue(idField, children[i]));\n            result = result.concat(getChildrenPublicIds(children[i]));\n        }\n        return result;\n    }\n}\n/**\n * @hidden\n */\nexport function areAllDirectChildrenChecked(item, itemId, idField, childrenField, check) {\n    var children = item[childrenField] || [];\n    return children.every(function (child, index) {\n        return check.indexOf(idField ? getNestedValue(idField, child) : createId(index, itemId)) > -1;\n    });\n}\n/**\n * @hidden\n */\nexport function getAllParents(itemId, childrenField, items) {\n    var result = [];\n    var ids = getAllShortIds(itemId);\n    var currentItems = items;\n    for (var i = 0; i < ids.length - 1; i++) {\n        if (!currentItems) {\n            break;\n        }\n        var currentItem = currentItems[Number(ids[i])];\n        result.push(currentItem);\n        currentItems = currentItem[childrenField];\n    }\n    return result;\n}\n/**\n * @hidden\n */\nexport function removeItem(itemId, childrenField, items) {\n    var result = items.slice();\n    if (isIdZeroLevel(itemId)) {\n        result.splice(Number(itemId), 1);\n    }\n    else {\n        var rootParentIndex = Number(getRootParentId(itemId));\n        var rootParent = result[rootParentIndex] = __assign({}, result[rootParentIndex]);\n        rootParent[childrenField] = removeItem(getIdWithoutRootParentId(itemId), childrenField, rootParent[childrenField]);\n    }\n    return result;\n}\n/**\n * @hidden\n */\nexport function addItem(item, operation, childrenField, targetItemId, items) {\n    var result = items.slice();\n    if (isIdZeroLevel(targetItemId)) {\n        if (operation === 'child') {\n            var targetItem = result[Number(targetItemId)] = __assign({}, result[Number(targetItemId)]);\n            if (targetItem[childrenField]) {\n                targetItem[childrenField] = targetItem[childrenField].slice();\n                targetItem[childrenField].push(item);\n            }\n            else {\n                targetItem[childrenField] = [item];\n            }\n        }\n        else {\n            result.splice(Number(targetItemId) + (operation === 'after' ? 1 : 0), 0, item);\n        }\n    }\n    else {\n        var rootParentIndex = Number(getRootParentId(targetItemId));\n        var rootParent = result[rootParentIndex] = __assign({}, result[rootParentIndex]);\n        rootParent[childrenField] = addItem(item, operation, childrenField, getIdWithoutRootParentId(targetItemId), rootParent[childrenField]);\n    }\n    return result;\n}\nfunction resolveItemsIdsHelper(publicItemIds, idField, items, parentItemId, resolvedIds, childrenField) {\n    for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var id = createId(i, parentItemId);\n        if (publicItemIds.hasId(getNestedValue(idField, item))) {\n            resolvedIds.push(id);\n        }\n        if (hasChildren(item, childrenField)) {\n            resolveItemsIdsHelper(publicItemIds, idField, getNestedValue(childrenField, item), id, resolvedIds, childrenField);\n        }\n    }\n}\n", "import { Keys } from '@progress/kendo-react-common';\nimport * as idUtils from './itemIdUtils';\nimport { isItemExpandedAndWithChildren, isEnabledAndAllParentsEnabled } from './itemUtils';\n/**\n * @hidden\n */\nexport default function getItemIdUponKeyboardNavigation(item, itemId, items, keyCode, fieldsSvc) {\n    switch (keyCode) {\n        case Keys.left:\n            return getIdUponLeftKey();\n        case Keys.right:\n            return getIdUponRightKey();\n        case Keys.up:\n            return getIdUponUpKey();\n        case Keys.down:\n            return getIdUponDownKey();\n        case Keys.home:\n            return idUtils.ZERO_LEVEL_ZERO_NODE_ID;\n        case Keys.end:\n            return getIdUponEndKey();\n        default:\n            return itemId;\n    }\n    function getIdUponLeftKey() {\n        return idUtils.isIdZeroLevel(itemId)\n            // For expanded disabled items, navigate directly to the parent.\n            // Collapse cannot happen because an event is not fired to the client.\n            || (fieldsSvc.expanded(item) && isEnabledAndAllParentsEnabled(itemId, items, fieldsSvc)) ?\n            itemId : idUtils.getDirectParentId(itemId);\n    }\n    function getIdUponRightKey() {\n        return isItemExpandedAndWithChildren(item, fieldsSvc) ? idUtils.getFirstChildId(itemId) : itemId;\n    }\n    function getIdUponUpKey() {\n        var index = Number(idUtils.getShortId(itemId));\n        var parentId = idUtils.getDirectParentId(itemId);\n        return index ? getLastNotOpenedChildId(idUtils.createId(index - 1, parentId), items, fieldsSvc) :\n            idUtils.isIdZeroLevel(itemId) ? itemId : parentId;\n    }\n    function getIdUponDownKey() {\n        if (isItemExpandedAndWithChildren(item, fieldsSvc)) {\n            return idUtils.getFirstChildId(itemId);\n        }\n        else {\n            return getNextItemId(itemId, items, fieldsSvc) || itemId;\n        }\n    }\n    function getIdUponEndKey() {\n        var result = (items.length - 1).toString();\n        var currentItem = items[items.length - 1];\n        var children;\n        while (isItemExpandedAndWithChildren(currentItem, fieldsSvc)) {\n            children = currentItem[fieldsSvc.getChildrenField()];\n            result = idUtils.createId(children.length - 1, result);\n            currentItem = children[children.length - 1];\n        }\n        return result;\n    }\n}\nfunction getNextItemId(itemId, items, fieldsSvc) {\n    var parentId = idUtils.getDirectParentId(itemId);\n    var parent = parentId ? idUtils.getItemById(parentId, items, fieldsSvc.getChildrenField()) : undefined;\n    var siblings = parent ? parent[fieldsSvc.getChildrenField()] : items;\n    var index = Number(idUtils.getShortId(itemId));\n    return index < siblings.length - 1 ?\n        idUtils.createId(index + 1, parentId) :\n        parent ? getNextItemId(parentId, items, fieldsSvc) : undefined;\n}\nfunction getLastNotOpenedChildId(itemId, items, fieldsSvc) {\n    var item = idUtils.getItemById(itemId, items, fieldsSvc.getChildrenField());\n    if (isItemExpandedAndWithChildren(item, fieldsSvc)) {\n        return getLastNotOpenedChildId(idUtils.createId(item[fieldsSvc.getChildrenField()].length - 1, itemId), items, fieldsSvc);\n    }\n    else {\n        return itemId;\n    }\n}\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { classNames, guid, Draggable, kendoThemeMaps, IconWrap } from '@progress/kendo-react-common';\nimport { caretAltDownIcon, caretAltRightIcon } from '@progress/kendo-svg-icons';\nimport { createId } from './utils/itemIdUtils';\nimport { isItemExpandedAndWithChildren, hasChildren } from './utils/itemUtils';\nimport { Reveal } from '@progress/kendo-react-animation';\nimport { DOM_KENDO_ITEM_ID_FIELD, DOM_KENDO_TREEVIEW_GUID_FIELD } from './utils/consts';\nvar sizeMap = kendoThemeMaps.sizeMap;\n/**\n * @hidden\n */\nexport var TreeViewItemPropsContext = React.createContext(function (props) { return props; });\n/**\n * @hidden\n */\nvar TreeViewItemWithoutContext = /** @class */ (function (_super) {\n    __extends(TreeViewItemWithoutContext, _super);\n    function TreeViewItemWithoutContext() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.itemGuid = guid();\n        _this.onCheckChange = function (e) {\n            _this.props.onCheckChange(e, _this.item, _this.itemId);\n        };\n        _this.onExpandChange = function (e) {\n            _this.props.onExpandChange(e, _this.item, _this.itemId);\n        };\n        _this.onItemClick = function (e) {\n            _this.props.onItemClick(e, _this.item, _this.itemId);\n        };\n        _this.onPress = function (e) {\n            _this.props.onPress(e.event, _this.item, _this.itemId);\n        };\n        _this.onDrag = function (e) {\n            _this.props.onDrag(e.event, _this.item, _this.itemId);\n        };\n        _this.onRelease = function (e) {\n            _this.props.onRelease(e.event, _this.item, _this.itemId);\n        };\n        _this.assignDraggableMeta = function (element) {\n            if (element) {\n                element[DOM_KENDO_ITEM_ID_FIELD] = _this.props.itemId;\n                element[DOM_KENDO_TREEVIEW_GUID_FIELD] = _this.props.treeGuid;\n            }\n        };\n        return _this;\n    }\n    TreeViewItemWithoutContext.prototype.render = function () {\n        var _this = this;\n        var subitems = this.renderSubitemsIfApplicable();\n        var itemInPart = this.renderItemInPart();\n        return (React.createElement(\"li\", { className: classNames('k-treeview-item'), tabIndex: this.tabIndex, role: \"treeitem\", \"aria-expanded\": this.ariaExpanded, \"aria-selected\": this.ariaSelected, \"aria-checked\": this.ariaChecked, \"aria-disabled\": this.disabled ? true : undefined, ref: function (el) { return _this.itemElement = el; } },\n            React.createElement(\"div\", { className: \"k-treeview-\".concat(this.props.position), ref: this.assignDraggableMeta },\n                this.renderExpandIcon(),\n                this.renderCheckbox(),\n                this.props.draggable ?\n                    React.createElement(Draggable, { onPress: this.onPress, onDrag: this.onDrag, onRelease: this.onRelease }, itemInPart) : itemInPart),\n            this.props.animate ?\n                React.createElement(Reveal, { transitionEnterDuration: 200, transitionExitDuration: 200, style: { display: 'block' }, children: subitems }) : subitems));\n    };\n    TreeViewItemWithoutContext.prototype.componentDidMount = function () {\n        var focusedItemId = this.props.focusedItemId;\n        var currentItemId = this.itemId;\n        if (focusedItemId && focusedItemId === currentItemId) {\n            this.props.onFocusDomElNeeded(this.itemElement);\n        }\n        if (this.checkboxElement) {\n            this.checkboxElement.indeterminate = this.fieldsSvc.checkIndeterminate(this.item);\n        }\n    };\n    TreeViewItemWithoutContext.prototype.componentDidUpdate = function (prevProps) {\n        var focusedItemId = this.props.focusedItemId;\n        if (focusedItemId &&\n            focusedItemId !== prevProps.focusedItemId &&\n            focusedItemId === this.itemId) {\n            this.props.onFocusDomElNeeded(this.itemElement);\n        }\n        if (this.checkboxElement) {\n            var indeterminate = this.fieldsSvc.checkIndeterminate(this.item);\n            if (indeterminate !== prevProps.fieldsService.checkIndeterminate(prevProps.item)) {\n                this.checkboxElement.indeterminate = indeterminate;\n            }\n        }\n    };\n    TreeViewItemWithoutContext.prototype.renderCheckbox = function () {\n        var _a;\n        var _this = this;\n        if (this.props.checkboxes) {\n            var size = this.props.size;\n            return (React.createElement(\"div\", { className: classNames('k-checkbox-wrap') },\n                React.createElement(\"input\", { type: \"checkbox\", className: classNames('k-checkbox k-rounded-md', (_a = {},\n                        _a[\"k-checkbox-\".concat(sizeMap[size] || size)] = size,\n                        _a['k-disabled'] = this.disabled,\n                        _a)), \"aria-label\": this.item.text, checked: Boolean(this.fieldsSvc.checked(this.item)), id: this.itemGuid, tabIndex: -1, onChange: this.onCheckChange, ref: function (el) { return _this.checkboxElement = el; } }),\n                React.createElement(\"label\", { className: \"k-checkbox-label\", htmlFor: this.itemGuid })));\n        }\n        else {\n            return undefined;\n        }\n    };\n    TreeViewItemWithoutContext.prototype.renderExpandIcon = function () {\n        var renderExpand = this.props.expandIcons &&\n            // If it is explicitly said that the item has children (even not loaded yet)\n            // or if the item actually has children, then render the icon.\n            (this.fieldsSvc.hasChildren(this.item) || hasChildren(this.item, this.fieldsSvc.getChildrenField()));\n        return renderExpand && (\n        // Allowing the toggle-button even with `disabled=true` might be a valid case!\n        // Re-evaluate the classes bellow if such scenario occurs\n        React.createElement(\"span\", { className: classNames('k-treeview-toggle', { 'k-disabled': this.disabled }), onClick: this.onExpandChange },\n            React.createElement(IconWrap, __assign({}, this.getIconProps()))));\n    };\n    TreeViewItemWithoutContext.prototype.renderSubitemsIfApplicable = function () {\n        var _this = this;\n        var data = this.fieldsSvc.children(this.item);\n        return isItemExpandedAndWithChildren(this.item, this.fieldsSvc) ?\n            (React.createElement(\"ul\", { className: \"k-treeview-group\", role: \"group\" }, data.map(function (item, index) {\n                return (React.createElement(TreeViewItem, { item: item, position: index === 0 ? 'top' : index === data.length - 1 ? 'bot' : 'mid', itemId: createId(index, _this.itemId), treeGuid: _this.props.treeGuid, animate: _this.props.animate, focusedItemId: _this.props.focusedItemId, tabbableItemId: _this.props.tabbableItemId, fieldsService: _this.props.fieldsService, itemUI: _this.props.itemUI, checkboxes: _this.props.checkboxes, ariaMultiSelectable: _this.props.ariaMultiSelectable, onItemClick: _this.props.onItemClick, onFocusDomElNeeded: _this.props.onFocusDomElNeeded, draggable: _this.props.draggable, onPress: _this.props.onPress, onDrag: _this.props.onDrag, onRelease: _this.props.onRelease, expandIcons: _this.props.expandIcons, onExpandChange: _this.props.onExpandChange, onCheckChange: _this.props.onCheckChange, key: index, size: _this.props.size, disabled: _this.disabled }));\n            }))) : undefined;\n    };\n    TreeViewItemWithoutContext.prototype.renderItemInPart = function () {\n        return (React.createElement(\"span\", { className: classNames('k-treeview-leaf', {\n                'k-focus': this.props.focusedItemId === this.itemId,\n                'k-selected': this.fieldsSvc.selected(this.item),\n                'k-disabled': this.disabled\n            }), style: { touchAction: 'none' }, onClick: this.onItemClick },\n            React.createElement(\"span\", { className: \"k-treeview-leaf-text\" }, this.props.itemUI ?\n                React.createElement(this.props.itemUI, { item: this.item, itemHierarchicalIndex: this.itemId }) :\n                this.fieldsSvc.text(this.item))));\n    };\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"fieldsSvc\", {\n        get: function () {\n            return this.props.fieldsService;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"itemId\", {\n        get: function () {\n            return this.props.itemId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"item\", {\n        get: function () {\n            return this.props.item;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"tabIndex\", {\n        get: function () {\n            return (this.props.focusedItemId || this.props.tabbableItemId) === this.itemId ? 0 : -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"ariaExpanded\", {\n        get: function () {\n            return this.fieldsSvc.hasChildren(this.item) || hasChildren(this.item, this.fieldsSvc.getChildrenField()) ?\n                Boolean(this.fieldsSvc.expanded(this.item)) : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"disabled\", {\n        get: function () {\n            return this.props.disabled || this.fieldsSvc.disabled(this.item);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"ariaChecked\", {\n        get: function () {\n            if (this.props.checkboxes) {\n                if (this.fieldsSvc.checked(this.item)) {\n                    return 'true';\n                }\n                else {\n                    return this.fieldsSvc.checkIndeterminate(this.item) ? 'mixed' : 'false';\n                }\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewItemWithoutContext.prototype, \"ariaSelected\", {\n        get: function () {\n            if (this.fieldsSvc.selected(this.item)) {\n                return true;\n            }\n            else if (this.props.ariaMultiSelectable) {\n                return this.disabled ? undefined : false;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TreeViewItemWithoutContext.prototype.getIconProps = function () {\n        var expanded = this.fieldsSvc.expanded(this.item);\n        var loading = expanded && !hasChildren(this.item, this.fieldsSvc.getChildrenField());\n        if (loading) {\n            return { name: 'loading' };\n        }\n        return expanded ? { name: 'caret-alt-down', icon: caretAltDownIcon } : { name: 'caret-alt-right', icon: caretAltRightIcon };\n    };\n    TreeViewItemWithoutContext.defaultProps = {\n        position: 'top'\n    };\n    return TreeViewItemWithoutContext;\n}(React.Component));\n/**\n * @hidden\n */\nexport var TreeViewItem = React.forwardRef(function (props, ref) {\n    var contextPropsCallback = React.useContext(TreeViewItemPropsContext);\n    var treeViewItemProps = contextPropsCallback.call(undefined, props);\n    return (React.createElement(TreeViewItemWithoutContext, __assign({ ref: ref }, treeViewItemProps)));\n});\nTreeViewItem.displayName = 'TreeViewItem';\n", "/**\n * @hidden\n */\nexport var EXPAND_FIELD = 'expanded';\n/**\n * @hidden\n */\nexport var TEXT_FIELD = 'text';\n/**\n * @hidden\n */\nexport var DISABLED_FIELD = 'disabled';\n/**\n * @hidden\n */\nexport var CHILDREN_FIELD = 'items';\n/**\n * @hidden\n */\nexport var HAS_CHILDREN_FIELD = 'hasChildren';\n/**\n * @hidden\n */\nexport var SELECT_FIELD = 'selected';\n/**\n * @hidden\n */\nexport var CHECK_FIELD = 'checked';\n/**\n * @hidden\n */\nexport var CHECK_INDETERMINATE_FIELD = 'checkIndeterminate';\n/**\n * @hidden\n */\nexport var DOM_KENDO_ITEM_ID_FIELD = '_kendoItemId';\n/**\n * @hidden\n */\nexport var DOM_KENDO_TREEVIEW_GUID_FIELD = '_kendoTreeViewGuid';\n", "import { getNestedValue } from './misc';\n/**\n * @hidden\n */\nvar FieldsService = /** @class */ (function () {\n    function FieldsService(treeViewProps) {\n        this.expandField = treeViewProps.expandField;\n        this.selectField = treeViewProps.selectField;\n        this.hasChildrenField = treeViewProps.hasChildrenField;\n        this.childrenField = treeViewProps.childrenField;\n        this.textField = treeViewProps.textField;\n        this.disableField = treeViewProps.disableField;\n        this.checkField = treeViewProps.checkField;\n        this.checkIndeterminateField = treeViewProps.checkIndeterminateField;\n        this.focusIdField = treeViewProps.focusIdField;\n    }\n    FieldsService.prototype.expanded = function (item) {\n        return getNestedValue(this.expandField, item);\n    };\n    FieldsService.prototype.selected = function (item) {\n        return getNestedValue(this.selectField, item);\n    };\n    FieldsService.prototype.text = function (item) {\n        return getNestedValue(this.textField, item);\n    };\n    FieldsService.prototype.disabled = function (item) {\n        return getNestedValue(this.disableField, item);\n    };\n    FieldsService.prototype.hasChildren = function (item) {\n        return getNestedValue(this.hasChildrenField, item);\n    };\n    FieldsService.prototype.children = function (item) {\n        var children = getNestedValue(this.childrenField, item);\n        return children ? children : [];\n    };\n    FieldsService.prototype.checked = function (item) {\n        return getNestedValue(this.checkField, item);\n    };\n    FieldsService.prototype.checkIndeterminate = function (item) {\n        return getNestedValue(this.checkIndeterminateField, item);\n    };\n    FieldsService.prototype.focusId = function (item) {\n        return this.focusIdField && getNestedValue(this.focusIdField, item);\n    };\n    FieldsService.prototype.getChildrenField = function () {\n        return this.childrenField;\n    };\n    return FieldsService;\n}());\nexport default FieldsService;\n", "/**\n * @hidden\n */\nexport var packageMetadata = {\n    name: '@progress/kendo-react-treeview',\n    productName: 'KendoReact',\n    productCodes: ['KENDOUIREACT', 'KENDOUICOMPLETE'],\n    publishDate: 1680171841,\n    version: '',\n    licensingDocsUrl: 'https://www.telerik.com/kendo-react-ui/my-license/?utm_medium=product&utm_source=kendoreact&utm_campaign=kendo-ui-react-purchase-license-keys-warning'\n};\n", "/* eslint-disable max-len */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { updateItem, resolveItemsIds } from './utils/itemUtils';\nimport { EXPAND_FIELD, SELECT_FIELD, CHECK_FIELD, CHECK_INDETERMINATE_FIELD, CHILDREN_FIELD } from './utils/consts';\nimport { getNestedValue, isArray } from './utils/misc';\n/**\n * A helper function which applies the specified operation descriptors to the data.\n * * [Expanding and collapsing items]({% slug expansion_ways_treeview %}#toc-using-a-helper-function)\n * * [Selecting and deselecting items]({% slug selection_ways_treeview %}#toc-using-a-helper-function)\n * * [Checking and unchecking items]({% slug check_helper_funcs_treeview %})\n *\n * @param data - The data that will be processed.\n * @param operations - The operation descriptors that will be applied to the data.\n * @returns - The processed copy of the input data.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *     state = { items: tree, expand: [], select: [], check: [] };\n *     render() {\n *         const { expand, select, check } = this.state;\n *         return (\n *             <TreeView\n *                 data={processTreeViewItems(this.state.items, { expand, select, check })}\n *                 expandIcons={true} onExpandChange={this.onExpandChange} checkboxes={true}\n *                 onCheckChange={event => this.setState({ check: [ event.itemHierarchicalIndex ] })}\n *                 onItemClick={event => this.setState({ select: [ event.itemHierarchicalIndex ] })}\n *             />\n *         );\n *     }\n *     onExpandChange = (event) => {\n *         let expand = this.state.expand.slice();\n *         const index = expand.indexOf(event.itemHierarchicalIndex);\n *         index === -1 ? expand.push(event.itemHierarchicalIndex) : expand.splice(index, 1);\n *         this.setState({ expand });\n *     }\n * }\n *\n * const tree = [{\n *     text: 'Item1',\n *     items: [\n *         { text: 'Item1.1' },\n *         { text: 'Item1.2' },\n *         { text: 'Item1.3', items: [{ text: 'Item1.3.1' }] }]\n * }, {\n *     text: 'Item2', disabled: true,\n *     items: [{ text: 'Item2.1' }, { text: 'Item2.2' }, { text: 'Item2.3' }]\n * }, {\n *     text: 'Item3'\n * }];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport function processTreeViewItems(data, operations) {\n    if (!data || !data.length) {\n        return [];\n    }\n    var result = data;\n    var cloneField = operations.cloneField || 'cloned';\n    var expandField = operations.expandField || EXPAND_FIELD;\n    var selectField = operations.selectField || SELECT_FIELD;\n    var checkField = operations.checkField || CHECK_FIELD;\n    var childrenField = operations.childrenField || CHILDREN_FIELD;\n    result = handleOperation(result, expandField, operations.expand, cloneField, childrenField);\n    result = handleOperation(result, selectField, operations.select, cloneField, childrenField);\n    result = handleOperation(result, checkField, operations.check, cloneField, childrenField);\n    applyCheckIndeterminate(result, childrenField, operations.check);\n    return result;\n}\nfunction handleOperation(items, defaultField, operation, cloneField, childrenField) {\n    if (operation) {\n        var _a = parseOperation(operation, defaultField), ids = _a.ids, field = _a.field;\n        var indices = !isArray(operation) && operation.idField ? resolveItemsIds(ids, operation.idField, items, childrenField) : ids;\n        return raiseFlags(items, indices, field, cloneField, childrenField);\n    }\n    else {\n        return items;\n    }\n}\nfunction parseOperation(operation, defaultField) {\n    var ids;\n    var field;\n    if (isArray(operation)) {\n        ids = operation;\n        field = defaultField;\n    }\n    else {\n        ids = operation.ids || [];\n        field = operation.operationField || defaultField;\n    }\n    return { ids: ids, field: field };\n}\nfunction raiseFlags(items, indices, field, cloneField, childrenField) {\n    var result = items;\n    indices.forEach(function (itemIndex) {\n        result = updateItem(result, itemIndex, function (item) { return raiseNestedFlag(field, item); }, cloneField, childrenField);\n    });\n    return result;\n}\nfunction raiseNestedFlag(fieldName, dataItem) {\n    var fields = (fieldName || '').split('.');\n    var item = dataItem;\n    for (var index = 0; index < fields.length; index++) {\n        var field = fields[index];\n        if (index === fields.length - 1) {\n            item[field] = true;\n        }\n        else if (item[field] !== undefined) {\n            item[field] = __assign({}, item[field]);\n            item = item[field];\n        }\n        else {\n            return;\n        }\n    }\n}\nfunction applyCheckIndeterminate(items, childrenField, check) {\n    if (check && !isArray(check) && check.applyCheckIndeterminate) {\n        var checkField = parseOperation(check, CHECK_FIELD).field;\n        var checkIndeterminateField = check.checkIndeterminateField || CHECK_INDETERMINATE_FIELD;\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var subItems = item[childrenField];\n            if (subItems) {\n                applyCheckIndeterminateHelper(subItems, getNestedValue(checkField, item) ? [] : [item], childrenField, checkField, checkIndeterminateField);\n            }\n        }\n    }\n}\nfunction applyCheckIndeterminateHelper(data, parents, childrenField, checkField, checkIndeterminateField) {\n    // The updates will be direct because the corresponding items\n    // are already cloned because of their checked children.\n    var parentsAlreadyUpdated = false;\n    for (var i = 0; i < data.length; i++) {\n        var item = data[i];\n        if (getNestedValue(checkField, item)) {\n            if (!parentsAlreadyUpdated) {\n                for (var j = 0; j < parents.length; j++) {\n                    raiseNestedFlag(checkIndeterminateField, parents[j]);\n                }\n            }\n            parentsAlreadyUpdated = true;\n            if (item[childrenField]) {\n                applyCheckIndeterminateHelper(item[childrenField], [], childrenField, checkField, checkIndeterminateField);\n            }\n        }\n        else {\n            if (item[childrenField]) {\n                applyCheckIndeterminateHelper(item[childrenField], parentsAlreadyUpdated ? [item] : parents.concat([item]), childrenField, checkField, checkIndeterminateField);\n            }\n        }\n    }\n}\n", "import { addItem, removeItem } from './utils/itemUtils';\nimport { getDecrementedItemIdAfterRemoval, getItemById } from './utils/itemIdUtils';\nimport { CHILDREN_FIELD } from './utils/consts';\n/**\n *  A helper function which moves a TreeView item in an immutable way.\n *\n * @param sourceItemHierarchicalIndex - The hierarchical index of the item that will be moved.\n * @param sourceData - The tree which contains the item that will be moved.\n * @param operation - The specific move operation.\n *\n * The available options are:\n *  * `before`&mdash;Indicates that the source item will become the previous sibling of the target item.\n *  * `after`&mdash;Indicates that the source item will become the next sibling of the target item.\n *  * `child`&mdash;Indicates that the source item will become a child of the target item.\n * @param targetItemHierarchicalIndex - The hierarchical index of the item next to which the source item will be moved.\n * @param targetData - The tree which contains the target item.\n * If the argument is skipped, then the move operation will be executed within the same tree.\n * Setting the `sourceData` and `targetData` arguments to the same tree is also supported.\n * @param childrenField - The field that points to the dataItem sub items. Defaults to `items`.\n * @returns - The updated copies of the `sourceData` and `targetData` input arguments.\n * If `targetData` is not passed, then only the updated copy of the `sourceData` will be returned.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *     dragClue;\n *     state = { tree };\n *\n *     render() {\n *         return (\n *             <div>\n *                 <TreeView data={this.state.tree} draggable={true}\n *                     onItemDragOver={this.onItemDragOver} onItemDragEnd={this.onItemDragEnd} />\n *                 <TreeViewDragClue ref={dragClue => this.dragClue = dragClue} />\n *             </div>\n *         );\n *     }\n *\n *     onItemDragOver = (event) => {\n *         this.dragClue.show(event.pageY + 10, event.pageX, event.item.text, this.getClueClassName(event));\n *     }\n *     onItemDragEnd = (event) => {\n *         this.dragClue.hide();\n *         const eventAnalyzer = new TreeViewDragAnalyzer(event).init();\n *\n *         if (eventAnalyzer.isDropAllowed) {\n *             const updatedTree = moveTreeViewItem(\n *                 event.itemHierarchicalIndex,\n *                 this.state.tree,\n *                 eventAnalyzer.getDropOperation(),\n *                 eventAnalyzer.destinationMeta.itemHierarchicalIndex,\n *             );\n *\n *             this.setState({ tree: updatedTree });\n *         }\n *     }\n *     getClueClassName(event) {\n *         const eventAnalyzer = new TreeViewDragAnalyzer(event).init();\n *         const itemIndex = eventAnalyzer.destinationMeta.itemHierarchicalIndex;\n *\n *         if (eventAnalyzer.isDropAllowed) {\n *             switch (eventAnalyzer.getDropOperation()) {\n *                 case 'child':\n *                     return 'k-i-plus';\n *                 case 'before':\n *                     return itemIndex === '0' || itemIndex.endsWith(`${SEPARATOR}0`) ?\n *                         'k-i-insert-up' : 'k-i-insert-middle';\n *                 case 'after':\n *                     const siblings = getSiblings(itemIndex, this.state.tree);\n *                     const lastIndex = Number(itemIndex.split(SEPARATOR).pop());\n *\n *                     return lastIndex < siblings.length - 1 ? 'k-i-insert-middle' : 'k-i-insert-down';\n *                 default:\n *                     break;\n *             }\n *         }\n *\n *         return 'k-i-cancel';\n *     }\n * }\n *\n * function getSiblings(itemIndex, data) {\n *     let result = data;\n *\n *     const indices = itemIndex.split(SEPARATOR).map(index => Number(index));\n *     for (let i = 0; i < indices.length - 1; i++) {\n *         result = result[indices[i]].items;\n *     }\n *\n *     return result;\n * }\n *\n * const SEPARATOR = '_';\n * const tree = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs', expanded: true },\n *         { text: 'Sofas', expanded: true },\n *         { text: 'Occasional Furniture', expanded: true }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen', expanded: true },\n *         { text: 'Curtains & Blinds', expanded: true },\n *         { text: 'Carpets', expanded: true }]\n * }];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport function moveTreeViewItem(sourceItemHierarchicalIndex, sourceData, operation, targetItemHierarchicalIndex, targetData, childrenField) {\n    var subItemsField = childrenField || CHILDREN_FIELD;\n    if (!validateInput()) {\n        return prepareInputDataForReturn();\n    }\n    var sourceItem = getItemById(sourceItemHierarchicalIndex, sourceData, subItemsField);\n    if (!sourceItem) {\n        return prepareInputDataForReturn();\n    }\n    // The source and the target tree are the same.\n    if (!targetData || targetData === sourceData) {\n        if (!validateNoCircularReference()) {\n            return prepareInputDataForReturn();\n        }\n        var updatedSourceData = removeItem(sourceItemHierarchicalIndex, subItemsField, sourceData);\n        var resultData = addItem(sourceItem, operation, subItemsField, getDecrementedItemIdAfterRemoval(sourceItemHierarchicalIndex, targetItemHierarchicalIndex), updatedSourceData);\n        // A simpler output is explicitly returned when the source and the target tree are\n        // the same, that is, the targetData argument is skipped.\n        return targetData ? { sourceData: resultData, targetData: resultData } : resultData;\n    }\n    else {\n        var updatedSource = removeItem(sourceItemHierarchicalIndex, subItemsField, sourceData);\n        var updatedTarget = addItem(sourceItem, operation, subItemsField, targetItemHierarchicalIndex, targetData);\n        return { sourceData: updatedSource, targetData: updatedTarget };\n    }\n    function prepareInputDataForReturn() {\n        return targetData ? { sourceData: sourceData, targetData: targetData } : sourceData;\n    }\n    function validateNoCircularReference() {\n        return !\"\".concat(targetItemHierarchicalIndex, \"_\").startsWith(\"\".concat(sourceItemHierarchicalIndex, \"_\"));\n    }\n    function validateInput() {\n        if (!sourceData || !sourceData.length ||\n            !sourceItemHierarchicalIndex || !targetItemHierarchicalIndex) {\n            return false;\n        }\n        if (targetData && !targetData.length) {\n            // Dropping over an empty tree is not supported.\n            return false;\n        }\n        // Validate that the target item exists.\n        var data = !targetData || targetData === sourceData ? sourceData : targetData;\n        if (!getItemById(targetItemHierarchicalIndex, data, subItemsField)) {\n            return false;\n        }\n        return true;\n    }\n}\n", "var __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { getAllDirectIndirectChildrenIds, areAllDirectChildrenChecked, getAllParents } from './utils/itemUtils';\nimport { getDirectParentId, getItemById } from './utils/itemIdUtils';\nimport { isArray, getNestedValue } from './utils/misc';\nimport { CHILDREN_FIELD } from './utils/consts';\n/**\n * A helper function which updates the check descriptor.\n *\n * @param event - The event that triggered the change.\n * @param check - The check descriptor that will be updated.\n * @param data - The TreeView items.\n * @param settings - The additional settings that configure the update of the check descriptor.\n * @param childrenField - The field that points to the dataItem sub items. Defaults to `items`.\n * The default behavior allows the selection of multiple items.\n * @returns - The updated copy of the input check descriptor.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *    state = { check: [], items: tree };\n *    render() {\n *        return (\n *            <div>\n *                <TreeView\n *                    checkboxes={true} onCheckChange={this.onCheckChange}\n *                    data={processTreeViewItems(this.state.items, { check: this.state.check })}\n *                />\n *                <div style={{ marginTop: 5 }}>\n *                    <i>Press SPACE to check/uncheck the active item</i>\n *                    <div className=\"example-config\">\n *                        Checked Indices: {this.state.check.join(\",\")}\n *                    </div>\n *                </div>\n *            </div>\n *        );\n *    }\n *    onCheckChange = (event) => {\n *        this.setState({ check: handleTreeViewCheckChange(event, this.state.check, this.state.items) });\n *    }\n * }\n *\n * const tree = [ {\n *    text: 'Furniture', expanded: true, items: [\n *        { text: 'Tables & Chairs' }, { text: 'Sofas' }, { text: 'Occasional Furniture' } ]\n * }, {\n *    text: 'Decor', expanded: true, items: [\n *        { text: 'Bed Linen' }, { text: 'Curtains & Blinds' }, { text: 'Carpets' } ]\n * } ];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nexport function handleTreeViewCheckChange(event, check, data, settings, childrenField) {\n    if (settings === void 0) { settings = {}; }\n    if (!data || !data.length) {\n        return [];\n    }\n    var _a = parseOperation(check), ids = _a.ids, idField = _a.idField;\n    var itemId = idField ? getNestedValue(idField, event.item) : event.itemHierarchicalIndex;\n    var idIndex = ids.indexOf(itemId);\n    var itemJustChecked = idIndex === -1;\n    var subItemsField = childrenField || CHILDREN_FIELD;\n    var newIds;\n    if (settings.singleMode) {\n        newIds = itemJustChecked ? [itemId] : [];\n    }\n    else {\n        newIds = ids.slice();\n        itemJustChecked ? newIds.push(itemId) : newIds.splice(idIndex, 1);\n        if (settings.checkChildren) {\n            checkChildren(event.item, event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds);\n        }\n        if (settings.checkParents) {\n            checkParents(event.itemHierarchicalIndex, itemJustChecked, idField, subItemsField, newIds, data);\n        }\n    }\n    return isArray(check) ? newIds : Object.assign({}, check, { ids: newIds });\n}\nfunction parseOperation(operation) {\n    var ids;\n    var idField = undefined;\n    if (isArray(operation)) {\n        ids = operation;\n    }\n    else {\n        ids = operation.ids || [];\n        idField = operation.idField;\n    }\n    return { ids: ids, idField: idField };\n}\nfunction checkChildren(item, itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids) {\n    getAllDirectIndirectChildrenIds(item, itemHierarchicalIndex, childrenField, idField).forEach(function (itemId) {\n        if (itemJustChecked && ids.indexOf(itemId) === -1) {\n            ids.push(itemId);\n        }\n        else if (!itemJustChecked && ids.indexOf(itemId) > -1) {\n            ids.splice(ids.indexOf(itemId), 1);\n        }\n    });\n}\nfunction checkParents(itemHierarchicalIndex, itemJustChecked, idField, childrenField, ids, data) {\n    var it = makeParentsIterator();\n    var result = it.next();\n    itemJustChecked ? check() : uncheck();\n    function check() {\n        // Check all parents which have all their children checked.\n        while (!result.done) {\n            var _a = result.value, id = _a.id, item = _a.item;\n            // The first check is needed. However, it is not sure whether to stop the entire loop.\n            if (ids.indexOf(id) === -1 &&\n                areAllDirectChildrenChecked(item, id, idField, childrenField, ids)) {\n                ids.push(id);\n                result = it.next();\n            }\n            else {\n                break;\n            }\n        }\n    }\n    function uncheck() {\n        // Uncheck parents until an already unchecked parent is reached.\n        while (!result.done) {\n            var id = result.value.id;\n            var idIndex = ids.indexOf(id);\n            if (idIndex > -1) {\n                ids.splice(idIndex, 1);\n                result = it.next();\n            }\n            else {\n                break;\n            }\n        }\n    }\n    // When called for unchecking, the parent items are not needed.\n    // That is why, for optimization, they are not returned.\n    function makeParentsIterator() {\n        var parents, i, parentId;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!idField) return [3 /*break*/, 5];\n                    parents = getAllParents(itemHierarchicalIndex, childrenField, data);\n                    i = parents.length - 1;\n                    _a.label = 1;\n                case 1:\n                    if (!(i > -1)) return [3 /*break*/, 4];\n                    return [4 /*yield*/, { id: getNestedValue(idField, parents[i]), item: itemJustChecked ? parents[i] : undefined }];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    i--;\n                    return [3 /*break*/, 1];\n                case 4: return [3 /*break*/, 8];\n                case 5:\n                    parentId = getDirectParentId(itemHierarchicalIndex);\n                    _a.label = 6;\n                case 6:\n                    if (!parentId) return [3 /*break*/, 8];\n                    return [4 /*yield*/, { id: parentId, item: itemJustChecked ? getItemById(parentId, data, childrenField) : undefined }];\n                case 7:\n                    _a.sent();\n                    parentId = getDirectParentId(parentId);\n                    return [3 /*break*/, 6];\n                case 8: return [2 /*return*/];\n            }\n        });\n    }\n}\n", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\n/**\n * Represents the KendoReact TreeViewDragClue component which renders a clue when an item is dragged.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *     dragClue;\n *     state = { tree };\n *\n *     render() {\n *         return (\n *             <div>\n *                 <TreeView data={this.state.tree} draggable={true}\n *                     onItemDragOver={this.onItemDragOver} onItemDragEnd={this.onItemDragEnd} />\n *                 <TreeViewDragClue ref={dragClue => this.dragClue = dragClue} />\n *             </div>\n *         );\n *     }\n *\n *     onItemDragOver = (event) => {\n *         this.dragClue.show(event.pageY + 10, event.pageX, event.item.text, this.getClueClassName(event));\n *     }\n *     onItemDragEnd = (event) => {\n *         this.dragClue.hide();\n *         const eventAnalyzer = new TreeViewDragAnalyzer(event).init();\n *\n *         if (eventAnalyzer.isDropAllowed) {\n *             const updatedTree = moveTreeViewItem(\n *                 event.itemHierarchicalIndex,\n *                 this.state.tree,\n *                 eventAnalyzer.getDropOperation(),\n *                 eventAnalyzer.destinationMeta.itemHierarchicalIndex,\n *             );\n *\n *             this.setState({ tree: updatedTree });\n *         }\n *     }\n *     getClueClassName(event) {\n *         const eventAnalyzer = new TreeViewDragAnalyzer(event).init();\n *         const itemIndex = eventAnalyzer.destinationMeta.itemHierarchicalIndex;\n *\n *         if (eventAnalyzer.isDropAllowed) {\n *             switch (eventAnalyzer.getDropOperation()) {\n *                 case 'child':\n *                     return 'k-i-plus';\n *                 case 'before':\n *                     return itemIndex === '0' || itemIndex.endsWith(`${SEPARATOR}0`) ?\n *                         'k-i-insert-up' : 'k-i-insert-middle';\n *                 case 'after':\n *                     const siblings = getSiblings(itemIndex, this.state.tree);\n *                     const lastIndex = Number(itemIndex.split(SEPARATOR).pop());\n *\n *                     return lastIndex < siblings.length - 1 ? 'k-i-insert-middle' : 'k-i-insert-down';\n *                 default:\n *                     break;\n *             }\n *         }\n *\n *         return 'k-i-cancel';\n *     }\n * }\n *\n * function getSiblings(itemIndex, data) {\n *     let result = data;\n *\n *     const indices = itemIndex.split(SEPARATOR).map(index => Number(index));\n *     for (let i = 0; i < indices.length - 1; i++) {\n *         result = result[indices[i]].items;\n *     }\n *\n *     return result;\n * }\n *\n * const SEPARATOR = '_';\n * const tree = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs', expanded: true },\n *         { text: 'Sofas', expanded: true },\n *         { text: 'Occasional Furniture', expanded: true }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen', expanded: true },\n *         { text: 'Curtains & Blinds', expanded: true },\n *         { text: 'Carpets', expanded: true }]\n * }];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar TreeViewDragClue = /** @class */ (function (_super) {\n    __extends(TreeViewDragClue, _super);\n    function TreeViewDragClue() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @hidden\n         */\n        _this.state = {\n            visible: false,\n            top: 0,\n            left: 0,\n            text: '',\n            operationClassName: 'k-i-cancel'\n        };\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    TreeViewDragClue.prototype.render = function () {\n        var dynamicStyle = { top: this.state.top + 'px', left: this.state.left + 'px' };\n        return this.state.visible && (React.createElement(\"div\", { className: \"k-header k-drag-clue\", style: __assign(__assign({}, this.props.style), dynamicStyle) },\n            React.createElement(\"span\", { className: classNames('k-icon k-drag-status k-icon-with-modifier', this.state.operationClassName) },\n                React.createElement(\"span\", { className: \"k-icon k-icon-modifier\" })),\n            this.state.text));\n    };\n    /**\n     * Displays the TreeViewDragClue component.\n     *\n     * @param top - The `top` CSS position of the component.\n     * @param left - The `left` CSS position of the component.\n     * @param text - The text of the component.\n     * @param operationClassName - The CSS class name which is related to the specific drop operation.\n     */\n    TreeViewDragClue.prototype.show = function (top, left, text, operationClassName) {\n        this.setState({ visible: true, top: top, left: left, text: text, operationClassName: operationClassName });\n    };\n    /**\n     * Hides the TreeViewDragClue component.\n     */\n    TreeViewDragClue.prototype.hide = function () {\n        this.setState({ visible: false });\n    };\n    /**\n     * @hidden\n     */\n    TreeViewDragClue.defaultProps = { style: { display: 'block', position: 'absolute', zIndex: 20000, padding: '4px 6px' } };\n    return TreeViewDragClue;\n}(React.PureComponent));\nexport { TreeViewDragClue };\n", "import { DOM_KENDO_ITEM_ID_FIELD, DOM_KENDO_TREEVIEW_GUID_FIELD } from './utils/consts';\nvar DROPZONE_BOUNDARY_DELTA = 6;\n/**\n * A class which provides an API for analyzing the `drag` events\n * of the TreeView.\n *\n * @example\n * ```jsx\n * class App extends React.Component {\n *     dragClue;\n *     state = { tree };\n *\n *     render() {\n *         return (\n *             <div>\n *                 <TreeView data={this.state.tree} draggable={true}\n *                     onItemDragOver={this.onItemDragOver} onItemDragEnd={this.onItemDragEnd} />\n *                 <TreeViewDragClue ref={dragClue => this.dragClue = dragClue} />\n *             </div>\n *         );\n *     }\n *\n *     onItemDragOver = (event) => {\n *         this.dragClue.show(event.pageY + 10, event.pageX, event.item.text, this.getClueClassName(event));\n *     }\n *     onItemDragEnd = (event) => {\n *         this.dragClue.hide();\n *         const eventAnalyzer = new TreeViewDragAnalyzer(event).init();\n *\n *         if (eventAnalyzer.isDropAllowed) {\n *             const updatedTree = moveTreeViewItem(\n *                 event.itemHierarchicalIndex,\n *                 this.state.tree,\n *                 eventAnalyzer.getDropOperation(),\n *                 eventAnalyzer.destinationMeta.itemHierarchicalIndex,\n *             );\n *\n *             this.setState({ tree: updatedTree });\n *         }\n *     }\n *     getClueClassName(event) {\n *         const eventAnalyzer = new TreeViewDragAnalyzer(event).init();\n *         const itemIndex = eventAnalyzer.destinationMeta.itemHierarchicalIndex;\n *\n *         if (eventAnalyzer.isDropAllowed) {\n *             switch (eventAnalyzer.getDropOperation()) {\n *                 case 'child':\n *                     return 'k-i-plus';\n *                 case 'before':\n *                     return itemIndex === '0' || itemIndex.endsWith(`${SEPARATOR}0`) ?\n *                         'k-i-insert-up' : 'k-i-insert-middle';\n *                 case 'after':\n *                     const siblings = getSiblings(itemIndex, this.state.tree);\n *                     const lastIndex = Number(itemIndex.split(SEPARATOR).pop());\n *\n *                     return lastIndex < siblings.length - 1 ? 'k-i-insert-middle' : 'k-i-insert-down';\n *                 default:\n *                     break;\n *             }\n *         }\n *\n *         return 'k-i-cancel';\n *     }\n * }\n *\n * function getSiblings(itemIndex, data) {\n *     let result = data;\n *\n *     const indices = itemIndex.split(SEPARATOR).map(index => Number(index));\n *     for (let i = 0; i < indices.length - 1; i++) {\n *         result = result[indices[i]].items;\n *     }\n *\n *     return result;\n * }\n *\n * const SEPARATOR = '_';\n * const tree = [{\n *     text: 'Furniture', expanded: true, items: [\n *         { text: 'Tables & Chairs', expanded: true },\n *         { text: 'Sofas', expanded: true },\n *         { text: 'Occasional Furniture', expanded: true }]\n * }, {\n *     text: 'Decor', expanded: true, items: [\n *         { text: 'Bed Linen', expanded: true },\n *         { text: 'Curtains & Blinds', expanded: true },\n *         { text: 'Carpets', expanded: true }]\n * }];\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar TreeViewDragAnalyzer = /** @class */ (function () {\n    /**\n     * @param event - The event that will be analyzed.\n     */\n    function TreeViewDragAnalyzer(event) {\n        this.event = event;\n        this.initialized = false;\n        this.destItemId = '';\n        this.destTreeViewGuid = '';\n        this.itemId = event.itemHierarchicalIndex;\n        this.treeViewGuid = event.target.guid;\n    }\n    /**\n     * The method which initializes the analyzer.\n     * Invoke the method before you call any other methods.\n     *\n     * @returns - The analyzer object of the `drag` event.\n     */\n    TreeViewDragAnalyzer.prototype.init = function () {\n        if (!this.initialized) {\n            this.setDestimationMeta(document.elementFromPoint(this.event.clientX, this.event.clientY));\n            this.initialized = true;\n        }\n        return this;\n    };\n    Object.defineProperty(TreeViewDragAnalyzer.prototype, \"isDropAllowed\", {\n        /**\n         * Returns `true` if dropping is allowed. Otherwise, returns `false`.\n         */\n        get: function () {\n            if (this.initialized && this.destItemId && this.destTreeViewGuid) {\n                // Disallow circular references.\n                return !((\"\".concat(this.destTreeViewGuid, \"_\").concat(this.destItemId, \"_\")).\n                    startsWith(\"\".concat(this.treeViewGuid, \"_\").concat(this.itemId, \"_\")));\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TreeViewDragAnalyzer.prototype, \"destinationMeta\", {\n        /**\n         * Returns an object which contains:\n         * * The `itemHierarchicalIndex` of the destination item (the item below the dragged item) and\n         * * The `guid` of the destination TreeView (the TreeView which renders the destination item).\n         */\n        get: function () {\n            return { itemHierarchicalIndex: this.destItemId, treeViewGuid: this.destTreeViewGuid };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns the specific drop operation.\n     *\n     * @returns - The following values are returned:\n     * * `before`&mdash;Indicates that the dragged item is positioned at the beginning of the destination item.\n     * * `after`&mdash;Indicates that the dragged item is positioned at the end of the destination item.\n     * * `child`&mdash;Indicates that the dragged item is positioned in the middle of the destination item.\n     * * `undefined`&mdash;Indicates that dropping is not allowed.\n     */\n    TreeViewDragAnalyzer.prototype.getDropOperation = function () {\n        if (this.initialized && this.isDropAllowed) {\n            var _a = this.destDomNodeWithMeta.getBoundingClientRect(), top_1 = _a.top, height = _a.height;\n            if (top_1 + height - this.event.clientY < DROPZONE_BOUNDARY_DELTA) {\n                return 'after';\n            }\n            else if (this.event.clientY - top_1 < DROPZONE_BOUNDARY_DELTA) {\n                return 'before';\n            }\n            else {\n                return 'child';\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    TreeViewDragAnalyzer.prototype.setDestimationMeta = function (element) {\n        var node = element;\n        while (node && !node[DOM_KENDO_ITEM_ID_FIELD]) {\n            node = node.parentNode;\n        }\n        if (node && node[DOM_KENDO_ITEM_ID_FIELD]) {\n            this.destDomNodeWithMeta = node;\n            this.destItemId = node[DOM_KENDO_ITEM_ID_FIELD];\n            this.destTreeViewGuid = node[DOM_KENDO_TREEVIEW_GUID_FIELD];\n        }\n    };\n    return TreeViewDragAnalyzer;\n}());\nexport { TreeViewDragAnalyzer };\n"],
  "mappings": "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",
  "names": ["React", "SortedPublicItemIds", "d", "b", "__assign", "TreeViewItemWithoutContext", "FieldsService", "__extends", "d", "b", "sizeMap", "TreeView", "__assign", "parseOperation", "React", "__extends", "d", "b", "__assign", "TreeViewDragClue", "TreeViewDragAnalyzer"]
}
