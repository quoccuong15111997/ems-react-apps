var isObject = function (value) {
    return typeof value === 'object';
};
var diffOptions = function (original, current) {
    if (Object.keys(original).length !== Object.keys(current).length) {
        return true;
    }
    for (var field in original) {
        if (field !== 'value' && original.hasOwnProperty(field)) {
            var originalValue = original[field];
            var currentValue = current[field];
            var diff = isObject(originalValue) && isObject(currentValue) ?
                diffOptions(originalValue, currentValue) : originalValue !== currentValue;
            if (diff) {
                return true;
            }
        }
    }
    return false;
};
export var isOptionsChanged = function (original, current) {
    if (!original || !current) {
        return true;
    }
    original = [].concat(original);
    current = [].concat(current);
    if (original.length !== current.length) {
        return true;
    }
    for (var idx = 0; idx < original.length; idx++) {
        if (diffOptions(original[idx], current[idx])) {
            return true;
        }
    }
    return false;
};
