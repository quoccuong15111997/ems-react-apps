var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { classNames } from '@progress/kendo-react-common';
import { TREELIST_ROW_INDEX_ATTRIBUTE } from '../constants';
/**
 * The default row component of the TreeList.
 */
export var TreeListRow = React.forwardRef(function (props, ref) {
    var _a;
    var isSelected = props.isSelected, rowHeight = props.rowHeight, isAltRow = props.isAltRow, expanded = props.expanded, ariaRowIndex = props.ariaRowIndex, level = props.level, ariaSetSize = props.ariaSetSize, ariaPosInSet = props.ariaPosInSet;
    var className = classNames('k-table-row', 'k-master-row', {
        'k-selected': isSelected,
        'k-alt': isAltRow
    });
    var style = React.useMemo(function () { return rowHeight !== undefined ? { height: rowHeight + 'px' } : undefined; }, [rowHeight]);
    var defaultRendering = (React.createElement("tr", __assign({ onClick: props.onClick, onDoubleClick: props.onDoubleClick, onContextMenu: props.onContextMenu, className: className, style: style, ref: ref, "aria-expanded": expanded, role: 'row', "aria-rowindex": ariaRowIndex, "aria-level": level.length, "aria-posinset": ariaPosInSet, "aria-setsize": ariaSetSize }, (_a = {}, _a[TREELIST_ROW_INDEX_ATTRIBUTE] = props.rowIndex, _a)), props.children));
    return (React.createElement(React.Fragment, null, props.render ?
        props.render.call(undefined, defaultRendering, props) :
        defaultRendering));
});
TreeListRow.displayName = 'KendoReactTreeListRow';
