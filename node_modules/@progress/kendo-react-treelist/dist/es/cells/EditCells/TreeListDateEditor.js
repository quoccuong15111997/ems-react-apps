var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { getNestedValue } from '../../utils';
import { DatePicker } from '@progress/kendo-react-dateinputs';
import { useTableKeyboardNavigation } from '@progress/kendo-react-data-tools';
import { TREELIST_COL_INDEX_ATTRIBUTE } from '../../constants';
import { classNames } from '@progress/kendo-react-common';
export var TreeListDateEditor = function (props) {
    var _a, _b;
    var onChange = React.useCallback(function (event) {
        if (props.onChange) {
            props.onChange({
                dataItem: props.dataItem,
                level: props.level,
                field: props.field,
                syntheticEvent: event.syntheticEvent,
                value: event.value
            });
        }
    }, [props.onChange, props.dataItem, props.level, props.field]);
    var navigationAttributes = useTableKeyboardNavigation(props.id);
    var editCellClasses = classNames((_a = {},
        _a['k-selected'] = props.isSelected,
        _a), props.className);
    var defaultRendering = (React.createElement("td", __assign({ style: props.style, className: editCellClasses, "aria-colindex": props.ariaColumnIndex, "aria-selected": props.isSelected, role: 'gridcell' }, navigationAttributes, (_b = {}, _b[TREELIST_COL_INDEX_ATTRIBUTE] = props.colIndex, _b)),
        React.createElement(DatePicker, { width: "100%", value: getNestedValue(props.field, props.dataItem), onChange: onChange })));
    return props.render ?
        props.render.call(undefined, defaultRendering, props) :
        defaultRendering;
};
TreeListDateEditor.displayName = 'KendoReactTreeListDateEditor';
