import { ComponentType } from 'react';
import { TreeColumnBaseProps } from '@progress/kendo-react-data-tools';
import { TreeListCellProps } from './TreeListCellProps';
import { TreeListHeaderCellProps } from './TreeListHeaderCellProps';
import { TreeListFilterCellProps } from './TreeListFilterCellProps';
/**
 * The props of the columns of the TreeList component.
 */
export interface TreeListColumnProps extends Omit<TreeColumnBaseProps, 'children' | 'cell' | 'editCell'> {
    /**
     * Defines the component that will be rendered as a cell. If not set, a `TreeListCell` will be rendered by default.
     */
    cell?: ComponentType<TreeListCellProps>;
    /**
     * Defines the component that will be rendered as an edit cell.
     */
    editCell?: ComponentType<TreeListCellProps>;
    /**
     * Defines the component that will be rendered as a header cell.
     * If not set, a `TreeListHeaderCell` will be rendered by default.
     */
    headerCell?: ComponentType<TreeListHeaderCellProps>;
    /**
     * **Deprecated**. Use `filterCell` prop instead.
     */
    filter?: ComponentType<TreeListFilterCellProps>;
    /**
     * Defines the component that will be rendered as a filter cell.
     */
    filterCell?: ComponentType<TreeListFilterCellProps>;
    /**
     * A collection of child columns.
     */
    children?: TreeListColumnProps[];
    /**
     * Defines if the column is locked (frozen or sticky).
     * Locked columns are the columns that are visible at all times while the user scrolls the component horizontally.
     * Defaults to `false`.
     */
    locked?: boolean;
}
