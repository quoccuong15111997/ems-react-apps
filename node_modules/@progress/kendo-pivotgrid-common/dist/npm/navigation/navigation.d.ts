export declare abstract class Navigation {
    abstract selectors: string[];
    abstract mouseEvents: {
        [type: string]: (target: HTMLElement, nav: Navigation, ev: Event) => void;
    };
    abstract keyboardEvents: {
        [type: string]: {
            [key: string]: (target: HTMLElement, nav: Navigation, ev: KeyboardEvent) => void;
        };
    };
    tabIndex: number;
    root: HTMLElement | null;
    readonly elements: HTMLElement[];
    readonly first: HTMLElement | null;
    readonly last: HTMLElement | null;
    readonly current: HTMLElement | null;
    private eventHandlers;
    constructor(options: {
        tabIndex: number;
    });
    start(root: HTMLElement): void;
    stop(): void;
    focusElement(element: HTMLElement | null, previous: HTMLElement | null): void;
    update: () => void;
}
