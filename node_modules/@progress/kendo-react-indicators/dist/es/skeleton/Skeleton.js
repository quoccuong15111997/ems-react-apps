import * as React from 'react';
import * as PropTypes from 'prop-types';
import { classNames } from '@progress/kendo-react-common';
import { validatePackage } from '@progress/kendo-react-common';
import { packageMetadata } from '../package-metadata';
/**
 * Represents the [KendoReact Skeleton component]({% slug overview_skeleton %}).
 *
 * @example
 * ```jsx
 * const App = () => {
 *   return (
 *       <Skeleton shape={'text'} style={{width: 200}}/>
 *   );
 * };
 *    ReactDOM.render(<App />, document.querySelector('my-app'));
 * ```
 */
export var Skeleton = React.forwardRef(function (props, target) {
    validatePackage(packageMetadata);
    var className = props.className, style = props.style;
    var elementRef = React.useRef(null);
    var focusElement = React.useCallback(function () {
        if (elementRef.current) {
            elementRef.current.focus();
        }
    }, []);
    React.useImperativeHandle(target, function () { return ({
        element: elementRef.current,
        focus: focusElement
    }); });
    var shape = React.useMemo(function () { return props.shape || defaultProps.shape; }, [props.shape]);
    var animation = React.useMemo(function () {
        if (props.animation === false) {
            return false;
        }
        else {
            return props.animation || defaultProps.animation;
        }
    }, [props.animation]);
    var skeletonClasses = React.useMemo(function () { return classNames('k-skeleton', {
        'k-skeleton-circle': shape === 'circle',
        'k-skeleton-rectangle': shape === 'rectangle',
        'k-skeleton-text': shape === 'text',
        'k-skeleton-pulse': (typeof animation === 'object' && animation.type === 'pulse'),
        'k-skeleton-wave': (typeof animation === 'object' && animation.type === 'wave') || (animation === true)
    }, className); }, [shape, animation, className]);
    return (React.createElement("span", { ref: elementRef, className: skeletonClasses, style: style }));
});
Skeleton.propTypes = {
    className: PropTypes.string,
    style: PropTypes.object,
    animation: PropTypes.shape({
        type: PropTypes.oneOf(['wave', 'pulse'])
    }),
    shape: PropTypes.oneOf(['circle', 'rectangle', 'text'])
};
var defaultProps = {
    shape: 'text',
    animation: { type: 'pulse' }
};
Skeleton.defaultProps = defaultProps;
Skeleton.displayName = 'KendoSkeleton';
