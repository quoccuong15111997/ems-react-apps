"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AddButton = void 0;
var React = require("react");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var messages_1 = require("../../messages");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/** @hidden */
exports.AddButton = React.forwardRef(function (props, _) {
    var localizationService = (0, kendo_react_intl_1.useLocalization)();
    var localizeMessage = function (message) {
        return localizationService.toLanguageString(message, messages_1.messages[message]);
    };
    var addTaskMessage = localizeMessage(messages_1.addTask);
    var addChildMessage = localizeMessage(messages_1.addChild);
    var addAboveMessage = localizeMessage(messages_1.addAbove);
    var addBelowMessage = localizeMessage(messages_1.addBelow);
    var handleItemClick = React.useCallback(function (event) {
        event.syntheticEvent.preventDefault();
        var direction = event.item && event.item.direction ? event.item.direction : 'none';
        if (props.onClick) {
            props.onClick({
                nativeEvent: event.nativeEvent,
                syntheticEvent: event.syntheticEvent,
                direction: direction
            });
        }
    }, [props.onClick]);
    var handleButtonClick = React.useCallback(function (syntheticEvent) {
        syntheticEvent.preventDefault();
        if (props.onClick) {
            props.onClick({
                nativeEvent: syntheticEvent && syntheticEvent.nativeEvent,
                syntheticEvent: syntheticEvent,
                direction: 'none'
            });
        }
    }, [props.onClick]);
    var buttonTitle = (React.createElement(React.Fragment, null,
        React.createElement(kendo_react_common_1.IconWrap, { name: "plus", icon: kendo_svg_icons_1.plusIcon }),
        addTaskMessage));
    return (!props.selectedTask ? (React.createElement(kendo_react_buttons_1.Button, { onClick: handleButtonClick }, buttonTitle)) : (React.createElement(kendo_react_buttons_1.DropDownButton, { className: "k-views-dropdown", onItemClick: handleItemClick, popupSettings: { popupClass: 'k-gantt-toolbar' }, textField: "title", items: [
            { title: addChildMessage, direction: 'child' },
            { title: addAboveMessage, direction: 'above' },
            { title: addBelowMessage, direction: 'below' }
        ], text: buttonTitle })));
});
exports.AddButton.displayName = 'KendoReactGanttAddButton';
