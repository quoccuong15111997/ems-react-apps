"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GanttDependency = void 0;
var React = require("react");
var GanttContext_1 = require("./../context/GanttContext");
var utils_1 = require("../utils");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var GanttViewContext_1 = require("../context/GanttViewContext");
/** @hidden */
var GanttDependency = function (props) {
    var dependency = props.dependency;
    var tasksStore = (0, GanttViewContext_1.useGanttViewTasksContext)()[0];
    var element = React.useRef(null);
    var dependencyModelFields = (0, GanttContext_1.useGanttDependencyModelFieldsContext)();
    var rowHeight = (0, GanttContext_1.useGanttRowHeightContext)();
    var _a = React.useState(false), display = _a[0], setDisplay = _a[1];
    var drawCanvas = function () {
        if (element.current === null || tasksStore.current === null) {
            setDisplay(false);
            return;
        }
        var fromId = tasksStore.current[(0, kendo_react_common_1.getter)(dependencyModelFields.fromId)(dependency)];
        var toId = tasksStore.current[(0, kendo_react_common_1.getter)(dependencyModelFields.toId)(dependency)];
        if (!fromId || !toId) {
            setDisplay(false);
            return;
        }
        var fromElement = fromId.element;
        var toElement = toId.element;
        if (!fromElement || !toElement) {
            setDisplay(false);
            return;
        }
        if (display === false) {
            setDisplay(true);
            return; // avoid calculating coordinates twice
        }
        var fromCoordinates = {
            top: fromElement.offsetTop + (fromElement.offsetHeight / 2),
            start: fromElement.offsetLeft,
            end: fromElement.offsetLeft + fromElement.offsetWidth
        };
        var toCoordinates = {
            top: toElement.offsetTop + (toElement.offsetHeight / 2),
            start: toElement.offsetLeft,
            end: toElement.offsetLeft + toElement.offsetWidth
        };
        var type = (0, kendo_react_common_1.getter)(dependencyModelFields.type)(dependency);
        var points = (0, utils_1.dependencyCoordinates)(fromCoordinates, toCoordinates, rowHeight, type);
        if (points && points.length) {
            element.current.setAttribute('points', points.map(function (point) { return "".concat(point.left, ",").concat(point.top); }).join(' '));
        }
    };
    React.useEffect(drawCanvas);
    return (React.createElement("polyline", { ref: element, style: {
            display: display ? undefined : 'none'
        } }));
};
exports.GanttDependency = GanttDependency;
exports.GanttDependency.displayName = 'KendoReactGanttDependency';
