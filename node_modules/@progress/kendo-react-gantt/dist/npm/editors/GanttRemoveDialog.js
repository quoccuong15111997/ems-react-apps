"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GanttRemoveDialog = void 0;
var React = require("react");
var ReactDOM = require("react-dom");
var kendo_react_dialogs_1 = require("@progress/kendo-react-dialogs");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
var kendo_react_common_1 = require("@progress/kendo-react-common");
/* eslint-disable max-len */
/**
 * Represents the default `removeDialog` component rendered by the [KendoReact GanttEditItem component]({% slug api_gantt_ganttedititem  %}).
 */
var GanttRemoveDialog = function (props) {
    // tslint:enable:max-line-length
    var onClose = props.onClose, onCancel = props.onCancel, onConfirm = props.onConfirm, dataItem = props.dataItem;
    var localizationService = (0, kendo_react_intl_1.useLocalization)();
    var localizeMessage = function (message) {
        return localizationService.toLanguageString(message, messages_1.messages[message]);
    };
    var editDeleteMessage = localizeMessage(messages_1.editorDelete);
    var editCancelMessage = localizeMessage(messages_1.editorCancel);
    var editorConfirmationMessage = localizeMessage(messages_1.deleteConfirmation);
    var editorDeleteDialogTitleMessage = localizeMessage(messages_1.deleteDialogTitle);
    var handleClose = React.useCallback(function (_a) {
        var syntheticEvent = _a.syntheticEvent;
        if (!onClose) {
            return;
        }
        onClose.call(undefined, {
            syntheticEvent: syntheticEvent,
            nativeEvent: syntheticEvent && syntheticEvent.nativeEvent,
            dataItem: null
        });
    }, [onClose]);
    var handleCancel = React.useCallback(function (syntheticEvent) {
        if (!onCancel) {
            return;
        }
        onCancel.call(undefined, {
            syntheticEvent: syntheticEvent,
            nativeEvent: syntheticEvent && syntheticEvent.nativeEvent,
            dataItem: null
        });
    }, [onCancel]);
    var handleConfirm = React.useCallback(function (syntheticEvent) {
        if (!onConfirm) {
            return;
        }
        onConfirm.call(undefined, {
            syntheticEvent: syntheticEvent,
            nativeEvent: syntheticEvent && syntheticEvent.nativeEvent,
            dataItem: dataItem
        });
    }, [onConfirm, dataItem]);
    var element = (React.createElement(kendo_react_dialogs_1.Dialog, { title: editorDeleteDialogTitleMessage, onClose: handleClose },
        editorConfirmationMessage,
        React.createElement(kendo_react_dialogs_1.DialogActionsBar, null,
            React.createElement("button", { className: "k-button", onClick: handleCancel }, editCancelMessage),
            React.createElement("button", { className: "k-button", onClick: handleConfirm }, editDeleteMessage))));
    return kendo_react_common_1.canUseDOM
        ? ReactDOM.createPortal(element, document && document.body)
        : null;
};
exports.GanttRemoveDialog = GanttRemoveDialog;
