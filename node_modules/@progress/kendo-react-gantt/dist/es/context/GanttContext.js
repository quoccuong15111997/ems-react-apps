import * as React from 'react';
import { ZonedDate } from '@progress/kendo-date-math';
import { noop } from '@progress/kendo-react-common';
import { DEFAULT_TASK_MODEL_FIELDS, DEFAULT_DEPENDENCY_MODEL_FIELDS } from '../constants';
/** @hidden */
export var GanttTaskDataContext = React.createContext([]);
/** @hidden */
export var useGanttTaskDataContext = function () { return React.useContext(GanttTaskDataContext); };
GanttTaskDataContext.displayName = 'KendoReactGanttTaskDataContext';
/** @hidden */
export var GanttDependencyDataContext = React.createContext([]);
/** @hidden */
export var useGanttDependencyDataContext = function () { return React.useContext(GanttDependencyDataContext); };
GanttDependencyDataContext.displayName = 'KendoReactGanttDependencyDataContext';
/** @hidden */
export var GanttTaskModelFieldsContext = React.createContext(DEFAULT_TASK_MODEL_FIELDS);
/** @hidden */
export var useGanttTaskModelFieldsContext = function () { return React.useContext(GanttTaskModelFieldsContext); };
GanttTaskModelFieldsContext.displayName = 'KendoReactGanttTaskModelFieldsContext';
/** @hidden */
export var GanttDependencyModelFieldsContext = React.createContext(DEFAULT_DEPENDENCY_MODEL_FIELDS);
/** @hidden */
export var useGanttDependencyModelFieldsContext = function () { return React.useContext(GanttDependencyModelFieldsContext); };
GanttDependencyModelFieldsContext.displayName = 'KendoReactGanttDependencyModelFieldsContext';
/** @hidden */
export var GanttPropsContext = React.createContext({});
/** @hidden */
export var useGanttPropsContext = function () { return React.useContext(GanttPropsContext); };
GanttPropsContext.displayName = 'KendoReactGanttPropsContext';
/** @hidden */
export var GanttDateRangeContext = React.createContext({
    start: new Date(),
    end: new Date(),
    zonedStart: ZonedDate.fromLocalDate(new Date()),
    zonedEnd: ZonedDate.fromLocalDate(new Date())
});
/** @hidden */
export var useGanttDateRangeContext = function () { return React.useContext(GanttDateRangeContext); };
GanttDateRangeContext.displayName = 'KendoReactGanttDateRangeContext';
/** @hidden */
export var GanttViewsContext = React.createContext([]);
/** @hidden */
export var useGanttViewsContext = function () { return React.useContext(GanttViewsContext); };
GanttViewsContext.displayName = 'KendoReactGanttViewsContext';
/** @hidden */
export var GanttActiveViewContext = React.createContext(['week', noop]);
/** @hidden */
export var useGanttActiveViewContext = function () { return React.useContext(GanttActiveViewContext); };
GanttActiveViewContext.displayName = 'KendoReactGanttActiveViewContext';
/** @hidden */
export var GanttRowHeightContext = React.createContext(0);
/** @hidden */
export var useGanttRowHeightContext = function () { return React.useContext(GanttRowHeightContext); };
GanttRowHeightContext.displayName = 'KendoReactGanttRowHeightContext';
/** @hidden */
export var GanttToolbarHeightContext = React.createContext(0);
/** @hidden */
export var useGanttToolbarHeightContext = function () { return React.useContext(GanttToolbarHeightContext); };
GanttToolbarHeightContext.displayName = 'KendoReactGanttToolbarHeightContext';
/** @hidden */
export var GanttEventsContext = React.createContext({
    onDataStateChange: noop,
    onSortChange: noop,
    onFilterChange: noop,
    onColumnMenuFilterChange: noop,
    onExpandChange: noop,
    onRowClick: noop,
    onRowDoubleClick: noop,
    onRowContextMenu: noop,
    onColumnResize: noop,
    onColumnReorder: noop,
    onDependencyCreate: noop,
    onKeyDown: noop,
    onSelectionChange: noop,
    onHeaderSelectionChange: noop
});
/** @hidden */
export var useGanttEventsContext = function () { return React.useContext(GanttEventsContext); };
GanttEventsContext.displayName = 'KendoReactGanttEventsContext';
/** @hidden */
export var GanttTaskEventsContext = React.createContext({
    onTaskClick: noop,
    onTaskDoubleClick: noop,
    onTaskContextMenu: noop
});
/** @hidden */
export var useGanttTaskEventsContext = function () { return React.useContext(GanttTaskEventsContext); };
GanttTaskEventsContext.displayName = 'KendoReactGanttTaskEventsContext';
/** @hidden */
export var GanttContext = function (_a) {
    var children = _a.children, taskData = _a.taskData, dependencyData = _a.dependencyData, taskModelFields = _a.taskModelFields, dependencyModelFields = _a.dependencyModelFields, props = _a.props, dateRange = _a.dateRange, views = _a.views, activeView = _a.activeView, rowHeight = _a.rowHeight, toolbarHeight = _a.toolbarHeight, events = _a.events, taskEvents = _a.taskEvents;
    return (React.createElement(GanttPropsContext.Provider, { value: props },
        React.createElement(GanttTaskDataContext.Provider, { value: taskData },
            React.createElement(GanttDependencyDataContext.Provider, { value: dependencyData },
                React.createElement(GanttTaskModelFieldsContext.Provider, { value: taskModelFields },
                    React.createElement(GanttDependencyModelFieldsContext.Provider, { value: dependencyModelFields },
                        React.createElement(GanttDateRangeContext.Provider, { value: dateRange },
                            React.createElement(GanttViewsContext.Provider, { value: views },
                                React.createElement(GanttActiveViewContext.Provider, { value: activeView },
                                    React.createElement(GanttRowHeightContext.Provider, { value: rowHeight },
                                        React.createElement(GanttToolbarHeightContext.Provider, { value: toolbarHeight },
                                            React.createElement(GanttEventsContext.Provider, { value: events },
                                                React.createElement(GanttTaskEventsContext.Provider, { value: taskEvents }, children)))))))))))));
};
GanttContext.displayName = 'KendoReactGanttContext';
