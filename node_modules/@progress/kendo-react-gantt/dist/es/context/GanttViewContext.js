import * as React from 'react';
import { noop } from '@progress/kendo-react-common';
/** @hidden */
export var GanttViewTasksContext = React.createContext([{ current: {} }, noop]);
/** @hidden */
export var useGanttViewTasksContext = function () { return React.useContext(GanttViewTasksContext); };
GanttViewTasksContext.displayName = 'KendoReactGanttViewContext';
/** @hidden */
export var GanttViewTimelineWidthContext = React.createContext(0);
/** @hidden */
export var useGanttViewTimelineWidthContext = function () { return React.useContext(GanttViewTimelineWidthContext); };
GanttViewTimelineWidthContext.displayName = 'KendoReactGanttViewTimelineWidthContext';
/** @hidden */
export var GanttViewDependencyDragContext = React.createContext({
    onDependencyHandlePress: noop,
    onDependencyHandleDrag: noop,
    onDependencyHandleRelease: noop,
    isEnabled: false,
    draggedId: null
});
/** @hidden */
export var useGanttViewDependencyDragContext = function () { return React.useContext(GanttViewDependencyDragContext); };
GanttViewDependencyDragContext.displayName = 'KendoReactGanttViewDependencyDragContext';
/** @hidden */
export var GanttViewContext = function (_a) {
    var children = _a.children, tasks = _a.tasksStore, timelineWidth = _a.timelineWidth, dependencyDrag = _a.dependencyDrag;
    return (React.createElement(GanttViewTasksContext.Provider, { value: tasks },
        React.createElement(GanttViewTimelineWidthContext.Provider, { value: timelineWidth },
            React.createElement(GanttViewDependencyDragContext.Provider, { value: dependencyDrag }, children))));
};
GanttViewContext.displayName = 'KendoReactGanttViewContext';
