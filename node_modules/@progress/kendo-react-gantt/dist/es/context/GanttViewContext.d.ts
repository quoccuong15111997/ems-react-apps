import * as React from 'react';
import { NormalizedDragEvent } from '@progress/kendo-react-common';
import { Store, StoreAction } from '../hooks/useDictionaryStore';
import { GanttTaskHandle } from '../components/GanttTask';
/** @hidden */
export declare type GanttViewTasksContextType = [Store<GanttTaskHandle>, (event: StoreAction<GanttTaskHandle>) => void];
/** @hidden */
export declare const GanttViewTasksContext: React.Context<GanttViewTasksContextType>;
/** @hidden */
export declare const useGanttViewTasksContext: () => GanttViewTasksContextType;
/** @hidden */
export declare type GanttViewTimelineWidthContextType = number;
/** @hidden */
export declare const GanttViewTimelineWidthContext: React.Context<number>;
/** @hidden */
export declare const useGanttViewTimelineWidthContext: () => GanttViewTimelineWidthContextType;
/** @hidden */
export declare type GanttViewDependencyDragContextType = {
    onDependencyHandlePress: (event: NormalizedDragEvent) => void;
    onDependencyHandleDrag: (event: NormalizedDragEvent) => void;
    onDependencyHandleRelease: (event: NormalizedDragEvent) => void;
    isEnabled: boolean;
    draggedId: string | null;
};
/** @hidden */
export declare const GanttViewDependencyDragContext: React.Context<GanttViewDependencyDragContextType>;
/** @hidden */
export declare const useGanttViewDependencyDragContext: () => GanttViewDependencyDragContextType;
/** @hidden */
export interface GanttViewContextProps {
    children?: React.ReactNode;
    tasksStore: [Store<GanttTaskHandle>, (event: StoreAction<GanttTaskHandle>) => void];
    dependencyDrag: GanttViewDependencyDragContextType;
    timelineWidth: number;
}
/** @hidden */
export declare const GanttViewContext: {
    ({ children, tasksStore: tasks, timelineWidth, dependencyDrag }: GanttViewContextProps): JSX.Element;
    displayName: string;
};
