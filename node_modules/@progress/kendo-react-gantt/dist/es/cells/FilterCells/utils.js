import * as messages from '../../messages';
/**
 * @hidden
 */
export var textFilterOperators = [
    { text: messages.filterContainsOperator, operator: 'contains' },
    { text: messages.filterNotContainsOperator, operator: 'doesnotcontain' },
    { text: messages.filterEqOperator, operator: 'eq' },
    { text: messages.filterNotEqOperator, operator: 'neq' },
    { text: messages.filterStartsWithOperator, operator: 'startswith' },
    { text: messages.filterEndsWithOperator, operator: 'endswith' },
    { text: messages.filterIsNullOperator, operator: 'isnull' },
    { text: messages.filterIsNotNullOperator, operator: 'isnotnull' },
    { text: messages.filterIsEmptyOperator, operator: 'isempty' },
    { text: messages.filterIsNotEmptyOperator, operator: 'isnotempty' }
];
/**
 * @hidden
 */
export var numericFilterOperators = [
    { text: messages.filterEqOperator, operator: 'eq' },
    { text: messages.filterNotEqOperator, operator: 'neq' },
    { text: messages.filterGteOperator, operator: 'gte' },
    { text: messages.filterGtOperator, operator: 'gt' },
    { text: messages.filterLteOperator, operator: 'lte' },
    { text: messages.filterLtOperator, operator: 'lt' },
    { text: messages.filterIsNullOperator, operator: 'isnull' },
    { text: messages.filterIsNotNullOperator, operator: 'isnotnull' }
];
/**
 * @hidden
 */
export var dateFilterOperators = [
    { text: messages.filterEqOperator, operator: 'eq' },
    { text: messages.filterNotEqOperator, operator: 'neq' },
    { text: messages.filterAfterOrEqualOperator, operator: 'gte' },
    { text: messages.filterAfterOperator, operator: 'gt' },
    { text: messages.filterBeforeOperator, operator: 'lt' },
    { text: messages.filterBeforeOrEqualOperator, operator: 'lte' },
    { text: messages.filterIsNullOperator, operator: 'isnull' },
    { text: messages.filterIsNotNullOperator, operator: 'isnotnull' }
];
/**
 * @hidden
 */
export var booleanOperator = 'eq';
/**
 * @hidden
 */
export var booleanFilterValues = [
    { text: messages.filterBooleanAll, operator: '' },
    { text: messages.filterIsTrue, operator: true },
    { text: messages.filterIsFalse, operator: false }
];
/**
 * @hidden
 */
export function localizeFilter(localization, operators) {
    return {
        clearButtonTitle: localization.toLanguageString(messages.filterClearButton, messages.messages[messages.filterClearButton]),
        operators: operators.map(function (operator) { return ({
            text: localization.toLanguageString(operator.text, messages.messages[operator.text]),
            operator: operator.operator
        }); })
    };
}
