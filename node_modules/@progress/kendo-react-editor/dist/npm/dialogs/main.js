"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EditorDialogs = void 0;
var insertLink_1 = require("./insertLink");
var insertImage_1 = require("./insertImage");
var viewHtml_1 = require("./viewHtml");
var FindReplace_1 = require("./FindReplace");
/**
 * Represents a wrapping namespace for the dialog components and props of the Editor.
 */
var EditorDialogs;
(function (EditorDialogs) {
    /**
     * The InsertLinkDialog component.
     */
    var InsertLinkDialog = /** @class */ (function (_super) {
        __extends(InsertLinkDialog, _super);
        function InsertLinkDialog() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InsertLinkDialog;
    }(insertLink_1.InsertLinkDialog));
    EditorDialogs.InsertLinkDialog = InsertLinkDialog;
    /**
     * The InsertImageDialog component.
     */
    var InsertImageDialog = /** @class */ (function (_super) {
        __extends(InsertImageDialog, _super);
        function InsertImageDialog() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InsertImageDialog;
    }(insertImage_1.InsertImageDialog));
    EditorDialogs.InsertImageDialog = InsertImageDialog;
    /**
     * The ViewHtmlDialog component.
     */
    var ViewHtmlDialog = /** @class */ (function (_super) {
        __extends(ViewHtmlDialog, _super);
        function ViewHtmlDialog() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ViewHtmlDialog;
    }(viewHtml_1.ViewHtmlDialog));
    EditorDialogs.ViewHtmlDialog = ViewHtmlDialog;
    /**
     * The FindAndReplaceDialog component.
     */
    var FindAndReplaceDialog = /** @class */ (function (_super) {
        __extends(FindAndReplaceDialog, _super);
        function FindAndReplaceDialog() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return FindAndReplaceDialog;
    }(FindReplace_1.FindAndReplaceDialog));
    EditorDialogs.FindAndReplaceDialog = FindAndReplaceDialog;
})(EditorDialogs = exports.EditorDialogs || (exports.EditorDialogs = {}));
