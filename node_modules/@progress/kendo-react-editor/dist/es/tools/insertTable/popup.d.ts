import * as React from 'react';
import * as PropTypes from 'prop-types';
/**
 * @hidden
 */
export declare namespace InsertTablePopupNS {
    /**
     * @hidden
     */
    interface InsertTablePopupProps {
        /**
         * The element which will be used as an anchor.
         */
        anchor: HTMLButtonElement | null;
        /**
         * Controls the visibility of the Popup.
         */
        show: boolean;
        /**
         * The `Create a table` message.
         */
        createTableMessage: string;
        /**
         * The `Create a {0} x {1} table` message.
         */
        createTableHintMessage: string;
        /**
         * The number of rows.
         */
        rows?: number;
        /**
         * The number of columns.
         */
        columns?: number;
        /**
         * The `dir` HTML attribute.
         */
        dir?: string;
        /**
         * The `close` event which will be triggered when the `InsertTablePopup` is about to be closed.
         */
        onClose: () => void;
        /**
         * The `onTableInsert` event which will be triggered when a cell in `InsertTablePopup` is clicked.
         */
        onTableInsert: (row: number, col: number) => void;
    }
    /**
     * @hidden
     */
    class InsertTablePopup extends React.Component<InsertTablePopupProps> {
        /**
         * @hidden
         */
        static propTypes: {
            show: PropTypes.Validator<boolean>;
            createTableMessage: PropTypes.Validator<string>;
            createTableHintMessage: PropTypes.Validator<string>;
            onClose: PropTypes.Validator<(...args: any[]) => any>;
            onTableInsert: PropTypes.Validator<(...args: any[]) => any>;
            anchor: PropTypes.Requireable<any>;
            rows: PropTypes.Requireable<number>;
            columns: PropTypes.Requireable<number>;
            dir: PropTypes.Requireable<string>;
        };
        /**
         * @hidden
         */
        static defaultProps: {
            rows: number;
            columns: number;
        };
        private pointerdown;
        /**
         * @hidden
         */
        componentDidUpdate(prevProps: InsertTablePopupProps): void;
        /**
         * @hidden
         */
        componentDidMount(): void;
        /**
         * @hidden
         */
        componentWillUnmount(): void;
        /**
         * @hidden
         */
        render(): JSX.Element;
        private onWindowDown;
        private onPointerDown;
    }
}
