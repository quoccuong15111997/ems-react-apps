import * as React from 'react';
import * as PropTypes from 'prop-types';
import { ActionSheetItemProps } from './interfaces/ActionSheetItemProps';
/**
 * The props of the ActionSheet component.
 */
export interface ActionSheetProps {
    /**
     * The collection of items that will be rendered in the ActionSheet.
     */
    items?: ActionSheetItemProps[];
    /**
     * Specifies the text that is rendered under the title.
     */
    subTitle?: string;
    /**
     * Specifies the text that is rendered as title.
     */
    title?: string;
    /**
     * **Deprecated**. Fires when the modal overlay is clicked. Use `onClose` event instead.
     *
     * @deprecated
     */
    onOverlayClick?: (event: React.SyntheticEvent) => void;
    /**
     * Fires when the modal overlay is clicked.
     */
    onClose?: (event: React.SyntheticEvent) => void;
    /**
     * Fires when an ActionSheet item is clicked.
     */
    onItemSelect?: (event: {
        syntheticEvent: React.SyntheticEvent;
        title?: string;
        item?: any;
    }) => void;
    /**
     * **Deprecated**. Fires when an ActionSheet item is clicked. Use `onItemSelect` event instead.
     *
     * @deprecated
     */
    onItemClick?: (event: {
        syntheticEvent: React.SyntheticEvent;
        title?: string;
        item?: any;
    }) => void;
    /**
     * Represents the children that are passed to the ActionSheet.
     */
    children?: any;
    /**
     * Specifies the `tabIndex` of the ActionSheet.
     */
    tabIndex?: number;
    /**
     * Specifies if the ActionSheet can be navigatable with keyboard.
     * Defaults to `true`.
     */
    navigatable: boolean;
    /**
     * Specifies the selectors of the navigatable elements inside the templates of the ActionSheet.
     */
    navigatableElements: string[];
    /**
     * Controls the popup animation. By default, the open and close animations are disabled.
     */
    animation?: boolean;
    /**
     * @hidden
     */
    animationStyles?: React.CSSProperties;
    /**
     * Specifies the duration of the transition for the entering and closing Animation. Defaults to `300ms`.
     */
    animationDuration?: number;
    /**
     * The CSS classes that will be rendered on the inner ActionSheet element.
     */
    className?: string;
    /**
     * Specifies the state of the ActionSheet.
     */
    expand?: boolean;
}
/**
 * @hidden
 */
export interface ActionSheetState {
    show?: boolean;
    slide?: boolean;
}
/**
 * Represents the [KendoReact ActionSheet]({% slug overview_actionsheet %}) component.
 */
export declare class ActionSheet extends React.Component<ActionSheetProps, ActionSheetState> {
    /** @hidden */
    static displayName: string;
    /** @hidden */
    static propTypes: {
        items: PropTypes.Requireable<any[]>;
        subTitle: PropTypes.Requireable<string>;
        title: PropTypes.Requireable<string>;
        navigatable: PropTypes.Requireable<boolean>;
        navigatableElements: PropTypes.Requireable<any[]>;
    };
    /** @hidden */
    static defaultProps: {
        navigatable: boolean;
        navigatableElements: never[];
    };
    private actionSheetRef;
    private actionSheetTitleClass;
    private ariaLabeledBy;
    private navigation?;
    private animationDuration;
    private bottomPosition;
    /** @hidden */
    constructor(props: ActionSheetProps);
    /** @hidden */
    componentDidMount(): void;
    /** @hidden */
    componentDidUpdate(_prevProps: Readonly<ActionSheetProps>, prevState: Readonly<ActionSheetState>): void;
    /** @hidden */
    render(): JSX.Element;
    private handleKeyDown;
    private onTab;
    private handleOverlayClick;
    private handleItemClick;
    private onEnter;
    private onEscape;
    private hideActionSheet;
    private children;
}
