"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextMenu = void 0;
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_react_popup_1 = require("@progress/kendo-react-popup");
var Menu_1 = require("../menu/components/Menu");
/**
 * Represents the [KendoReact ContextMenu component]({% slug overview_contextmenu %}).
 */
var ContextMenu = function (props) {
    var menuRef = React.useRef(null);
    React.useEffect(function () {
        if (props.show) {
            setTimeout(function () {
                var element = menuRef.current && menuRef.current.element;
                var menuItem = element && element.querySelector('.k-menu-item');
                if (menuItem && menuItem !== menuItem.ownerDocument.activeElement) {
                    menuItem.focus();
                }
            });
        }
    }, [props.show]);
    return (React.createElement(kendo_react_popup_1.Popup, { show: props.show, offset: props.offset, popupClass: 'k-menu-popup', animate: false },
        React.createElement(Menu_1.Menu, __assign({ vertical: true }, props, { ref: menuRef, className: (0, kendo_react_common_1.classNames)('k-context-menu', props.className), onClose: props.onClose, role: 'menu' }), props.children)));
};
exports.ContextMenu = ContextMenu;
exports.ContextMenu.displayName = 'KendoReactContextMenu';
