import * as React from 'react';
import { CustomComponent } from '@progress/kendo-react-common';
import { FormProps as KendoFormProps, FormElementProps as KendoFormElementProps } from '@progress/kendo-react-form';
import { SortDescriptor, FilterDescriptor } from '@progress/kendo-data-query';
import { PivotGridAxis, PivotGridField } from '@progress/kendo-pivotgrid-common';
import { PivotGridConfiguratorEditorProps } from './ConfiguratorEditor';
import { PivotGridAxisFilterFieldsExpandChangeEvent, PivotGridAxisFilterFieldExpandEvent } from './AxisFilterFieldsEditor';
import { PivotGridConfiguratorAxesChangeEvent, PivotGridConfiguratorSortChangeEvent, PivotGridConfiguratorFilterChangeEvent } from '../models';
import { PivotGridFieldsEditorFieldExpandEvent, PivotGridFieldsEditorFieldCheckEvent } from './FieldsEditor';
/**
 * Represents the props of the [KendoReact PivotGridConfigurator component]({% slug api_pivotgrid_pivotgridconfigurator %}).
 */
export interface PivotGridConfiguratorProps {
    /**
     * Sets the `className` property of the top-most element of the PivotGridConfigurator in addition to the default `k-pivotgrid-configurator` class.
     */
    className?: string;
    /**
     * Sets the `id` property of the top-most element of the PivotGridConfigurator.
     */
    id?: string;
    /**
     * Sets the `tabIndex` property of the top-most element of the PivotGridConfigurator.
     */
    tabIndex?: number;
    /**
     * Sets the `style` property of the top-most element of the PivotGridConfigurator.
     */
    style?: React.CSSProperties;
    /**
     * Renders the PivotGridConfigurator in `horizontal` orientation.
     */
    horizontal?: boolean;
    /**
     * Sets the `data` of the PivotGridConfigurator.
     *
     * The `data` represents all fields available in the configurator.
     */
    data?: PivotGridField[];
    /**
     * The configuration of the `column` axes.
     */
    columnAxes?: PivotGridAxis[];
    /**
     * A callback, fired whenever the `columnAxes` property should change.
     */
    onColumnAxesChange?: (event: PivotGridConfiguratorAxesChangeEvent) => void;
    /**
     * The configuration of the `row` axes.
     */
    rowAxes?: PivotGridAxis[];
    /**
     * A callback, fired whenever the `rowAxes` property should change.
     */
    onRowAxesChange?: (event: PivotGridConfiguratorAxesChangeEvent) => void;
    /**
     * The configuration of the `measure` axes.
     */
    measureAxes?: PivotGridAxis[];
    /**
     * A callback, fired whenever the `measureAxes` property should change.
     */
    onMeasureAxesChange?: (event: PivotGridConfiguratorAxesChangeEvent) => void;
    /**
     * The descriptors by which the data is sorted.
     */
    sort?: SortDescriptor[];
    /**
     * A callback, fired whenever the `sort` property should change.
     */
    onSortChange?: (event: PivotGridConfiguratorSortChangeEvent) => void;
    /**
     * The descriptors by which the data is filtered.
     */
    filter?: FilterDescriptor[];
    /**
     * A callback, fired whenever the `filter` property should change.
     */
    onFilterChange?: (event: PivotGridConfiguratorFilterChangeEvent) => void;
    /**
     * A callback, fired whenever a `field` is expanded.
     */
    onFieldsEditorFieldExpand?: (event: PivotGridFieldsEditorFieldExpandEvent) => void;
    /**
     * A callback, fired whenever a `field` is checked.
     */
    onFieldsEditorFieldCheck?: (event: PivotGridFieldsEditorFieldCheckEvent) => void;
    /**
     * A callback, fired whenever an `AxisFilterField` is expanded.
     */
    onAxisFilterFieldExpand?: (event?: PivotGridAxisFilterFieldExpandEvent) => void;
    /**
     * A callback, fired whenever the `expanded` state of the `AxisFilterFields` is changed.
     */
    onAxisFilterFieldsExpandChange?: (event?: PivotGridAxisFilterFieldsExpandChangeEvent) => void;
    /**
     * Overrides the default `editor` component.
     *
     * The default component is: [PivotGridConfiguratorEditor]({% slug api_pivotgrid_pivotgridconfiguratoreditor %}).
     */
    editor?: CustomComponent<PivotGridConfiguratorEditorProps>;
    /**
     * Overrides the default `form` component.
     *
     * The default component is: [KendoReactForm]({% slug api_form_form %}).
     */
    form?: CustomComponent<KendoFormProps>;
    /**
     * Overrides the default `formElement` component.
     *
     * The default component is: [KendoReactFormElement]({% slug api_form_formelement %}).
     */
    formElement?: CustomComponent<KendoFormElementProps>;
}
/**
 * Represents the object which is passed to the [`ref`](https://reactjs.org/docs/refs-and-the-dom.html) callback of the PivotGridConfigurator component.
 */
export interface PivotGridConfiguratorHandle {
    props: PivotGridConfiguratorProps;
    element: HTMLDivElement | null;
}
/**
 * Represents the [KendoReact PivotGridConfigurator component]({% slug api_pivotgrid_pivotgridconfiguratorprops %}).
 */
export declare const PivotGridConfigurator: React.ForwardRefExoticComponent<PivotGridConfiguratorProps & React.RefAttributes<PivotGridConfiguratorHandle | null>>;
