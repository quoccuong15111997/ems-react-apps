var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { classNames, useMouse } from '@progress/kendo-react-common';
;
/**
 * Represents the [KendoReact PivotGridCell component]({% slug api_pivotgrid_pivotgridcellprops %}).
 */
export var PivotGridCell = React.forwardRef(function (props, ref) {
    var target = React.useRef(null);
    var element = React.useRef(null);
    React.useImperativeHandle(target, function () { return ({
        element: element.current,
        props: props
    }); });
    React.useImperativeHandle(ref, function () { return target.current; });
    var mouseProps = useMouse(props, target);
    return (React.createElement("td", __assign({ ref: element }, mouseProps, { id: props.id, style: props.style, tabIndex: props.tabIndex, role: props.role, "aria-describedby": props.ariaDescribedby, className: classNames('k-pivotgrid-cell', {
            'k-pivotgrid-header-total': props.total
        }, props.className) }), props.children));
});
PivotGridCell.displayName = 'KendoReactPivotGridCell';
