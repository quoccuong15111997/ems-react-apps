var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import { classNames, useMouse, useCustomComponent, IconWrap } from '@progress/kendo-react-common';
import { chevronUpIcon, chevronDownIcon } from '@progress/kendo-svg-icons';
;
/**
 * Represents the [KendoReact PivotGridHeaderCell component]({% slug api_pivotgrid_pivotgridheadercellprops %}).
 */
export var PivotGridHeaderCell = React.forwardRef(function (props, ref) {
    var target = React.useRef(null);
    var element = React.useRef(null);
    React.useImperativeHandle(target, function () { return ({
        element: element.current,
        props: props
    }); });
    React.useImperativeHandle(ref, function () { return target.current; });
    var _a = useCustomComponent(props.icon || defaultProps.icon), IconComponent = _a[0], IconProps = _a[1];
    var mouseProps = useMouse(props, target);
    var handleIconClick = function (event) {
        if (props.onIconClick) {
            props.onIconClick.call(undefined, {
                syntheticEvent: event.syntheticEvent,
                target: target.current
            });
        }
    };
    return (React.createElement("th", __assign({ ref: element }, mouseProps, { colSpan: props.colSpan, rowSpan: props.rowSpan, id: props.id, style: props.style, tabIndex: props.tabIndex, role: props.role }, (props.expandable ? { 'aria-expanded': props.expanded } : {}), { className: classNames('k-pivotgrid-cell', {
            'k-pivotgrid-header-total': props.total,
            'k-pivotgrid-header-root': props.root,
            'k-pivotgrid-expanded': props.expanded,
            'k-first': props.first
        }, props.className) }),
        props.expandable && (React.createElement(IconComponent, __assign({}, IconProps, { onClick: handleIconClick, name: "chevron-".concat(props.expanded ? 'up' : 'down'), "aria-hidden": true, icon: props.expanded ? chevronUpIcon : chevronDownIcon }))),
        props.children));
});
var defaultProps = {
    icon: IconWrap
};
PivotGridHeaderCell.defaultProps = defaultProps;
PivotGridHeaderCell.displayName = 'KendoReactPivotGridHeaderCell';
