import { AxisDescriptor, PivotDataItem, PivotGridField, Tuple } from '@progress/kendo-pivotgrid-common';
/**
 * Generates suitable data for Charting visualization.
 *
 * @param rows - The PivotGrid's rows prop.
 * @param columns - The PivotGrid's columns prop.
 * @param data - The PivotGrid's data prop.
 * @returns - Suitable data for Charting visualization.
 */
export declare const dataCells: (rows?: Tuple[], columns?: Tuple[], data?: PivotDataItem[]) => {
    row: string[];
    cells: PivotDataItem[];
}[];
/**
 * @hidden
 */
export declare const recursiveMap: <I extends unknown, O extends unknown>(nodes?: I[], map?: {
    [key: string]: Function;
}, parent?: null) => O[];
/**
 * @hidden
 */
export declare const flatMap: <T extends unknown>(nodes?: T[]) => T[];
/**
 * @hidden
 */
export declare const extractDefaultFields: (columns?: AxisDescriptor[]) => unknown[];
/**
 * @hidden
 */
export declare const generateKey: (args?: string[]) => string;
/**
 * @hidden
 */
export declare const generateDataKey: (rows: any, columns: any) => string;
/**
 * @hidden
 */
export declare const findFilter: (filter: any[] | undefined, member: any, operator?: any) => any;
/**
 * @hidden
 */
export declare const findFilters: (filter: any[] | undefined, member: any, operator?: any) => any;
/**
 * @hidden
 */
export declare const compareFields: (a: PivotGridField, b: PivotGridField) => boolean;
