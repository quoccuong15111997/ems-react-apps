var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { headersReducer } from '@progress/kendo-pivotgrid-common';
export { HEADERS_ACTION } from '@progress/kendo-pivotgrid-common';
/**
 * @hidden
 */
export var useHeaders = function (prop, tree, onChange) {
    var handleHeadersAction = function (action, event) {
        var newHeaders = headersReducer(prop, __assign(__assign({}, action), { tree: tree }));
        if (onChange) {
            onChange(newHeaders, event);
        }
    };
    return [prop, handleHeadersAction];
};
