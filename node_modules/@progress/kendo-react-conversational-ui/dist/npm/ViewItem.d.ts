import { Message, User, Action, Attachment, AttachmentLayout } from './main';
/**
 * @hidden
 */
export interface Selectable {
    selectionIndex: number;
}
/**
 * Represents the data item of a single `Message`.
 */
export interface MessageModel extends Message, Selectable {
}
/**
 * @hidden
 */
export interface MessageGroup {
    type: 'message-group';
    messages: MessageModel[];
    author: User;
    timestamp: Date;
    trackBy: any;
}
/**
 * @hidden
 */
export interface AttachmentGroup extends Selectable {
    type: 'attachment-group';
    attachments: Attachment[];
    attachmentLayout: AttachmentLayout;
    timestamp: Date;
    trackBy: any;
}
/**
 * @hidden
 */
export interface ActionGroup extends Selectable {
    type: 'action-group';
    actions?: Action[];
    timestamp: Date;
    trackBy: any;
}
/**
 * @hidden
 */
export interface DateMarker {
    type: 'date-marker';
    timestamp: Date;
    trackBy: any;
}
/**
 * @hidden
 */
export declare type ViewItem = MessageGroup | AttachmentGroup | ActionGroup | DateMarker;
/**
 * @hidden
 */
export declare const convertMsgsToViewItems: (messages: MessageModel[]) => ViewItem[];
