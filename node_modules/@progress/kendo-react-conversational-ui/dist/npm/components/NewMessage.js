"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var kendo_react_common_1 = require("@progress/kendo-react-common");
var React = require("react");
var Toolbar_1 = require("./Toolbar");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("../messages");
/**
 * @hidden
 */
var NewMessage = /** @class */ (function (_super) {
    __extends(NewMessage, _super);
    function NewMessage() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = { focused: false };
        _this.inputEl = null;
        _this.onInputKeyDown = function (event) {
            if (event.keyCode === kendo_react_common_1.Keys.enter) {
                _this.sendMessage(event);
            }
        };
        _this.sendMessage = function (event) {
            if (_this.props.onMessageSend && _this.inputEl !== null) {
                var messageText = _this.inputEl.value;
                if (messageText) {
                    var message = {
                        author: _this.props.user,
                        text: messageText,
                        timestamp: new Date()
                    };
                    _this.props.onMessageSend(message, event);
                }
            }
            if (_this.inputEl !== null) {
                _this.inputEl.value = null;
            }
        };
        return _this;
    }
    NewMessage.prototype.render = function () {
        var _this = this;
        var localizationService = (0, kendo_react_intl_1.provideLocalizationService)(this);
        var messageInput = (React.createElement("input", { type: "text", className: this.getClassNames(), placeholder: this.props.placeholder, onKeyDown: this.onInputKeyDown, onFocus: function () { return _this.setState({ focused: true }); }, onBlur: function () { return _this.setState({ focused: false }); }, ref: function (el) { return _this.inputEl = el; }, "aria-label": localizationService.toLanguageString(messages_1.newMessageMessageInput, messages_1.messages[messages_1.newMessageMessageInput]) }));
        var sendButton = (React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", themeColor: "base", rounded: null, className: "k-icon-button k-button-send", onClick: this.sendMessage, "aria-label": localizationService.toLanguageString(messages_1.newMessageSendButton, messages_1.messages[messages_1.newMessageSendButton]), dir: this.props.isDirectionRightToLeft ? 'rtl' : undefined },
            React.createElement("span", { className: "k-button-icon k-icon" },
                React.createElement("svg", { version: "1.1", xmlns: "http://www.w3.org/2000/svg", x: "0px", y: "0px", viewBox: "0 0 16 16" },
                    React.createElement("path", { d: NewMessage.buttonIconPath })))));
        var toolbarButton = (React.createElement(kendo_react_buttons_1.Button, { fillMode: "flat", themeColor: "base", rounded: null, className: "k-icon-button k-button-toggle", onClick: function (event) { return _this.props.onToolbarActionButtonClick(!_this.props.showToolbar, event); }, "aria-label": localizationService.toLanguageString(messages_1.newMessageOptionsButton, messages_1.messages[messages_1.newMessageOptionsButton]) },
            React.createElement("span", { className: "k-button-icon k-icon" },
                React.createElement("svg", { version: "1.1", id: "Layer_1", x: "0px", y: "0px", viewBox: "0 0 512 512" },
                    React.createElement("g", null,
                        React.createElement("path", { d: "M128,240c0-26.4-21.6-48-48-48s-48,21.6-48,48s21.6,48,48,48S128,266.4,128,240z" }),
                        React.createElement("path", { d: "M192,240c0,26.4,21.6,48,48,48c26.4,0,48-21.6,48-48s-21.6-48-48-48C213.6,192,192,213.6,192,240z" }),
                        React.createElement("path", { d: "M352,240c0,26.4,21.6,48,48,48c26.4,0,48-21.6,48-48s-21.6-48-48-48C373.6,192,352,213.6,352,240z" }))))));
        return (React.createElement(React.Fragment, null,
            React.createElement("div", { className: "k-message-box k-textbox k-input k-input-md k-rounded-md k-input-solid" }, this.props.MessageBox ?
                React.createElement(this.props.MessageBox, { messageInput: messageInput, sendButton: sendButton, toolbarButton: toolbarButton }) :
                React.createElement(React.Fragment, null,
                    messageInput,
                    this.props.toolbar && toolbarButton,
                    sendButton)),
            this.props.showToolbar && React.createElement(Toolbar_1.default, null, this.props.toolbar)));
    };
    NewMessage.prototype.focusInput = function () {
        if (this.inputEl !== null) {
            this.inputEl.focus();
        }
    };
    NewMessage.prototype.getClassNames = function () {
        return (0, kendo_react_common_1.classNames)({ 'k-focus': this.state.focused }, 'k-input k-input k-input-md k-input-solid k-input-solid-base');
    };
    /* eslint-disable-next-line max-len */
    NewMessage.buttonIconPath = 'M0,14.3c-0.1,0.6,0.3,0.8,0.8,0.6l14.8-6.5c0.5-0.2,0.5-0.6,0-0.8L0.8,1.1C0.3,0.9-0.1,1.1,0,1.7l0.7,4.2C0.8,6.5,1.4,7,1.9,7.1l8.8,0.8c0.6,0.1,0.6,0.1,0,0.2L1.9,8.9C1.4,9,0.8,9.5,0.7,10.1L0,14.3z';
    return NewMessage;
}(React.Component));
exports.default = NewMessage;
