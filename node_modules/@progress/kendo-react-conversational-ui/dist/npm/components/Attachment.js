"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var FocusableUponSelection_1 = require("./base/FocusableUponSelection");
/**
 * @hidden
 */
var Attachment = /** @class */ (function (_super) {
    __extends(Attachment, _super);
    function Attachment() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Attachment.prototype.render = function () {
        var _this = this;
        return (React.createElement("div", { className: this.getClassNames(), tabIndex: this.getTabIndexValue(), onClick: this.props.onClick, ref: function (el) { return _this.elementToFocus = el; } }, this.props.template ?
            React.createElement(this.props.template, { item: this.props.item }) :
            (React.createElement("div", { className: "k-card" },
                React.createElement("div", { className: "k-card-body" },
                    this.getTitleView(),
                    this.getSubtitleView(),
                    this.getContentView())))));
    };
    Attachment.prototype.getTabIndexValue = function () {
        if (this.props.tabbable === undefined) {
            return undefined;
        }
        else if (this.props.tabbable) {
            return 0;
        }
        else {
            return -1;
        }
    };
    Attachment.prototype.getClassNames = function () {
        return (0, kendo_react_common_1.classNames)({ 'k-selected': this.props.selected }, { 'k-focus': this.props.selected }, 'k-card-wrap', { 'k-first': this.props.isFirstItemInGroup }, { 'k-last': this.props.isLastItemInGroup });
    };
    Attachment.prototype.getTitleView = function () {
        return this.props.item.title ?
            React.createElement("h5", { className: "k-card-title" }, this.props.item.title) :
            null;
    };
    Attachment.prototype.getSubtitleView = function () {
        return this.props.item.subtitle ?
            React.createElement("h6", { className: "k-card-subtitle" }, this.props.item.subtitle) :
            null;
    };
    Attachment.prototype.getContentView = function () {
        return this.props.item.contentType.indexOf('image/') === 0 ?
            React.createElement("img", { src: this.props.item.content }) :
            this.props.item.content;
    };
    return Attachment;
}(FocusableUponSelection_1.FocusableUponSelection));
exports.default = Attachment;
