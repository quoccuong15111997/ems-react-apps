var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { Button } from '@progress/kendo-react-buttons';
import { dispatchEvent } from '@progress/kendo-react-common';
// tslint:enable:max-line-length
/**
 * Represents a Hero Card component. Hero cards host a single large image and action buttons with text content.
 */
var HeroCard = /** @class */ (function (_super) {
    __extends(HeroCard, _super);
    function HeroCard() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onBtnClick = function (action, event) {
            dispatchEvent(_this.props.onActionExecute, event, _this, { action: action });
        };
        return _this;
    }
    /**
     * @hidden
     */
    HeroCard.prototype.render = function () {
        return (React.createElement("div", { className: "k-card" },
            React.createElement("img", { className: "k-card-image", src: this.props.imageUrl, style: { maxWidth: this.props.imageMaxWidth } }),
            React.createElement("div", { className: "k-card-body" },
                this.getTitleView(),
                this.getSubtitleView()),
            React.createElement("div", { className: "k-card-actions k-card-actions-vertical" }, this.getActionsView())));
    };
    HeroCard.prototype.getActionsView = function () {
        var _this = this;
        return this.props.actions.map(function (action, index) { return (React.createElement("span", { className: "k-card-action", key: index },
            React.createElement(Button, { fillMode: "flat", onClick: function (e) { return _this.onBtnClick(action, e); } }, action.title))); });
    };
    HeroCard.prototype.getTitleView = function () {
        var result = null;
        if (this.props.title) {
            result = (React.createElement("h5", { className: "k-card-title" }, this.props.title));
        }
        return result;
    };
    HeroCard.prototype.getSubtitleView = function () {
        var result = null;
        if (this.props.subtitle) {
            result = (React.createElement("h6", { className: "k-card-subtitle" }, this.props.subtitle));
        }
        return result;
    };
    return HeroCard;
}(React.Component));
export { HeroCard };
