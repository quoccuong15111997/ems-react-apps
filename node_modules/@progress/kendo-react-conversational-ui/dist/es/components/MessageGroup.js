var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { classNames } from '@progress/kendo-react-common';
import Attachment from './Attachment';
import { isAuthor } from './../utils';
import { provideLocalizationService } from '@progress/kendo-react-intl';
import { messages, avatarAlt } from '../messages';
/**
 * @hidden
 */
var MessageGroup = /** @class */ (function (_super) {
    __extends(MessageGroup, _super);
    function MessageGroup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MessageGroup.prototype.render = function () {
        var _a = this.props.group.author, avatarUrl = _a.avatarUrl, avatarAltText = _a.avatarAltText, name = _a.name;
        var localizationService = provideLocalizationService(this);
        return (React.createElement("div", { className: this.getMsgGroupClassNames() },
            avatarUrl && (React.createElement("img", { src: avatarUrl, className: "k-avatar", alt: avatarAltText !== undefined
                    ? avatarAltText
                    : localizationService.toLanguageString(avatarAlt, messages[avatarAlt]) })),
            name && (React.createElement("p", { className: "k-author" }, name)),
            this.getGroupMessagesView()));
    };
    MessageGroup.prototype.getMsgGroupClassNames = function () {
        return classNames('k-message-group', {
            'k-no-avatar': !this.props.group.author.avatarUrl,
            'k-alt': isAuthor(this.props.user, this.props.group.messages[0])
        });
    };
    MessageGroup.prototype.getGroupMessagesView = function () {
        var _this = this;
        var lastItemIndex = this.props.group.messages.length - 1;
        return this.props.group.messages.map(function (msg, index) {
            var result = [(React.createElement(_this.props.message, { item: msg, template: _this.props.itemTemplate, selected: msg.selectionIndex === _this.props.selectedItemIndex, onRequestSelection: _this.props.onRequestSelection, tabIndex: index === lastItemIndex && _this.props.isLastGroup ? 0 : -1, isFirstItemInGroup: index === 0, isLastItemInGroup: index === lastItemIndex, isOnlyItemInGroup: lastItemIndex === 0, key: index }))];
            if (msg.attachments && msg.attachments.length === 1) {
                result.push(React.createElement(Attachment, { item: msg.attachments[0], template: _this.props.attachmentTemplate, selected: false, key: "att-".concat(index) }));
            }
            return result;
        });
    };
    return MessageGroup;
}(React.Component));
export default MessageGroup;
