import { hasRelativeStackingContext } from '@progress/kendo-react-common';
/**
 * @hidden
 */
var find = function (data, comparer) {
    // required for IE11
    for (var i = 0; i < data.length; i++) {
        if (comparer(data[i])) {
            return data[i];
        }
    }
};
/**
 * @hidden
 */
var findIndex = function (data, comparer) {
    // required for IE11
    for (var i = 0; i < data.length; i++) {
        if (comparer(data[i])) {
            return i;
        }
    }
    return -1;
};
/**
 * @hidden
 */
var toClassList = function (classNames) { return String(classNames).trim().split(' '); };
/**
 * @hidden
 */
var hasClasses = function (element, classNames) {
    var namesList = toClassList(classNames);
    return Boolean(toClassList(element.className).find(function (className) { return namesList.indexOf(className) >= 0; }));
};
/**
 * @hidden
 */
var FOCUSABLE_REGEX = /^(?:a|input|select|option|textarea|button|object)$/i;
/**
 * @hidden
 */
var isFocusable = function (element) {
    if (element.tagName) {
        var tagName = element.tagName.toLowerCase();
        var tabIndex = element.getAttribute('tabIndex');
        var skipTab = tabIndex === '-1';
        var focusable = tabIndex !== null && !skipTab;
        if (FOCUSABLE_REGEX.test(tagName)) {
            focusable = !element.disabled && !skipTab;
        }
        return focusable;
    }
    return false;
};
/**
 * @hidden
 */
var closest = function (node, predicate) {
    while (node && !predicate(node)) {
        node = node.parentNode;
    }
    return node;
};
/**
 * @hidden
 */
var HAS_RELATIVE_STACKING_CONTEXT = hasRelativeStackingContext();
/**
 * @hidden
 */
var relativeContextElement = function (element) {
    if (!element || !HAS_RELATIVE_STACKING_CONTEXT) {
        return null;
    }
    var node = element.parentElement;
    while (node) {
        if (window.getComputedStyle(node).transform !== 'none') {
            return node;
        }
        node = node.parentElement;
    }
};
export { find, findIndex, toClassList, hasClasses, isFocusable, closest, relativeContextElement };
