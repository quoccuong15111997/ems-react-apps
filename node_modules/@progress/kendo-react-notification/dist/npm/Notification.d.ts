import * as React from 'react';
import * as PropTypes from 'prop-types';
/**
 * The `close` event object of the Notification.
 */
export interface NotificationEvent {
    /**
     * A native DOM event.
     */
    nativeEvent: Event;
    /**
     * A React [`SyntheticEvent`](https://reactjs.org/docs/events.html).
     */
    syntheticEvent: React.SyntheticEvent<HTMLElement>;
    /**
     * An event target.
     */
    target: Notification;
}
/**
 * Represents the props of the [KendoReact Notification component]({% slug overview_notification %}).
 */
export interface NotificationProps {
    /**
     * @hidden
     */
    children?: React.ReactNode;
    /**
     * Sets additional classes to the Notification.
     */
    className?: string;
    /**
     * Specifies if the Notification will require a user action to hide.
     * If the property is set to `true`, the Notification renders a **Close** button.
     * If the property is set to `object`, the Notification renders a **Close** button
     * by extending the default props with the provided object.
     *
     * The possible values are:
     * * (Default) `false`
     * * `true`
     * * `{ title: 'Hide', ... }`
     */
    closable?: boolean | React.DetailedHTMLProps<React.AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>;
    /**
     * The `dir` HTML attribute.
     */
    dir?: string;
    /**
     * The styles that are applied to the Notification.
     */
    style?: React.CSSProperties;
    /**
     * The Notification type
     * ([see example]({% slug types_notification %})).
     *
     * The possible values are:
     * * `style: 'none'|'success'|'error'|'warning'|'info'`. Defaults to `none`.
     * * `icon?: 'true'|'false'`. Defaults to `true`.
     */
    type?: {
        style?: 'none' | 'success' | 'error' | 'warning' | 'info';
        icon?: boolean;
    };
    /**
     * The `close` event which will be triggered when the **Close** button is clicked.
     */
    onClose?: (event: NotificationEvent) => void;
}
/**
 * Represents the [KendoReact Notification component]({% slug overview_notification %}).
 */
export declare class Notification extends React.Component<NotificationProps> {
    /**
     * @hidden
     */
    static propTypes: {
        className: PropTypes.Requireable<string>;
        closable: PropTypes.Requireable<NonNullable<boolean | object | null | undefined>>;
        dir: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        type: PropTypes.Requireable<PropTypes.InferProps<{
            style: PropTypes.Requireable<string>;
            icon: PropTypes.Requireable<boolean>;
        }>>;
        onClose: PropTypes.Requireable<(...args: any[]) => any>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        closable: boolean;
        type: {
            style: string;
            icon: boolean;
        };
    };
    constructor(props: NotificationProps);
    /**
     * @hidden
     */
    render(): JSX.Element;
}
