var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import { classNames, dispatchEvent } from '@progress/kendo-react-common';
import { validatePackage } from '@progress/kendo-react-common';
import { packageMetadata } from './package-metadata';
var ListView = /** @class */ (function (_super) {
    __extends(ListView, _super);
    function ListView(props) {
        var _this = _super.call(this, props) || this;
        _this.onScroll = function (event) { return dispatchEvent(_this.props.onScroll, event, _this, undefined); };
        validatePackage(packageMetadata);
        return _this;
    }
    /**
     * @hidden
     */
    ListView.prototype.render = function () {
        var _a = this.props, _b = _a.data, data = _b === void 0 ? [] : _b, Item = _a.item;
        return (React.createElement("div", { className: classNames('k-listview k-d-flex', this.props.className), style: this.props.style },
            this.props.header ? React.createElement(this.props.header, null) : null,
            React.createElement("div", { role: "list", className: "k-listview-content", onScroll: this.onScroll }, Item && data.map(function (dataItem, index) {
                return React.createElement(Item, { dataItem: dataItem, index: index, key: index });
            })),
            this.props.footer ? React.createElement(this.props.footer, null) : null));
    };
    return ListView;
}(React.PureComponent));
export { ListView };
