import { PasteCleanupSettings } from './types/paste-cleanup-settings';
/**
 * Removes the invalid HTML. Use it as a first step for cleaning the HTML.
 */
export declare const sanitize: (html: string) => string;
/**
 * Removes comments in HTML.
 */
export declare const removeComments: (html: string) => string;
/**
 * Removes the specified tag(s).
 */
export declare const removeTag: (html: string, tagPattern: string) => string;
/**
 * Removes the passed attribute.
 */
export declare const removeAttribute: (attr: Attr) => void;
/**
 * Remove the attribute if its value matches /^Mso/ regex.
 */
export declare const sanitizeClassAttr: (attr: Attr) => void;
/**
 * Removes invalid HTML styles.
 */
export declare const sanitizeStyleAttr: (attr: Attr) => void;
/**
 * Cleans the HTML based on passed settings.
 * Before using it, clean the HTML with the `sanitize` function.
 */
export declare const pasteCleanup: (html: string, settings: PasteCleanupSettings) => string;
/**
 * If the input HTML contains images with 'src' pointing to local file system (it happens when pasting images and text from MS Word),
 * the function will extract the image sources form the RTF and replace the image 'src' with extracted base64 format data in `html` string.
 *
 * @param html - The input HTML (pasted HTML).
 * @param clipboardData - The paste event clipboardData object (event.clipboardData).
 * @returns - The html with the replaced images sources.
 */
export declare const replaceImageSourcesFromRtf: (html: string, clipboardData: DataTransfer) => string;
