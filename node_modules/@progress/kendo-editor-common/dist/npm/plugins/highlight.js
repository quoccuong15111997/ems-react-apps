"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.textHighlight = exports.textHighlightKey = void 0;
var prosemirror_state_1 = require("prosemirror-state");
var prosemirror_view_1 = require("prosemirror-view");
// https://discuss.prosemirror.net/t/passing-data-between-plugins/1843
exports.textHighlightKey = new prosemirror_state_1.PluginKey('highlight');
function textHighlight(key) {
    if (key === void 0) { key = exports.textHighlightKey; }
    return new prosemirror_state_1.Plugin({
        key: key,
        state: {
            init: function () { return null; },
            apply: function (tr) { return tr.getMeta(this.spec.key); }
        },
        props: {
            decorations: function (state) {
                var decorations = (this.spec.key.getState(state) || [])
                    .map(function (d) { return prosemirror_view_1.Decoration.inline(d.from, d.to, d.attrs); });
                return prosemirror_view_1.DecorationSet.create(state.doc, decorations);
            }
        }
    });
}
exports.textHighlight = textHighlight;
